POST \'
{//NPRT-FILER-INFORMATION'@jannniccllene/julianm
// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.177.0/containers/javascript-node
{
	"name": "docs.github.com",
	"build": {
		"dockerfile": "Dockerfile",
		// Update 'VARIANT'@nazt.deb.rpdm-artifact'@P3T3RX/ASHLEY_PETERS ::
		/P#T#RX/PyPer/Javasro]i[t' to pick a Node version: 12, 14, 16
		"args": { "VARIANT": "16" }
	},

	// Set *default* container specific settings.json values on container create.
	"settings": { 
		"terminal.integrated.shell.linux": "
		"cSpell.language": ",en"
	},

	// Visual Studio Code extensions which help authoring for docs.github.com.
	"extensions": [
		"dbaeumer.vscode-eslint",
		"sissel.shopify-liquid",
		"davidanson.vscode-markdownlint",
		"bierner.markdown-preview-github-styles",
		"yzhang.markdown-all-in-one",
		"streetsidesoftware.code-spell-checker"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [4000],

	// Use 'postCreateCommand' to run commands after the container is created.
	 "postCreateCommand": "npm ci && npm run build",

	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "node"
}
7711        Department of the Treasury        Calendar Year                                                        Period Ending        9/29/2021                                                                                                                                        
-        Internal Revenue Service        Due 04/18/2022                2022 Form 1040-ES Payment Voucher 1                                        Pay Day        1/30/2022                                                                                                                                        
-        MOUNTAIN VIEW, C.A., 94043                                                                                                                                                                                                                
-        Taxable Marital Status  :                                                                                                                                                                                                                
-        Exemptions/Allowances :                                                                                                                                                                                                                
-        Federal :                                                                                                                                                                                                                
-        TX :  28        rate        units        this period        year to date        Other Benefits and                         ZACHRY T                                                                                                                                                
-        Current assets:                                0        Information                        WOOD                                                                                                                                                
-        Cash and cash equivalents        26465        18498                0        Total Work Hrs                                                                                                                                                                        
-        Marketable securities        110229        101177                0        Important Notes                        DALLAS                                                                                                                                                
-        Total cash, cash equivalents, and marketable securities        136694        119675                0        COMPANY PH/Y: 650-253-0000                                                0                                                                                                                        
-        Accounts receivable, net        30930        25326                0        BASIS OF PAY : BASIC/DILUTED  EPS                                                                                                                                                                        
-        Income taxes receivable, net        454        2166                0                                                                                                                                                                                
-        Inventory        728        999                0                                Pto Balance                                                                                                                                                
-        Other current assets        5490        4412                0                                                                                                                                                                                
-        Total current assets        174296        152578                0                                                                                                                                                                                
-        Non-marketable investments        20703        13078                0        70842743866                                                                                                                                                                        
-        Deferred income taxes        1084        721                0                                                                                                                                                                                
-        Property and equipment, net        84749        73646                0        $70,842,743,866.00                                                                                                                                                                         
-        Operating lease assets        12211        10941                0                                                                                                                                                                                
-        Intangible assets, net        1445        1979                0                                                                                                                                                                                
-        Goodwill        21175        20624                0                        Advice date :        650001                                                                                                                                                
-        Other non-current assets        3953        2342                0                        Pay date :        4/18/2022                                                                                                                                                
-        PLEASE READ THE IMPORTANT DISCLOSURES BELOW.        319616        275909                0                        :xxxxxxxxx6547        JAn 29th., 2022                                                                                                                                                
-        Paid to the account Of :                                0                                519                                                                                                                                                
-        Accounts payable        5589        5561                0                                NON-NEGOTIABLE                                                                                                                                                
-        Accrued compensation and benefits        11086        8495                0                                                                                                                                                                                
-        Accrued expenses and other current liabilities        28631        23067                0                                                                                                                                                                                
-        Accrued revenue share        7500        5916                0                                                                                                                                                                                
-        Deferred revenue        2543        1908                0                                                                                                                                                                                
-        Income taxes payable, net        1485        274                0                                                                                                                                                                                
-        Total current liabilities        56834        45221                0                                                                                                                                                                                
-        Long-term debt        13932        4554                0                                                                                                                                                                                
-        Deferred revenue, non-current        481        358                0                                                                                                                                                                                
-        Income taxes payable, non-current        8849        9885                0                                                                                                                                                                                
-        Deferred income taxes        3561        1701                0                                                                                                                                                                                
-                11146        10214                0                                                                                                                                                                                
-        Other long-term liabilities        2269        2534                0                                                                                                                                                                                
-        Total liabilities        97072        74467                0                                                                                                                                                                                
-        Commitments and Contingencies (Note 10)                                  0                                                                                                                                                                                
-        Stockholders’ equity:                                0                                                                                                                                                                                
-        Convertible preferred stock, $0.001 par value per share, 100,000 shares authorized; no shares issued and outstanding        0        0                0                                                                                                                                                                                
-        Class A and Class B common stock, and Class C capital stock and additional paid-in capital, $0.001 par value per share: 15,000,000 shares authorized (Class A 9,000,000, Class B 3,000,000, Class C 3,000,000); 688,335 (Class A 299,828, Class B 46,441, Class C 342,066) and 675,222 (Class A 300,730, Class B 45,843, Class C 328,649) shares issued and outstanding        58510        50552                0                                                                                                                                                                                
-        Accumulated other comprehensive income (loss)        633        -1232                0                                                                                                                                                                                
-        Retained earnings        163401        152122                0                                                                                                                                                                                
-        Total stockholders’ equity        222544        201442                0                                                                                                                                                                                
-        Total liabilities and stockholders’ equity        319616        275909                0                                                                                                                                                                                
-        Convertible preferred stock, par value (in dollars per share)        0.001        0.001                0                                                                                                                                                                                
-        Convertible preferred stock, shares authorized (in shares)        100000000        100000000                0                                                                                                                                                                                
-        Convertible preferred stock, shares issued (in shares)        0        0                0                                                                                                                                                                                
-        Convertible preferred stock, shares outstanding (in shares)        0        0                0                                                                                                                                                                                
-        Schedule II: Valuation and Qualifying Accounts (Details) - Allowance for doubtful accounts and sales credits - USD ($) $ in Millions        12 Months Ended                        0                                                                                                                                                                                
-                Dec. 31, 2020        Dec. 31, 2019        Dec. 31, 2018        0                                                                                                                                                                                
-        SEC Schedule, 12-09, Movement in Valuation Allowances and Reserves [Roll Forward]                                0                                                                                                                                                                                
-        Revenues (Narrative) (Details) - USD ($) $ in Billions        12 Months Ended                        0                                                                                                                                                                                
-                Dec. 31, 2020        Dec. 31, 2019                0                                                                                                                                                                                
-        Revenue from Contract with Customer [Abstract]                                0                                                                                                                                                                                
-        Deferred revenue                2.3                0                                                                                                                                                                                
-        Revenues recognized        1.8                        0                                                                                                                                                                                
-        Transaction price allocated to remaining performance obligations        29.8                        0                                                                                                                                                                                
-        Revenue, Remaining Performance Obligation, Expected Timing of Satisfaction, Start Date [Axis]: 2021-01-01                                0                                                                                                                                                                                
-        Revenue, Remaining Performance Obligation, Expected Timing of Satisfaction [Line Items]                                0                                                                                                                                                                                
-        Expected timing of revenue recognition        24 months                        0                                                                                                                                                                                
-        Expected timing of revenue recognition, percent        0.5                        0                                                                                                                                                                                
-        Revenue, Remaining Performance Obligation, Expected Timing of Satisfaction, Start Date [Axis]: 2023-01-01                                0                                                                                                                                                                                
-        Revenue, Remaining Performance Obligation, Expected Timing of Satisfaction [Line Items]                                0                                                                                                                                                                                
-        Expected timing of revenue recognition                                 0                                                                                                                                                                                
-        Expected timing of revenue recognition, percent        0.5                        0                                                                                                                                                                                
-        Information about Segments and Geographic Areas (Long-Lived Assets by Geographic Area) (Details) - USD ($) $ in Millions        Dec. 31, 2020        Dec. 31, 2019                0                                                                                                                                                                                
-        Revenues from External Customers and Long-Lived Assets [Line Items]                                0                                                                                                                                                                                
-        Long-lived assets        96960        84587                0                                                                                                                                                                                
-        United States                                0                                                                                                                                                                                
-        Revenues from External Customers and Long-Lived Assets [Line Items]                                0                                                                                                                                                                                
-        Long-lived assets        69315        63102                0                                                                                                                                                                                
-        International                                0                                                                                                                                                                                
-        Revenues from External Customers and Long-Lived Assets [Line Items]                                0                                                                                                                                                                                
-        Long-lived assets        27645        21485                0                                                                                                                                                                                
 20162017        2018        2019        2020        2021        TTM                                                                                                                                                        
-                2.23418E+11        2.42061E+11        2.25382E+11        3.27223E+11        2.86256E+11        3.54636E+11        3.54636E+11                                                                                                                                                        
-                45881000000        60597000000        57418000000        61078000000        63401000000        69478000000        69478000000                                                                                                                                                        
-                3143000000        3770000000        4415000000        4743000000        5474000000        6052000000        6052000000                                                                                                                                                        
-            Net Investment Income, Revenue        9531000000        13081000000        10565000000        17214000000        14484000000        8664000000        -14777000000        81847000000        48838000000        86007000000        86007000000                                                                                                                        
-                Realized Gain/Loss on Investments, Revenue        472000000        184000000        72000000        10000000        7553000000        1410000000        -22155000000        71123000000        40905000000        77576000000        77576000000                                                                                                                        
-                Gains/Loss on Derivatives, Revenue        1963000000        2608000000        506000000        974000000        751000000        718000000        -300000000        1484000000        -159000000        966000000        966000000                                                                                                                        
-                Interest Income, Revenue        6106000000        6408000000        6484000000        6867000000        6180000000        6536000000        7678000000        9240000000        8092000000        7465000000        7465000000                                                                                                                        
-                Other Investment Income, Revenue        990000000        3881000000        3503000000        9363000000                                                                                                                                                                                
-            Rental Income, Revenue                                        2553000000        2452000000        5732000000        5856000000        5209000000        5988000000        5988000000                                                                                                                        
-            Other Revenue        1.18387E+11        1.32385E+11        1.42881E+11        1.52435E+11        1.57357E+11        1.66578E+11        1.72594E+11        1.73699E+11        1.63334E+11        1.87111E+11        1.87111E+11                                                                                                                        
-        Total Expenses        -1.40227E+11        -1.53354E+11        -1.66594E+11        -1.75997E+11        -1.89751E+11        -2.18223E+11        -2.21381E+11        -2.24527E+11        -2.30563E+11        -2.4295E+11        -2.4295E+11                                                                                                                        
-            Benefits,Claims and Loss Adjustment Expense, Net        -25227000000        -26347000000        -31587000000        -31940000000        -36037000000        -54509000000        -45605000000        -49442000000        -49763000000        -55971000000        -55971000000                                                                                                                        
-                Policyholder Future Benefits and Claims, Net        -25227000000        -26347000000        -31587000000        -31940000000        -36037000000        -54509000000        -45605000000        -49442000000        -49763000000        -55971000000        -55971000000                                                                                                                        
-            Other Underwriting Expenses        -7693000000        -7248000000        -6998000000        -7517000000        -7713000000        -9321000000        -9793000000        -11200000000        -12798000000        -12569000000        -12569000000                                                                                                                        
-            Selling, General and Administrative Expenses        -11870000000        -13282000000        -13721000000        -15309000000        -19308000000        -20644000000        -21917000000        -23229000000        -23329000000        -23044000000        -23044000000                                                                                                                        
-                Rent Expense                                        -1335000000        -1455000000        -4061000000        -4003000000        -3520000000        -4201000000        -4201000000                                                                                                                        
-                Selling and Marketing Expenses        -11870000000        -13282000000        -13721000000        -15309000000        -17973000000        -19189000000        -17856000000        -19226000000        -19809000000        -18843000000        -18843000000                                                                                                                        
-            Other Income/Expenses        -92693000000        -1.03676E+11        -1.11009E+11        -1.17594E+11        -1.24061E+11        -1.32377E+11        -1.37664E+11        -1.37775E+11        -1.30645E+11        -1.48189E+11        -1.48189E+11                                                                                                                        
-            Total Net Finance Income/Expense        -2744000000        -2801000000        -3253000000        -3515000000        -3741000000        -4386000000        -3853000000        -3961000000        -4083000000        -4172000000        -4172000000                                                                                                                        
-                Net Interest Income/Expense        -2744000000        -2801000000        -3253000000        -3515000000        -3741000000        -4386000000        -3853000000        -3961000000        -4083000000        -4172000000        -4172000000                                                                                                                        
-                    Interest Expense Net of Capitalized Interest        -2744000000        -2801000000        -3253000000        -3515000000        -3741000000        -4386000000        -3853000000        -3961000000        -4083000000        -4172000000        -4172000000                                                                                                                        
-            Income from Associates, Joint Ventures and Other Participating Interests                        -26000000        -122000000        1109000000        3014000000        -2167000000        1176000000        726000000        995000000        995000000                                                                                                                        
-            Irregular Income/Expenses                                                        -382000000        -96000000        -10671000000        .        .                                                                                                                        
-                Impairment/Write Off/Write Down of Capital Assets                                                        -382000000        -96000000        -10671000000        .        .                                                                                                                        
-        Pretax Income        22236000000        28796000000        28105000000        34946000000        33667000000        23838000000        4001000000        1.02696E+11        55693000000        1.11686E+11        1.11686E+11                                                                                                                        
-        Provision for Income Tax        -6924000000        -8951000000        -7935000000        -10532000000        -9240000000        21515000000        321000000        -20904000000        -12440000000        -20879000000        -20879000000                                                                                                                        
-        Net Income from Continuing Operations        15312000000        19845000000        20170000000        24414000000        24427000000        45353000000        4322000000        81792000000        43253000000        90807000000        90807000000                                                                                                                        
-        Net Income after Extraordinary Items and Discontinued Operations        15312000000        19845000000        20170000000        24414000000        24427000000        45353000000        4322000000        81792000000        43253000000        90807000000        90807000000                                                                                                                        
-        Non-Controlling/Minority Interests        -488000000        -369000000        -298000000        -331000000        -353000000        -413000000        -301000000        -375000000        -732000000        -1012000000        -1012000000                                                                                                                        
-        Net Income after Non-Controlling/Minority Interests        14824000000        19476000000        19872000000        24083000000        24074000000        44940000000        4021000000        81417000000        42521000000        89795000000        89795000000                                                                                                                        
-        Net Income Available to Common Stockholders        14824000000        19476000000        19872000000        24083000000        24074000000        44940000000        4021000000        81417000000        42521000000        89795000000        89795000000                                                                                                                        
-        Diluted Net Income Available to Common Stockholders        14824000000        19476000000        19872000000        24083000000        24074000000        44940000000        4021000000        81417000000        42521000000        89795000000        89795000000                                                                                                                        
-        Income Statement Supplemental Section                                                                                                                                                                                                                
-            Reported Normalized and Operating Income/Expense Supplemental Section                                                                                                                                                                                                                
-                Total Revenue as Reported, Supplemental        1.62463E+11        1.8215E+11        1.94699E+11        2.10943E+11        2.15114E+11        2.39933E+11        2.47837E+11        2.54616E+11        2.4551E+11        2.76094E+11        2.76094E+11                                                                                                                        
-                Reported Effective Tax Rate                                0.16        0.14        0.07        -0.08        0.2        0.22        0.19        0.19                                                                                                                        
-        Basic EPS        8977        11850        12092        14656        14645        27326        2446        49828        26668        59460        59460                                                                                                                        
-            Basic EPS from Continuing Operations        8977        11850        12092        14656        14645        27326        2446        49828        26668        59460        59460                                                                                                                        
-        Diluted EPS        8975.82        11849.51        12086.01        14656        14645        27325.54        2444.36        49649.93        26200.81        58563.84        58563.84                                                                                                                        
-            Diluted EPS from Continuing Operations        8975.82        11849.51        12086.01        14656        14645        27325.54        2444.36        49649.93        26200.81        58563.84        58563.84                                                                                                                        
-        Basic Weighted Average Shares Outstanding        1651294        1643613        1643456        1643183        1643826        1644615        1643795        1633946        1594469        1510180        1510180                                                                                                                        
-        Diluted Weighted Average Shares Outstanding        1651549        1643613        1644215        1643183        1643826        1644615        1645008        1639821        1622889        1533284        1533284                                                                                                                        
-        Basic EPS        5.98        7.9        8.06        9.77        9.76        18.22        1.63        33.22        17.78        39.64        39.64                                                                                                                        
-        Diluted EPS        5.98        7.9        8.06        9.77        9.76        18.22        1.63        33.22        17.78        39.64        39.64                                                                                                                        
-        Basic WASO        2476939762        2465418267        2465182767        2464773268        2465737767        2466921267        2465691267        2450917775        2391702304        2265268867        2265268867                                                                                                                        
-        Diluted WASO        2476939762        2465418267        2465182767        2464773268        2465737767        2466921267        2465691267        2450917775        2391702304        2265268867        2265268867                                                                                                                        
-        Fiscal year ends in Dec 31 | USD                                                                                                                                                                                                                 
-                                                                                        total                                                                                                                                
-        GOOGL_income-statement_Quarterly_As_Originally_Reported        Q3 2019        Q4 2019        Q1 2020        Q2 2020        Q3 2020        Q4 2020        Q1 2021        Q2 2021        Q3 2021        Q4 2021        TTM                                                                                                                        
-        Gross Profit        22931000000        25055000000        22177000000        19744000000        25056000000        30818000000        31211000000        35653000000        37497000000        42337000000        1.46698E+11                                                                                                                        
-            Total Revenue        40499000000        46075000000        41159000000        38297000000        46173000000        56898000000        55314000000        61880000000        65118000000        75325000000        2.57637E+11                                                                                                                        
-                Business Revenue        34071000000        64133000000        41159000000        38297000000        46173000000        56898000000        55314000000        61880000000        65118000000        75325000000        2.57637E+11                                                                                                                        
-                Other Revenue        6428000000                                                                                                                                                                                                        
-            Cost of Revenue        -17568000000        -21020000000        -18982000000        -18553000000        -21117000000        -26080000000        -24103000000        -26227000000        -27621000000        -32988000000        -1.10939E+11                                                                                                                        
-                Cost of Goods and Services                        -18982000000                                                                -1.10939E+11                                                                                                                        
-        Operating Income/Expenses        -13754000000        -15789000000        -14200000000        -13361000000        -13843000000        -15167000000        -14774000000        -16292000000        -16466000000        -20452000000        -67984000000                                                                                                                        
-            Selling, General and Administrative Expenses        -7200000000        -8567000000        -7380000000        -6486000000        -6987000000        -8145000000        -7289000000        -8617000000        -8772000000        -11744000000        -36422000000                                                                                                                        
-                General and Administrative Expenses        -2591000000        -2829000000        -2880000000        -2585000000        -2756000000        -2831000000        -2773000000        -3341000000        -3256000000        -4140000000        -13510000000                                                                                                                        
-                Selling and Marketing Expenses        -4609000000        -5738000000        -4500000000        -3901000000        -4231000000        -5314000000        -4516000000        -5276000000        -5516000000        -7604000000        -22912000000                                                                                                                        
-            Research and Development Expenses        -6554000000        -7222000000        -6820000000        -6875000000        -6856000000        -7022000000        -7485000000        -7675000000        -7694000000        -8708000000        -31562000000                                                                                                                        
-        Total Operating Profit/Loss        9177000000        9266000000        7977000000        6383000000        11213000000        15651000000        16437000000        19361000000        21031000000        21885000000        78714000000                                                                                                                        
-        Non-Operating Income/Expenses, Total        -549000000        1438000000        -220000000        1894000000        2146000000        3038000000        4846000000        2624000000        2033000000        2517000000        12020000000                                                                                                                        
-            Total Net Finance Income/Expense        608000000        604000000        565000000        420000000        412000000        333000000        269000000        313000000        310000000        261000000        1153000000                                                                                                                        
-                Net Interest Income/Expense        608000000        604000000        565000000        420000000        412000000        333000000        269000000        313000000        310000000        261000000        1153000000                                                                                                                        
-                    Interest Expense Net of Capitalized Interest        -23000000        -17000000        -21000000        -13000000        -48000000        -53000000        -76000000        -76000000        -77000000        -117000000        -346000000                                                                                                                        
-                    Interest Income        631000000        621000000        586000000        433000000        460000000        386000000        345000000        389000000        387000000        378000000        1499000000                                                                                                                        
-            Net Investment Income        -1452000000        899000000        -809000000        1696000000        1957000000        3530000000        4869000000        2924000000        2207000000        2364000000        12364000000                                                                                                                        
-                Gain/Loss on Investments and Other Financial Instruments        -1479000000        399000000        -802000000        1842000000        2015000000        3262000000        4751000000        2883000000        2158000000        2478000000        12270000000                                                                                                                        
-                Income from Associates, Joint Ventures and Other Participating Interests        -14000000        460000000        74000000        -54000000        26000000        355000000        5000000        92000000        188000000        49000000        334000000                                                                                                                        
-                Gain/Loss on Foreign Exchange        41000000        40000000        -81000000        -92000000        -84000000        -87000000        113000000        -51000000        -139000000        -163000000        -240000000                                                                                                                        
-            Irregular Income/Expenses        0        0        0        0        0        0                                0        0                                                                                                                        
-                Other Irregular Income/Expenses        0        0        0        0        0        0                                0        0                                                                                                                        
-            Other Income/Expense, Non-Operating        295000000        -65000000        24000000        -222000000        -223000000        -825000000        -292000000        -613000000        -484000000        -108000000        -1497000000                                                                                                                        
-        Pretax Income        8628000000        10704000000        7757000000        8277000000        13359000000        18689000000        21283000000        21985000000        23064000000        24402000000        90734000000                                                                                                                        
-        Provision for Income Tax        -1560000000        -33000000        -921000000        -1318000000        -2112000000        -3462000000        -3353000000        -3460000000        -4128000000        -3760000000        -14701000000                                                                                                                        
-        Net Income from Continuing Operations        7068000000        10671000000        6836000000        6959000000        11247000000        15227000000        17930000000        18525000000        18936000000        20642000000        76033000000                                                                                                                        
-        Net Income after Extraordinary Items and Discontinued Operations        7068000000        10671000000        6836000000        6959000000        11247000000        15227000000        17930000000        18525000000        18936000000        20642000000        76033000000                                                                                                                        
-        Net Income after Non-Controlling/Minority Interests        7068000000        10671000000        6836000000        6959000000        11247000000        15227000000        17930000000        18525000000        18936000000        20642000000        76033000000                                                                                                                        
-        Net Income Available to Common Stockholders        7068000000        10671000000        6836000000        6959000000        11247000000        15227000000        17930000000        18525000000        18936000000        20642000000        76033000000                                                                                                                        
-        Diluted Net Income Available to Common Stockholders        7068000000        10671000000        6836000000        6959000000        11247000000        15227000000        17930000000        18525000000        18936000000        20642000000        76033000000                                                                                                                        
-        Income Statement Supplemental Section                                                                                                                                                                                                                
-            Reported Normalized and Operating Income/Expense Supplemental Section                                                                                                                                                                                                                
-                Total Revenue as Reported, Supplemental        40499000000        46075000000        41159000000        38297000000        46173000000        56898000000        55314000000        61880000000        65118000000        75325000000        2.57637E+11                                                                                                                        
-                Total Operating Profit/Loss as Reported, Supplemental        9177000000        9266000000        7977000000        6383000000        11213000000        15651000000        16437000000        19361000000        21031000000        21885000000        78714000000                                                                                                                        
-                Reported Effective Tax Rate        0.181                0        0.159        0.158                0.158        0.157        0.179                0.162                                                                                                                        
-                Reported Normalized Income                        6836000000                                                                                                                                                                                        
-                Reported Normalized Operating Profit                        7977000000                                                                                                                                                                                        
-        Other Adjustments to Net Income Available to Common Stockholders                                                                                                                                                                                                                
-        Discontinued Operations                                                                                                                                                                                                                
-        Basic EPS        10.2        15.49        9.96        10.21        16.55        22.54        26.63        27.69        28.44        31.15        113.88                                                                                                                        
-            Basic EPS from Continuing Operations        10.2        15.47        9.96        10.21        16.55        22.46        26.63        27.69        28.44        31.12        113.88                                                                                                                        
-            Basic EPS from Discontinued Operations                                                                                                                                                                                                                
-        Diluted EPS        10.12        15.35        9.87        10.13        16.4        22.3        26.29        27.26        27.99        30.69        112.2                                                                                                                        
-            Diluted EPS from Continuing Operations        10        15        10        10        16        22        26        27        28        31        112                                                                                                                        
-            Diluted EPS from Discontinued Operations                                                                                                                                                                                                                
-        Basic Weighted Average Shares Outstanding        692741000        688804000        686465000        681768000        679449000        675581000        673220000        668958000        665758000        662664000        667650000                                                                                                                        
-        Diluted Weighted Average Shares Outstanding        698199000        695193000        692267000        687024000        685851000        682969000        682071000        679612000        676519000        672493000        677674000                                                                                                                        
-        Reported Normalized Diluted EPS                        9.87                                                                                                                                                                                        
-        Basic EPS        10        15        10        10        17        23        27        28        28        31        114                                                                                                                        
-        Diluted EPS        10        15        10        10        16        22        26        27        28        31        112                                                                                                                        
-        Basic WASO        692741000        688804000        686465000        681768000        679449000        675581000        673220000        668958000        665758000        662664000        667650000                                                                                                                        
-        Diluted WASO        698199000        695193000        692267000        687024000        685851000        682969000        682071000        679612000        676519000        672493000        677674000                                                                                                                        
-        Fiscal year ends in Dec 31 | USD                                                                                         x           $2605.00                                                                                                                        
-        Price Par Share                                                                                        ______________________                                                                                                                        
-                Note: All watermarks and background images will be removed from your final document                                                                                                                                                                                                        
-                                                                                        CHECK AMOUNT        ****$70,842,745,000.00**                                                                                                                        
-                                                                                                                                                                                                                        
-                                                                                                                                                                                                                        
-                                                                                                                                                                                                                        
-                        16619000000        18659000000        23024000000        26572000000        36036000000        37091000000        47971000000        54520000000                                                                                                                                        
-                        16619000000        18659000000        23024000000        26572000000        36036000000        37091000000        47971000000        54520000000                                                                                                                                        
-                        16619000000        18659000000        23024000000        26572000000        36036000000        37091000000        47971000000        54520000000                                                                                                                                        
-        Gross Deductions                10737000000        12733000000        14136000000        16348000000        19478000000        12662000000        30736000000        34343000000                                                                                                                                        
-                        4984000000        5770000000        8216000000        10633000000        13258000000        15183000000        12327000000        19358000000                                                                                                                                        
-        Check No                2962000000        3939000000        4979000000        5063000000        6144000000        6915000000        9035000000        11781000000                                                                                                                                        
-                        2962000000        3939000000        4979000000        5063000000        6144000000        6915000000        9035000000        11781000000                                                                                                                                        
-        20220418                1988000000        2781000000        3523000000        4132000000        5267000000        6103000000        8164000000        10856000000        12905000000        11555000000                                                                                                                        
-                        974000000        1158000000        1456000000        931000000        877000000        812000000        871000000        925000000        792000000        886000000                                                                                                                        
-        Net Pay                2692000000        3343000000        4279000000        5203000000        6703000000        7679000000        9353000000        10794000000        12991000000        15376000000                                                                                                                        
-                        -266000000        -437000000        -104000000        -179000000        -38000000        258000000        778000000        173000000        1390000000        1808000000                                                                                                                        
-                        0        -166000000        -390000000        334000000        73000000        37000000        -6650000000        -2798000000        -6317000000        -12270000000                                                                                                                        
-                        0        -166000000        -390000000        334000000        73000000        37000000        -6650000000        -2798000000        -6317000000        -12270000000                                                                                                                        
-        YTD Net Pay                -28000000        272000000        192000000        212000000        376000000        294000000        -189000000        -592000000        1267000000        -213000000                                                                                                                        
-                        -188000000        -700000000        -740000000                                                                                                                                                                                
-                        -188000000        -700000000        -740000000                                                                                                                                                                                
-                        -188000000        -700000000        -740000000                                                                                                                                                                                
-                        -188000000        -481000000                                                                                                                                                                                        
-                        898000000        156000000        672000000        -409000000        3300000000        9246000000        4908000000        819000000        1827000000        -1523000000                                                                                                                        
-                        -787000000        -1307000000        -1641000000        -2094000000        -2578000000        -3768000000        -2169000000        -4340000000        -6524000000        -9095000000                                                                                                                        
-                        -787000000        -1307000000        -1641000000        -2094000000        -2578000000        -3768000000        -2169000000        -4340000000        -6524000000        -9095000000                                                                                                                        
-                                                -318000000        312000000        -2164000000        -1207000000        -621000000        -1330000000        -1846000000                                                                                                                        
-                        562000000        1572000000        1438000000        2139000000        2218000000        6577000000        10164000000        8871000000        7837000000        9269000000                                                                                                                        
-                        -499000000        605000000        436000000        203000000        110000000        731000000        1067000000        428000000        694000000        283000000                                                                                                                        
-                        -499000000        605000000        436000000        203000000        110000000        #SPILL!        1067000000        428000000        694000000        283000000                                                                                                                        
-        1 2                1061000000        967000000        1002000000        1936000000        2108000000        5846000000        9097000000        8443000000        7143000000        8986000000                                                                                                                        
-                        163000000        233000000        -175000000        43000000        223000000        390000000        371000000        37000000        635000000        774000000                                                                                                                        
-                        1492000000        588000000        591000000        -179000000        3125000000        8211000000        -2251000000        -3128000000        1209000000        -625000000                                                                                                                        
-                        -532000000        -930000000        459000000                                                                                                                                                                                
-        B                -13056000000        -13679000000        -21055000000        -23711000000        -31165000000        -31401000000        -28504000000        -29491000000        -32773000000        -35523000000                                                                                                                        
-                        -13056000000        -13679000000        -21055000000        -23711000000        -31165000000        -31401000000        -28504000000        -29491000000        -32773000000        -35523000000                                                                                                                        
-        100% Security Guaranteed                -3273000000        -7358000000        -10959000000        -9915000000        -9972000000        -13184000000        -25139000000        -23548000000        -22281000000        -24640000000                                                                                                                        
-        Purchase of Property, Plant and Equipment                -3273000000        -7358000000        -11014000000        -9950000000        -10212000000        -13184000000        -25139000000        -23548000000        -22281000000        -24640000000                                                                                                                        
-        Sale and Disposal of Property, Plant and Equipment                                55000000        35000000        240000000                                                                                                                                                                
-        Purchase/Sale of Business, Net                -10568000000        1077000000        -4502000000        -236000000        -986000000        -287000000        -1491000000        -2515000000        -738000000        -2618000000                                                                                                                        
-        Purchase/Acquisition of Business                -10568000000        -1448000000        -4888000000        -236000000        -986000000        -287000000        -1491000000        -2515000000        -738000000        -2618000000                                                                                                                        
-        Sale of Business                0        2525000000        386000000                                                                                                                                                                                
-        Purchase/Sale of Investments, Net                1119000000        -7099000000        -6997000000        -13210000000        -17779000000        -19448000000        -1972000000        -4017000000        -9822000000        -8806000000                                                                                                                        
-        Purchase of Investments                -34106000000        -46013000000        -58525000000        -76269000000        -85168000000        -93940000000        -52231000000        -1.02247E+11        -1.43751E+11        -1.38034E+11                                                                                                                        
-        Sale of Investments                35225000000        38914000000        51528000000        63059000000        67389000000        74492000000        50259000000        98230000000        1.33929E+11        1.29228E+11                                                                                                                        
-        Other Investing Cash Flow                -334000000        -299000000        1403000000        -350000000        -2428000000        99000000        98000000        589000000        68000000        541000000                                                                                                                        
-        Purchase/Sale of Other Non-Current Assets, Net                                        0        0        1419000000                                                                                                                                                        
-        Sales of Other Non-Current Assets                                        0        0        1419000000                                                                                                                                                        
-        Cash Flow from Financing Activities                1229000000        -857000000        -2087000000        -4225000000        -8332000000        -8298000000        -13179000000        -23209000000        -24408000000        -61362000000                                                                                                                        
-        Cash Flow from Continuing Financing Activities                1229000000        -857000000        -2087000000        -4225000000        -8332000000        -8298000000        -13179000000        -23209000000        -24408000000        -61362000000                                                                                                                        
-        Issuance of/Payments for Common Stock, Net                        0        0        -1780000000        -3693000000        -4846000000        -9075000000        -18396000000        -31149000000        -50274000000                                                                                                                        
-        Payments for Common Stock                        0        0        -1780000000        -3693000000        -4846000000        -9075000000        -18396000000        -31149000000        -50274000000                                                                                                                        
-        Proceeds from Issuance of Common Stock                                        0        0                                                                                                                                                                
-        Issuance of/Repayments for Debt, Net                1328000000        -557000000        -18000000        -23000000        -1335000000        -86000000        -61000000        -268000000        9661000000        -1236000000                                                                                                                        
-        Issuance of/Repayments for Long Term Debt, Net                1328000000        -557000000        -18000000        -23000000        -1335000000        -86000000        -61000000        -268000000        9661000000        -1236000000                                                                                                                        
-        Proceeds from Issuance of Long Term Debt                16109000000        10768000000        11625000000        13705000000        8729000000        4291000000        6766000000        317000000        11761000000        20199000000                                                                                                                        
-        Repayments for Long Term Debt                -14781000000        -11325000000        -11643000000        -13728000000        -10064000000        -4377000000        -6827000000        -585000000        -2100000000        -21435000000                                                                                                                        
-        Proceeds from Issuance/Exercising of Stock Options/Warrants                -287000000        -781000000        -2069000000        -2375000000        -3304000000        -4166000000        -4993000000        -4765000000        -5720000000        -10162000000                                                                                                                        
-         Other Financing Cash Flow                        0        0        -47000000                800000000        950000000        220000000        2800000000        310000000                                                                                                                        
-        Excess Tax Benefit from Share-Based Compensation, Financing Activities                188000000        481000000                                                                                                                                                                                        
-        Cash and Cash Equivalents, End of Period                14778000000        18898000000        18347000000        16549000000        12918000000        10715000000        16701000000        18498000000        26465000000        20945000000                                                                                                                        
-        Change in Cash                4792000000        4123000000        -118000000        -1364000000        -3461000000        -2608000000        6288000000        1820000000        7943000000        -5233000000                                                                                                                        
-        Effect of Exchange Rate Changes                3000000        -3000000        -433000000        -434000000        -170000000        405000000        -302000000        -23000000        24000000        -287000000                                                                                                                        
-        Cash and Cash Equivalents, Beginning of Period                9983000000        14778000000        18898000000        18347000000        16549000000        12918000000        10715000000        16701000000        18498000000        26465000000                                                                                                                        
-        Cash Flow Supplemental Section                                                                                                                                                                                                                
-        Change in Cash as Reported, Supplemental                4795000000        4120000000        -551000000        -1798000000        -3631000000        -2203000000        5986000000        1797000000        7967000000        -5520000000                                                                                                                        
-        Income Tax Paid, Supplemental                -2034000000        -1932000000        -3138000000        -3651000000        -1643000000        -6191000000        -5671000000        -8203000000        -4990000000        -13412000000                                                                                                                        
-        Interest Paid, Supplemental                -74000000        -72000000        -86000000        -96000000        -84000000                                                                                                                                                                
-        Fiscal year ends in Dec 31 | USD                                                                                                                                                                                                                
-                                                                                                                                                                                                                        
-        BRK.B_income-statement_Annual_Restated                2012        2013        2014        2015        2016        2017        2018        2019        2020        2021                                                                                                                        
-        Total Revenue                1.62463E+11        1.8215E+11        1.94699E+11        2.10943E+11        2.23418E+11        2.42061E+11        2.25382E+11        3.27223E+11        2.86256E+11        3.54636E+11                                                                                                                        
-        Net Premiums Earned                34545000000        36684000000        41253000000        41294000000        45881000000        60597000000        57418000000        61078000000        63401000000        69478000000                                                                                                                        
-        Fees and Commission Income                                                3143000000        3770000000        4415000000        4743000000        5474000000        6052000000                                                                                                                        
-        Net Investment Income, Revenue                9531000000        13081000000        10565000000        17214000000        14484000000        8664000000        -14777000000        81847000000        48838000000        86007000000                                                                                                                        
-        Realized Gain/Loss on Investments, Revenue                472000000        184000000        72000000        10000000        7553000000        1410000000        -22155000000        71123000000        40905000000        77576000000                                                                                                                        
-        Gains/Loss on Derivatives, Revenue                1963000000        2608000000        506000000        974000000        751000000        718000000        -300000000        1484000000        -159000000        966000000                                                                                                                        
-                Interest Income, Revenue                6106000000        6408000000        6484000000        6867000000        6180000000        6536000000        7678000000        9240000000        8092000000        7465000000                                                                                                                        
-                Other Investment Income, Revenue                990000000        3881000000        3503000000        9363000000                                                                                                                                                                        
-            Rental Income, Revenue                                                2553000000        2452000000        5732000000        5856000000        5209000000        5988000000                                                                                                                        
-            Other Revenue                1.18387E+11        1.32385E+11        1.42881E+11        1.52435E+11        1.57357E+11        1.66578E+11        1.72594E+11        1.73699E+11        1.63334E+11        1.87111E+11                                                                                                                        
-        Total Expenses                -1.40227E+11        -1.53354E+11        -1.66594E+11        -1.75997E+11        -1.89751E+11        -2.18223E+11        -2.21381E+11        -2.24527E+11        -2.30563E+11        -2.4295E+11                                                                                                                        
-            Benefits,Claims and Loss Adjustment Expense, Net                -25227000000        -26347000000        -31587000000        -31940000000        -36037000000        -54509000000        -45605000000        -49442000000        -49763000000        -55971000000                                                                                                                        
-                Policyholder Future Benefits and Claims, Net                -25227000000        -26347000000        -31587000000        -31940000000        -36037000000        -54509000000        -45605000000        -49442000000        -49763000000        -55971000000                                                                                                                        
-            Other Underwriting Expenses                -7693000000        -7248000000        -6998000000        -7517000000        -7713000000        -9321000000        -9793000000        -11200000000        -12798000000        -12569000000                                                                                                                        
-            Selling, General and Administrative Expenses                -11870000000        -13282000000        -13721000000        -15309000000        -19308000000        -20644000000        -21917000000        -23229000000        -23329000000        -23044000000                                                                                                                        
-                Rent Expense                                                -1335000000        -1455000000        -406100"                                                                                                        
diff --git a/DEPOSIT_TICKET b/DEPOSIT_TICKET                                                                                                        
deleted file mode 100644                                                                                                        
index a3cda30..0000000                                                                                                        
#NAME?                                                                                                        
+++ /dev/null                                                                                                        
@@ -1,1289 +0,0 @@                                                                                                        
-7711        Department of the Treasury        Calendar Year                                                        Period Ending        9/29/2021                        
-        Internal Revenue Service        Due 04/18/2022                2022 Form 1040-ES Payment Voucher 1                                        Pay Day        1/30/2022                        
-        MOUNTAIN VIEW, C.A., 94043                                                                                                
-        Taxable Marital Status  :                                                                                                
-        Exemptions/Allowances :                                                                                                
-        Federal :                                                                                                
-        TX :  28        rate        units        this period        year to date        Other Benefits and                         ZACHRY T                                
-        Current assets:                                0        Information                        WOOD                                
-        Cash and cash equivalents        26465        18498                0        Total Work Hrs                                                        
-        Marketable securities        110229        101177                0        Important Notes                        DALLAS                                
-        Total cash, cash equivalents, and marketable securities        136694        119675                0        COMPANY PH/Y: 650-253-0000                                                0        
-        Accounts receivable, net        30930        25326                0        BASIS OF PAY : BASIC/DILUTED  EPS                                                        
-        Income taxes receivable, net        454        2166                0                                                                
-        Inventory        728        999                0                                Pto Balance                                
-        Other current assets        5490        4412                0                                                                
-        Total current assets        174296        152578                0                                                                
-        Non-marketable investments        20703        13078                0        70842743866                                                        
-        Deferred income taxes        1084        721                0                                                                
-        Property and equipment, net        84749        73646                0        $70,842,743,866.00                                                         
-        Operating lease assets        12211        10941                0                                                                
-        Intangible assets, net        1445        1979                0                                                                
-        Goodwill        21175        20624                0                        Advice date :        650001                                
-        Other non-current assets        3953        2342                0                        Pay date :        4/18/2022                                
-        PLEASE READ THE IMPORTANT DISCLOSURES BELOW.        319616        275909                0                        :xxxxxxxxx6547        JAn 29th., 2022                                
-        Paid to the account Of :                                0                                519                                
-        Accounts payable        5589        5561                0                                NON-NEGOTIABLE                                
-        Accrued compensation and benefits        11086        8495                0                                                                
-        Accrued expenses and other current liabilities        28631        23067                0                                                                
-        Accrued revenue share        7500        5916                0                                                                
-        Deferred revenue        2543        1908                0                                                                
-        Income taxes payable, net        1485        274                0                                                                
-        Total current liabilities        56834        45221                0                                                                
-        Long-term debt        13932        4554                0                                                                
-        Deferred revenue, non-current        481        358                0                                                                
-        Income taxes payable, non-current        8849        9885                0                                                                
-        Deferred income taxes        3561        1701                0                                                                
-                11146        10214                0                                                                
-        Other long-term liabilities        2269        2534                0                                                                
-        Total liabilities        97072        74467                0                                                                
-        Commitments and Contingencies (Note 10)                                  0                                                                
-        Stockholders’ equity:                                0                                                                
-        Convertible preferred stock, $0.001 par value per share, 100,000 shares authorized; no shares issued and outstanding        0        0                0                                                                
-        Class A and Class B common stock, and Class C capital stock and additional paid-in capital, $0.001 par value per share: 15,000,000 shares authorized (Class A 9,000,000, Class B 3,000,000, Class C 3,000,000); 688,335 (Class A 299,828, Class B 46,441, Class C 342,066) and 675,222 (Class A 300,730, Class B 45,843, Class C 328,649) shares issued and outstanding        58510        50552                0                                                                
-        Accumulated other comprehensive income (loss)        633        -1232                0                                                                
-        Retained earnings        163401        152122                0                                                                
-        Total stockholders’ equity        222544        201442                0                                                                
-        Total liabilities and stockholders’ equity        319616        275909                0                                                                
-        Convertible preferred stock, par value (in dollars per share)        0.001        0.001                0                                                                
-        Convertible preferred stock, shares authorized (in shares)        100000000        100000000                0                                                                
-        Convertible preferred stock, shares issued (in shares)        0        0                0                                                                
-        Convertible preferred stock, shares outstanding (in shares)        0        0                0                                                                
-        Schedule II: Valuation and Qualifying Accounts (Details) - Allowance for doubtful accounts and sales credits - USD ($) $ in Millions        12 Months Ended                        0                                                                
-                Dec. 31, 2020        Dec. 31, 2019        Dec. 31, 2018        0                                                                
-        SEC Schedule, 12-09, Movement in Valuation Allowances and Reserves [Roll Forward]                                0                                                                
-        Revenues (Narrative) (Details) - USD ($) $ in Billions        12 Months Ended                        0                                                                
-                Dec. 31, 2020        Dec. 31, 2019                0                                                                
-        Revenue from Contract with Customer [Abstract]                                0                                                                
-        Deferred revenue                2.3                0                                                                
-        Revenues recognized        1.8                        0                                                                
-        Transaction price allocated to remaining performance obligations        29.8                        0                                                                
-        Revenue, Remaining Performance Obligation, Expected Timing of Satisfaction, Start Date [Axis]: 2021-01-01                                0                                                                
-        Revenue, Remaining Performance Obligation, Expected Timing of Satisfaction [Line Items]                                0                                                                
-        Expected timing of revenue recognition        24 months                        0                                                                
-        Expected timing of revenue recognition, percent        0.5                        0                                                                
-        Revenue, Remaining Performance Obligation, Expected Timing of Satisfaction, Start Date [Axis]: 2023-01-01                                0                                                                
-        Revenue, Remaining Performance Obligation, Expected Timing of Satisfaction [Line Items]                                0                                                                
-        Expected timing of revenue recognition                                 0                                                                
-        Expected timing of revenue recognition, percent        0.5                        0                                                                
-        Information about Segments and Geographic Areas (Long-Lived Assets by Geographic Area) (Details) - USD ($) $ in Millions        Dec. 31, 2020        Dec. 31, 2019                0                                                                
-        Revenues from External Customers and Long-Lived Assets [Line Items]                                0                                                                
-        Long-lived assets        96960        84587                0                                                                
-        United States                                0                                                                
-        Revenues from External Customers and Long-Lived Assets [Line Items]                                0                                                                
-        Long-lived assets        69315        63102                0                                                                
-        International                                0                                                                
-        Revenues from External Customers and Long-Lived Assets [Line Items]                                0                                                                
-        Long-lived assets        27645        21485                0                                                                
-                2016        2.02E+03        2.02E+03        2.02E+03        2.02E+03        2.02E+03        TTM                                        
-                2.23E+11        2.42E+11        2.25E+11        3.27E+11        2.86E+11        3.55E+11        3.55E+11                                        
-                45881000000        60597000000        57418000000        61078000000        63401000000        69478000000        69478000000                                        
-                3143000000        3770000000        4415000000        4743000000        5474000000        6052000000        6052000000                                        
-            Net Investment Income, Revenue        9531000000        13081000000        10565000000        17214000000        14484000000        8664000000        -14777000000        81847000000        48838000000        86007000000        86007000000        
-                Realized Gain/Loss on Investments, Revenue        472000000        184000000        72000000        10000000        7553000000        1410000000        -22155000000        71123000000        40905000000        77576000000        77576000000        
-                Gains/Loss on Derivatives, Revenue        1963000000        2608000000        506000000        974000000        751000000        718000000        -300000000        1484000000        -159000000        966000000        966000000        
-                Interest Income, Revenue        6106000000        6408000000        6484000000        6867000000        6180000000        6536000000        7678000000        9240000000        8092000000        7465000000        7465000000        
-                Other Investment Income, Revenue        990000000        3881000000        3503000000        9363000000                                                                
-            Rental Income, Revenue                                        2.55E+09        2.45E+09        5.73E+09        5.86E+09        5.21E+09        5.99E+09        5.99E+09        
-            Other Revenue        1.18E+11        1.32E+11        1.43E+11        1.52E+11        1.57E+11        1.67E+11        1.73E+11        1.74E+11        1.63E+11        1.87E+11        1.87E+11        
-        Total Expenses        -1.40E+11        -1.53E+11        -1.67E+11        -1.76E+11        -1.90E+11        -2.18E+11        -2.21E+11        -2.25E+11        -2.31E+11        -2.43E+11        -2.43E+11        
-            Benefits,Claims and Loss Adjustment Expense, Net        -25227000000        -26347000000        -31587000000        -31940000000        -36037000000        -54509000000        -45605000000        -49442000000        -49763000000        -55971000000        -55971000000        
-                Policyholder Future Benefits and Claims, Net        -25227000000        -26347000000        -31587000000        -31940000000        -36037000000        -54509000000        -45605000000        -49442000000        -49763000000        -55971000000        -55971000000        
-            Other Underwriting Expenses        -7693000000        -7248000000        -6998000000        -7517000000        -7713000000        -9321000000        -9793000000        -11200000000        -12798000000        -12569000000        -12569000000        
-            Selling, General and Administrative Expenses        -11870000000        -13282000000        -13721000000        -15309000000        -19308000000        -20644000000        -21917000000        -23229000000        -23329000000        -23044000000        -23044000000        
-                Rent Expense                                        -1335000000        -1455000000        -4061000000        -4003000000        -3520000000        -4201000000        -4201000000        
-                Selling and Marketing Expenses        -11870000000        -13282000000        -1.37E+10        -1.53E+10        -1.80E+10        -1.92E+10        -1.79E+10        -1.92E+10        -1.98E+10        -1.88E+10        -1.88E+10        
-            Other Income/Expenses        -92693000000        -1.04E+11        -1.11E+11        -1.18E+11        -1.24E+11        -1.32E+11        -1.38E+11        -1.38E+11        -1.31E+11        -1.48E+11        -1.48E+11        
-            Total Net Finance Income/Expense        -2744000000        -2801000000        -3253000000        -3515000000        -3741000000        -4386000000        -3853000000        -3961000000        -4083000000        -4172000000        -4172000000        
-                Net Interest Income/Expense        -2744000000        -2801000000        -3253000000        -3515000000        -3741000000        -4386000000        -3853000000        -3961000000        -4083000000        -4172000000        -4172000000        
-                    Interest Expense Net of Capitalized Interest        -2744000000        -2801000000        -3253000000        -3515000000        -3741000000        -4386000000        -3853000000        -3961000000        -4083000000        -4172000000        -4172000000        
-            Income from Associates, Joint Ventures and Other Participating Interests                        -26000000        -122000000        1109000000        3014000000        -2167000000        1176000000        726000000        995000000        995000000        
-            Irregular Income/Expenses                                                        -382000000        -96000000        -10671000000        .        .        
-                Impairment/Write Off/Write Down of Capital Assets                                                        -382000000        -96000000        -1.07E+10        .        .        
-        Pretax Income        22236000000        28796000000        28105000000        34946000000        33667000000        23838000000        4001000000        1.03E+11        55693000000        1.12E+11        1.12E+11        
-        Provision for Income Tax        -6924000000        -8951000000        -7935000000        -10532000000        -9240000000        21515000000        321000000        -20904000000        -12440000000        -20879000000        -20879000000        
-        Net Income from Continuing Operations        15312000000        19845000000        20170000000        24414000000        24427000000        45353000000        4322000000        81792000000        43253000000        90807000000        90807000000        
-        Net Income after Extraordinary Items and Discontinued Operations        15312000000        19845000000        20170000000        24414000000        24427000000        45353000000        4322000000        81792000000        43253000000        90807000000        90807000000        
-        Non-Controlling/Minority Interests        -488000000        -369000000        -298000000        -331000000        -353000000        -413000000        -301000000        -375000000        -732000000        -1012000000        -1012000000        
-        Net Income after Non-Controlling/Minority Interests        14824000000        19476000000        19872000000        24083000000        24074000000        44940000000        4021000000        81417000000        42521000000        89795000000        89795000000        
-        Net Income Available to Common Stockholders        14824000000        19476000000        19872000000        24083000000        24074000000        44940000000        4021000000        81417000000        42521000000        89795000000        89795000000        
-        Diluted Net Income Available to Common Stockholders        14824000000        19476000000        19872000000        24083000000        24074000000        44940000000        4021000000        81417000000        42521000000        89795000000        89795000000        
-        Income Statement Supplemental Section                                                                                                
-            Reported Normalized and Operating Income/Expense Supplemental Section                                                                                                
-                Total Revenue as Reported, Supplemental        1.62E+11        1.82E+11        1.95E+11        2.11E+11        2.15E+11        2.40E+11        2.48E+11        2.55E+11        2.46E+11        2.76E+11        2.76E+11        
-                Reported Effective Tax Rate                                0.16        0.14        0.07        -0.08        0.2        0.22        0.19        0.19        
-        Basic EPS        8977        11850        12092        14656        14645        27326        2446        49828        26668        59460        59460        
-            Basic EPS from Continuing Operations        8977        11850        12092        14656        14645        27326        2446        49828        26668        59460        59460        
-        Diluted EPS        8975.82        11849.51        12086.01        14656        14645        27325.54        2444.36        49649.93        26200.81        58563.84        58563.84        
-            Diluted EPS from Continuing Operations        8975.82        11849.51        12086.01        14656        14645        27325.54        2444.36        49649.93        26200.81        58563.84        58563.84        
-        Basic Weighted Average Shares Outstanding        1651294        1643613        1643456        1643183        1643826        1644615        1643795        1633946        1594469        1510180        1510180        
-        Diluted Weighted Average Shares Outstanding        1651549        1643613        1644215        1643183        1643826        1644615        1645008        1639821        1622889        1533284        1533284        
-        Basic EPS        5.98        7.9        8.06        9.77        9.76        18.22        1.63        33.22        17.78        39.64        39.64        
-        Diluted EPS        5.98        7.9        8.06        9.77        9.76        18.22        1.63        33.22        17.78        39.64        39.64        
-        Basic WASO        2476939762        2465418267        2465182767        2464773268        2465737767        2466921267        2465691267        2450917775        2391702304        2265268867        2265268867        
-        Diluted WASO        2476939762        2465418267        2465182767        2464773268        2465737767        2466921267        2465691267        2450917775        2391702304        2265268867        2265268867        
-        Fiscal year ends in Dec 31 | USD                                                                                                 
-                                                                                        total                
-        GOOGL_income-statement_Quarterly_As_Originally_Reported        Q3 2019        Q4 2019        Q1 2020        Q2 2020        Q3 2020        Q4 2020        Q1 2021        Q2 2021        Q3 2021        Q4 2021        TTM        
-        Gross Profit        22931000000        25055000000        22177000000        19744000000        25056000000        30818000000        31211000000        35653000000        37497000000        42337000000        1.47E+11        
-            Total Revenue        40499000000        46075000000        41159000000        38297000000        46173000000        56898000000        55314000000        61880000000        65118000000        75325000000        2.58E+11        
-                Business Revenue        34071000000        64133000000        41159000000        38297000000        46173000000        56898000000        55314000000        61880000000        65118000000        75325000000        2.58E+11        
-                Other Revenue        6428000000                                                                                        
-            Cost of Revenue        -17568000000        -21020000000        -18982000000        -18553000000        -21117000000        -26080000000        -24103000000        -26227000000        -27621000000        -32988000000        -1.11E+11        
-                Cost of Goods and Services                        -18982000000                                                                -1.11E+11        
-        Operating Income/Expenses        -13754000000        -15789000000        -14200000000        -13361000000        -13843000000        -15167000000        -14774000000        -16292000000        -16466000000        -20452000000        -67984000000        
-            Selling, General and Administrative Expenses        -7200000000        -8567000000        -7380000000        -6486000000        -6987000000        -8145000000        -7289000000        -8617000000        -8772000000        -11744000000        -36422000000        
-                General and Administrative Expenses        -2591000000        -2829000000        -2880000000        -2585000000        -2756000000        -2831000000        -2773000000        -3341000000        -3256000000        -4140000000        -13510000000        
-                Selling and Marketing Expenses        -4609000000        -5738000000        -4500000000        -3901000000        -4231000000        -5314000000        -4516000000        -5276000000        -5516000000        -7604000000        -22912000000        
-            Research and Development Expenses        -6554000000        -7222000000        -6820000000        -6875000000        -6856000000        -7022000000        -7485000000        -7675000000        -7694000000        -8708000000        -31562000000        
-        Total Operating Profit/Loss        9177000000        9266000000        7977000000        6383000000        11213000000        15651000000        16437000000        19361000000        21031000000        21885000000        78714000000        
-        Non-Operating Income/Expenses, Total        -549000000        1438000000        -220000000        1894000000        2146000000        3038000000        4846000000        2624000000        2033000000        2517000000        12020000000        
-            Total Net Finance Income/Expense        608000000        604000000        565000000        420000000        412000000        333000000        269000000        313000000        310000000        261000000        1153000000        
-                Net Interest Income/Expense        608000000        604000000        565000000        420000000        412000000        333000000        269000000        313000000        310000000        261000000        1153000000        
-                    Interest Expense Net of Capitalized Interest        -23000000        -17000000        -21000000        -13000000        -48000000        -53000000        -76000000        -76000000        -77000000        -117000000        -346000000        
-                    Interest Income        631000000        621000000        586000000        433000000        460000000        386000000        345000000        389000000        387000000        378000000        1499000000        
-            Net Investment Income        -1452000000        899000000        -809000000        1696000000        1957000000        3530000000        4869000000        2924000000        2207000000        2364000000        12364000000        
-                Gain/Loss on Investments and Other Financial Instruments        -1479000000        399000000        -802000000        1842000000        2015000000        3262000000        4751000000        2883000000        2158000000        2478000000        12270000000        
-                Income from Associates, Joint Ventures and Other Participating Interests        -14000000        460000000        74000000        -54000000        26000000        355000000        5000000        92000000        188000000        49000000        334000000        
-                Gain/Loss on Foreign Exchange        41000000        40000000        -81000000        -92000000        -84000000        -87000000        113000000        -51000000        -139000000        -163000000        -240000000        
-            Irregular Income/Expenses        0        0        0        0        0        0                                0        0        
-                Other Irregular Income/Expenses        0        0        0        0        0        0                                0        0        
-            Other Income/Expense, Non-Operating        295000000        -65000000        24000000        -222000000        -223000000        -825000000        -292000000        -613000000        -484000000        -108000000        -1497000000        
-        Pretax Income        8628000000        10704000000        7757000000        8277000000        13359000000        18689000000        21283000000        21985000000        23064000000        24402000000        90734000000        
-        Provision for Income Tax        -1560000000        -33000000        -921000000        -1318000000        -2112000000        -3462000000        -3353000000        -3460000000        -4128000000        -3760000000        -14701000000        
-        Net Income from Continuing Operations        7068000000        10671000000        6836000000        6959000000        11247000000        15227000000        17930000000        18525000000        18936000000        20642000000        76033000000        
-        Net Income after Extraordinary Items and Discontinued Operations        7068000000        10671000000        6836000000        6959000000        11247000000        15227000000        17930000000        18525000000        18936000000        20642000000        76033000000        
-        Net Income after Non-Controlling/Minority Interests        7068000000        10671000000        6836000000        6959000000        11247000000        15227000000        17930000000        18525000000        18936000000        20642000000        76033000000        
-        Net Income Available to Common Stockholders        7068000000        10671000000        6836000000        6959000000        11247000000        15227000000        17930000000        18525000000        18936000000        20642000000        76033000000        
-        Diluted Net Income Available to Common Stockholders        7068000000        10671000000        6836000000        6959000000        11247000000        15227000000        17930000000        18525000000        18936000000        20642000000        76033000000        
-        Income Statement Supplemental Section                                                                                                
-            Reported Normalized and Operating Income/Expense Supplemental Section                                                                                                
-                Total Revenue as Reported, Supplemental        40499000000        46075000000        41159000000        38297000000        46173000000        56898000000        55314000000        61880000000        65118000000        75325000000        2.58E+11        
-                Total Operating Profit/Loss as Reported, Supplemental        9177000000        9266000000        7977000000        6383000000        11213000000        15651000000        16437000000        19361000000        21031000000        21885000000        78714000000        
-                Reported Effective Tax Rate        0.181                0        0.159        0.158                0.158        0.157        0.179                0.162        
-                Reported Normalized Income                        6836000000                                                                        
-                Reported Normalized Operating Profit                        7977000000                                                                        
-        Other Adjustments to Net Income Available to Common Stockholders                                                                                                
-        Discontinued Operations                                                                                                
-        Basic EPS        10.2        15.49        9.96        10.21        16.55        22.54        26.63        27.69        28.44        31.15        113.88        
-            Basic EPS from Continuing Operations        10.2        15.47        9.96        10.21        16.55        22.46        26.63        27.69        28.44        31.12        113.88        
-            Basic EPS from Discontinued Operations                                                                                                
-        Diluted EPS        10.12        15.35        9.87        10.13        16.4        22.3        26.29        27.26        27.99        30.69        112.2        
-            Diluted EPS from Continuing Operations        10        15        10        10        16        22        26        27        28        31        112        
-            Diluted EPS from Discontinued Operations                                                                                                
-        Basic Weighted Average Shares Outstanding        692741000        688804000        686465000        681768000        679449000        675581000        673220000        668958000        665758000        662664000        667650000        
-        Diluted Weighted Average Shares Outstanding        698199000        695193000        692267000        687024000        685851000        682969000        682071000        679612000        676519000        672493000        677674000        
-        Reported Normalized Diluted EPS                        9.87                                                                        
-        Basic EPS        10        15        10        10        17        23        27        28        28        31        114        
-        Diluted EPS        10        15        10        10        16        22        26        27        28        31        112        
-        Basic WASO        692741000        688804000        686465000        681768000        679449000        675581000        673220000        668958000        665758000        662664000        667650000        
-        Diluted WASO        698199000        695193000        692267000        687024000        685851000        682969000        682071000        679612000        676519000        672493000        677674000        
-        Fiscal year ends in Dec 31 | USD                                                                                         x           $2605.00        
-        Price Par Share                                                                                        ______________________        
-                Note: All watermarks and background images will be removed from your final document                                                                                        
-                                                                                        CHECK AMOUNT        ****$70,842,745,000.00**        
-                                                                                                        
-                                                                                                        
-                                                                                                        
-                        16619000000        18659000000        23024000000        26572000000        36036000000        37091000000        47971000000        54520000000                        *include interest paid, capital obligation, and underweighting                        22677000000                        19289000000                
1,388 EDGAR filings since October 2, 2015                                                                
10-K                Annual report [Section 13 and 15(d), not S-K Item 405]Open document FilingOpen filing                44594        2021-12-31View all with same reporting date                        
10-Q                Quarterly report [Sections 13 or 15(d)]Open document FilingOpen filing                44496        2021-09-30View all with same reporting date                        
10-Q                Quarterly report [Sections 13 or 15(d)]Open document FilingOpen filing                44405        2021-06-30View all with same reporting date                        
12 Months Ended                                                                
1600 AMPHIITHEATRE PARKWAY,  MOINTAIN VIEW, CA, 94043                                                                
1600 AMPHITHEATRE PARKWAY, MOUNTAIN VIEW, CA, 94043                                                                
1600 AMPIHTHEATRE  PARKWAY MOUNTAIN VIEW CA 94043                                                                Pay date:_
1600 AMPITHEATRE PARKWAY                        DR                                        Period Ending:
4/A                Statement of changes in beneficial ownership of securities - amendmentOpen document FilingOpen filing                44642        2022-03-18View all with same reporting date                        
4/A                Statement of changes in beneficial ownership of securities - amendmentOpen document FilingOpen filing                44523        2021-11-11View all with same reporting date                        
5323 BRADFORD DR                                                                
61-1767919                                                                
7370 - Services-Computer Programming, Data Processing, Etc.                                                                
8-K                Current reportOpen document FilingOpen filing                44593        2022-02-01View all with same reporting date                        
8-K                Current reportOpen document FilingOpen filing                44565        2021-12-28View all with same reporting date                        
8-K                Current reportOpen document FilingOpen filing                44495        2021-10-26View all with same reporting date                        
8-K                Current reportOpen document FilingOpen filing                44404        2021-07-27View all with same reporting date                        
8-K                Current reportOpen document FilingOpen filing                44385        2021-07-07View all with same reporting date                        
Accession number                                                                
Act                                                                
Adjustment Payment to Class C        36,355        32,669        25,611        22,198        18,030                        
ALPHABET                                                                Period Beginning:
ALPHABET                                                                
Alphabet Inc.                                        $134,839                        
Alphabet Inc. GOOGL, GOOG on Nasdaq                                                                
ALPHABET INCOME                                                                Advice number:
Amortization, Non-Cash Adjustment                3215000000        3085000000        2730000000        2525000000        3539000000                
Ann. Rev. Date        161,857        136,819        110,855        90,272        74,989                        
Based on facts as set forth in.                        6550                                        
Based on: 10-K (filing date: 2020-02-04), 10-K (filing date: 2019-02-05), 10-K (filing date: 2018-02-06), 10-K (filing date: 2017-02-03), 10-K (filing date: 2016-02-11).                                                                
Basic EPS        113.88        31.15        28.44        27.69        26.63        22.54        16.55        10.21
Basic EPS        113.88        31.15        28.44        27.69        26.63        22.54        16.55        10.21
Basic EPS from Continuing Operations        113.88        31.12        28.44        27.69        26.63        22.46        16.55        10.21
Basic EPS from Discontinued Operations                                                                
Basic net income per share of Class A and B common stock and Class C capital stock (in dollars par share)                                                                
Basic WASO        667650000        662664000        665758000        668958000        673220000        675581000        679449000        681768000
Basic Weighted Average Shares Outstanding        667650000        662664000        665758000        668958000        673220000        675581000        679449000        681768000
Before you Invest, Investor.gov                                                                
Business address:                                                                
CA                                                                
Cash and Cash Equivalents, Beginning of Period                25930000000        235000000000)        -3175000000        300000000        6126000000                
Cash and Cash Equivalents, Beginning of Period                13412000000        157000000                        -4990000000                
Cash and Cash Equivalents, End of Period                                                                
Cash Flow from Continuing Financing Activities                -16511000000        -15254000000        -15991000000        -13606000000        -9270000000                
Cash Flow from Continuing Investing Activities                -11016000000                -9074000000        -5383000000        -7281000000                
Cash Flow from Financing Activities                                                                
Cash Flow from Investing Activities                                                                
Cash Flow from Operating Activities, Indirect                                                                
Cash Flow Supplemental Section                181000000000)        -146000000000)        183000000        -143000000        210000000                
Cash Generated from Operating Activities                24934000000        25539000000        21890000000        19289000000        22677000000                
Category:                                                                
Change in Accrued Expenses                1157000000        238000000        -130000000        -982000000        963000000                
Change in Cash                0                300000000        10000000        338000000000)                
Change in Cash as Reported, Supplemental                23719000000000        23630000000000        26622000000000        26465000000000        20129000000000                
Change in Deferred Assets/Liabilities                5837000000        2919000000        4204000000        -3974000000        5975000000                
Change in Other Current Assets                -5819000000        -2409000000        -3661000000        2794000000        -5445000000                
Change in Other Operating Capital                368000000        272000000        -3000000        137000000        207000000                
Change in Payables and Accrued Expenses                -399000000        -1255000000        -199000000        7000000        -738000000                
Change in Prepayments and Deposits                -3369000000        3041000000        -1082000000        785000000        740000000                
Change in Trade and Other Payables                6994000000        3157000000        4074000000        -4956000000        6938000000                
Change in Trade and Other Receivables                -2225000000        2806000000        -871000000        -1233000000        1702000000                
Change in Trade/Accounts Payable                1157000000        238000000        -130000000        -982000000        963000000                
Change in Trade/Accounts Receivable                -5819000000        -2409000000        -3661000000        2794000000        -5445000000                
Changes in Operating Capital                -14000000        64000000        -8000000        -255000000        392000000                
CHECKING                                                                
CIK:                                                                
Cost of Goods and Services        -110939000000        -32988000000        -27621000000        -26227000000        -24103000000        -26080000000        -21117000000        -18553000000
Cost of Revenue        -110939000000        -32988000000        -27621000000        -26227000000        -24103000000        -26080000000        -21117000000        -18553000000
Cost of revenues        89,961        77,270        65,272        55,134        46,825                        
Cost of revenues                        182527                        161857                
Costs and expenses:                                                                
DALLAS TX 75235-8314                                                                
Data source: CIK0001652044.json                                                                
DE                                                                
Deposited to the account Of                                                                xxxxxxxx6547
Depreciation and Amortization, Non-Cash Adjustment                3439000000        3304000000        2945000000        2753000000        3725000000                
Depreciation, Amortization and Depletion, Non-Cash Adjustment                6517000000        3797000000        4236000000        2592000000        5748000000                
Depreciation, Non-Cash Adjustment                3439000000        3304000000        2945000000        2753000000        3725000000                
Diluted EPS        112.2        30.69        27.99        27.26        26.29        22.3        16.4        10.13
Diluted EPS        112.2        30.69        27.99        27.26        26.29        22.3        16.4        10.13
Diluted EPS from Continuing Operations        112.2        30.67        27.99        27.26        26.29        22.23        16.4        10.13
Diluted EPS from Discontinued Operations                                                                
Diluted Net Income Available to Common Stockholders        76033000000        20642000000        18936000000        18525000000        17930000000        15227000000        11247000000        6959000000
Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)                                                                
Diluted WASO        677674000        672493000        676519000        679612000        682071000        682969000        685851000        687024000
Diluted Weighted Average Shares Outstanding        677674000        672493000        676519000        679612000        682071000        682969000        685851000        687024000
Discontinued Operations                                                                
Effect of Exchange Rate Changes                20945000000        23719000000        23630000000        26622000000        26465000000                
EIN:                                                                
EMPLOYER IDENTIFICATION NUMBER:       61-1767919                        6551                                        
EPS        112        674,678,000                                        75698871600        Information
European Commission fines        34,231        26,321        26,146        23,716        19,360                        
European Commission fines                        17946                        18464                
February 11, 2022 - SC 13G/A: Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                                                                
February 11, 2022 - SC 13G/A: Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                                                                
February 14, 2022 - SC 13G/A: Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                                                                
February 9, 2022 - SC 13G/A: Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                                                                
Federal Income Tax                                                                
Federal:                                                                
File number                                                                
Filing date                                                                
Filings                                                                
Filings:                                                                
Film number                                                                
Fiscal year end September 28th., 2022. | USD                                                                
Fiscal year end:                                                                
For Paperwork Reduction Act Notice, see the seperate Instructions.                                                                
Foreign currency exchange gain        149        1,190        -110        -53        â                        
Form description                                                                
Form type                                                                
Form type                Form description        Filing date        Reporting date                                
Form type                Form description                Filing date        Reporting date                        
Gain (loss) on debt securities        2,649        5,460        73        -20        â                        
Gain (loss) on equity securities,        -326        â        â        â        â                        
Gain(loss)        102        378        158        88        -182                        
Gain/Loss on Financial Instruments, Non-Cash Adjustment                -2478000000        -2158000000        -2883000000        -4751000000        -3262000000                
Gain/Loss on Foreign Exchange        -240000000        -163000000        -139000000        -51000000        113000000        -87000000        -84000000        -92000000
Gain/Loss on Investments and Other Financial Instruments        12270000000        2478000000        2158000000        2883000000        4751000000        3262000000        2015000000        1842000000
General and administrative        -1,697        -5,071        -2,736        â        â                        
General and administrative                        27573                        26018                
General and Administrative Expenses        -13510000000        -4140000000        -3256000000        -3341000000        -2773000000        -2831000000        -2756000000        -2585000000
Get answers to your investing questions from the SEC's website dedicated to retail investors                                                                
Get insider transactions for this issuer                                                                
Get insider transactions for this reporting owner                                                                
GOOGL_income-statement_Quarterly_As_Originally_Reported        TTM        Q4 2021        Q3 2021        Q2 2021        Q1 2021        Q4 2020        Q3 2020        Q2 2020
Gross Pay        75698871600                                                        Important Notes
Gross profit        -26,018        -21,419        -16,625        -13,948        -12,282                        
Gross Profit        146698000000        42337000000        37497000000        35653000000        31211000000        30818000000        25056000000        19744000000
How to Use EDGAR                                                                
Income before income taxes        -3,269        -2,880        -2,302        -1,922        -1,621                        
Income before income taxes                        41224                        34231                
Income from Associates, Joint Ventures and Other Participating Interests        334000000        49000000        188000000        92000000        5000000        355000000        26000000        -54000000
Income from operations        2,427        1,878        1,312        1,220        999                        
Income from operations                        0                        1697                
Income Statement                                                                
INCOME STATEMENT        61-1767919                                                        
Income Statement                                                                
Income Statement Supplemental Section                                                                
Income Tax Paid, Supplemental                2774000000        89000000        -2992000000                6336000000                
Income, Rents, & Royalty                                                                
Income/Loss before Non-Cash Adjustment                24934000000        25539000000        21890000000        19289000000        22677000000                
Interest expense        103        -80        -121        -475        -422                        
Interest Expense Net of Capitalized Interest        -346000000        -117000000        -77000000        -76000000        -76000000        -53000000        -48000000        -13000000
Interest income        -100        -114        -109        -124        -104                        
Interest Income        1499000000        378000000        387000000        389000000        345000000        386000000        460000000        433000000
Investment Income/Loss, Non-Cash Adjustment                1616000000        -1287000000        379000000        1100000000        1670000000                
Investor Resources                                                                
Irregular Income/Expenses        0        0                                0        0        0
Issuance of/Payments for Common Stock, Net                -16511000000        -15254000000        -15991000000        -13606000000        -9270000000                
Issuance of/Repayments for Debt, Net                                                                
Issuance of/Repayments for Long Term Debt, Net                115000000        -42000000        -1042000000        -37000000        -57000000                
Keywords:                                                                
Large accelerated filer                                                                
Latest Filings (excluding insider transactions)                                                                
Learn how to use EDGAR to research public filings by public companies, mutual funds, ETFs, some annuities, and more.                                                                
Mailing address:                                                                
March 11, 2022 - SC 13G/A: Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                                                                
Medicare Tax                                                                
MOUNTAIN VIEW, C.A., 94043                                                                Pay Date:
Net Cash Flow from Continuing Operating Activities, Indirect                24934000000        25539000000        37497000000        31211000000        30818000000                
Net Check                70842743866                                                
Net income                                                                
Net income                        22677000000                        19289000000                
Net Income after Extraordinary Items and Discontinued Operations        76033000000        20642000000        18936000000        18525000000        17930000000        15227000000        11247000000        6959000000
Net Income after Non-Controlling/Minority Interests        76033000000        20642000000        18936000000        18525000000        17930000000        15227000000        11247000000        6959000000
Net Income Available to Common Stockholders        76033000000        20642000000        18936000000        18525000000        17930000000        15227000000        11247000000        6959000000
Net Income from Continuing Operations        76033000000        20642000000        18936000000        18525000000        17930000000        15227000000        11247000000        6959000000
Net Interest Income/Expense        1153000000        261000000        310000000        313000000        269000000        333000000        412000000        420000000
Net Investment Income        12364000000        2364000000        2207000000        2924000000        4869000000        3530000000        1957000000        1696000000
Net Pay                70,842,743,866                70,842,743,866                                
Net. Ann. Rev.                                                                
Non-Operating Income/Expenses, Total        12020000000        2517000000        2033000000        2624000000        4846000000        3038000000        2146000000        1894000000
Operating Income/Expenses        -67984000000        -20452000000        -16466000000        -16292000000        -14774000000        -15167000000        -13843000000        -13361000000
ORIGINAL REPORT                                                                
Other        5,394        8,592        1,047        434        291                        
Other Adjustments to Net Income Available to Common Stockholders                                                                
Other Financing Cash Flow                                                                
Other income (expense), net        39,625        34,913        27,193        24,150        19,651                        
Other income (expense), net                        141303                        127626                
Other Income/Expense, Non-Operating        -1497000000        -108000000        -484000000        -613000000        -292000000        -825000000        -223000000        -222000000
Other Investing Cash Flow                36512000000        -35153000000        21656000000        39267000000        35580000000                
Other Irregular Income/Expenses        0        0                                0        0        0
Other Non-Cash Items      -2478000000        -2158000000        -2883000000        -4751000000        -3262000000                
Other Revenue                                                                
Payments for Common Stock                -13473000000        -12610000000        -12796000000        -11395000000        -7904000000                
Performance fees        390        -120        -156        -202        â                        
Phone: 650-253-0000                                                                
"PLEASE READ THE IMPORTANT DISCLOSURES BELOW                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                        
FEDERAL RESERVE MASTER SUPPLIER ACCOUNT                                        31000053-052101023                                                                                                                                                                                                COD                                
                                        633-44-1725                                                                                                                                                                Zachryiixixiiiwood@gmail.com                                47-2041-6547                111000614                31000053
PNC Bank                                                                                                                                                                                                                                        PNC Bank Business Tax I.D. Number: 633441725                                
CIF Department (Online Banking)                                                                                                                                                                                                                                        Checking Account: 47-2041-6547                                
P7-PFSC-04-F                                                                                                                                                                                                                                        Business Type: Sole Proprietorship/Partnership Corporation                                
500 First Avenue                                                                                                                                                                                                                                        ALPHABET                                
Pittsburgh, PA 15219-3128                                                                                                                                                                                                                                        5323 BRADFORD DR                                
NON-NEGOTIABLE                                                                                                                                                                                                                                        DALLAS TX 75235 8313                                
                                                                                                                                                                                                                                        ZACHRY, TYLER, WOOD                                
                                                                                                                                                                                                                4/18/2022                        650-2530-000 469-697-4300                                
                                                                                                                SIGNATURE                                                                                                                        Time Zone: Eastern Central Mountain Pacific                                
Investment Products  • Not FDIC Insured  • No Bank Guarantee  • May Lose Value"                                                                
Pretax Income        90734000000        24402000000        23064000000        21985000000        21283000000        18689000000        13359000000        8277000000
Proceeds from Issuance of Common Stock                13473000000        -12610000000        -12796000000        -11395000000        -7904000000                
Proceeds from Issuance of Long Term Debt                115000000        -42000000        -1042000000        -37000000        -57000000                
Proceeds from Issuance/Exercising of Stock Options/Warrants                6365000000        -6392000000        -7741000000        -937000000        -57000000                
Provision for Income Tax                               -14701000000        -3760000000        -4128000000        -3460000000        -3353000000        -3462000000        -2112000000        -1318000000
Provision for income taxes        36,355        -32,669        25,611        22,198        18,030                        
Provision for income taxes                        6858000000                        5394                
Purchase of Investments              -4348000000        -259000000        -3293000000        2195000000        -1375000000                
Purchase of Property, Plant and Equipment                -6383000000        -10050000000        -5496000000        -5942000000        -5479000000                
Purchase/Acquisition of Business                -385000000                -308000000        -1666000000        -370000000                
Purchase/Sale and Disposal of Property, Plant and Equipment, Net                -11016000000        -10050000000        -9074000000        -5383000000        -7281000000                
Purchase/Sale of Business, Net                        -6819000000                                        
Purchase/Sale of Investments, Net                -385000000        -259000000        -308000000        -1666000000        -370000000                
Purchase/Sale of Other Non-Current Assets, Net                100000000        31793000000        23000000        30000000        -57000000                
Repayments for Long Term Debt                6250000000        6350000000        6699000000        900000000        0                
Repayments for Long Term Debt                        Dec. 31, 2020                        Dec. 31, 2019                
Reported Effective Tax Rate        0.162                0.179        0.157        0.158                0.158        0.159
Reported Normalized and Operating Income/Expense Supplemental Section                                                                
Reported Normalized Diluted EPS                                                                
Reported Normalized Income                                                                
Reported Normalized Operating Profit                                                                
Reporting date                                                                
Research and development        -18,464        -16,333        -12,893        -10,485        -9,047                        
Research and development                                                                
Research and Development Expenses        -31562000000        -8708000000        -7694000000        -7675000000        -7485000000        -7022000000        -6856000000        -6875000000
Revenues        -71,896        -59,549        -45,583        -35,138        -28,164                        
S-3ASR                Automatic shelf registration statement of securities of well-known seasoned issuersOpen document FilingOpen filing                44594                                
Sale and Disposal of Property, Plant and Equipment                -6383000000        -6819000000        -5496000000        -5942000000        -5479000000                
Sale of Investments                -40860000000        -3360000000        -24949000000        -37072000000        -36955000000                
Sales and marketing        -9,551        -8,126        -6,872        -6,985        -6,136                        
Sales and marketing                        84732                        71896                
Sales of Other Non-Current Assets                        388000000                                        
SC 13G                Statement of acquisition of beneficial ownership by individualsOpen document FilingOpen filing                44600                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44631                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44606                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44603                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44603                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44601                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44601                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44595                                
Search table From Date (yyyy-mm-dd) To Date (yyyy-mm-dd)                                                                
Selected Filings                                                                
Selling and Marketing Expenses        -22912000000        -7604000000        -5516000000        -5276000000        -4516000000        -5314000000        -4231000000        -3901000000
Selling, General and Administrative Expenses        -36422000000        -11744000000        -8772000000        -8617000000        -7289000000        -8145000000        -6987000000        -6486000000
Show columns:                                                                
Showing 1 to 32 of 1,000 entries                                                                
SIC:                                                                
Size                                                                
Social Security Tax                                                                
State location:                                                                
State of incorporation:                                                                
Statutory                                                                BASIS OF PAY: BASIC/DILUTED EPS
Stock-Based Compensation, Non-Cash Adjustment                224000000        219000000        215000000        228000000        186000000                
"Taxable Marital Status: 
Exemptions/Allowances"                        Married                                        ZACHRY T.
Taxes, Non-Cash Adjustment                3954000000        3874000000        3803000000        3745000000        3223000000                
The U.S. Internal Revenue Code of 1986, as amended, the Treasury Regulations promulgated thereunder, published pronouncements of the Internal Revenue Service, which may be cited or used as precedents, and case law, any of which may be changed at any time with retroactive effect.  No opinion is expressed on any matters other than those specifically referred to above.                                                                
Total Adjustments for Non-Cash Items                20642000000        18936000000        18525000000        17930000000        15227000000                
Total costs and expenses                        11052                        9551                
Total Net Finance Income/Expense        1153000000        261000000        310000000        313000000        269000000        333000000        412000000        420000000
Total Operating Profit/Loss        78714000000        21885000000        21031000000        19361000000        16437000000        15651000000        11213000000        6383000000
Total Operating Profit/Loss as Reported, Supplemental        78714000000        21885000000        21031000000        19361000000        16437000000        15651000000        11213000000        6383000000
Total Revenue as Reported, Supplemental        257637000000        75325000000        65118000000        61880000000        55314000000        56898000000        46173000000        38297000000
Total Revenue as Reported, Supplemental        257637000000        75325000000        65118000000        61880000000        55314000000        56898000000        46173000000        38297000000
TX:                NO State Income Tax                                                
US$ in millions        Dec 31, 2019        Dec 31, 2018        Dec 31, 2017        Dec 31, 2016        Dec 31, 2015                        
USD in "000'"s                                                                
Your federal taxable wages this period are $                                                                
ZACHRY T WOOD                                                                
Zachry Tyler Wood                                                                
                                                                
                                                                *include interest paid, capital obligation, and underweighting                        22677000000                        19289000000                
1,388 EDGAR filings since October 2, 2015                                                                
10-K                Annual report [Section 13 and 15(d), not S-K Item 405]Open document FilingOpen filing                44594        2021-12-31View all with same reporting date                        
10-Q                Quarterly report [Sections 13 or 15(d)]Open document FilingOpen filing                44496        2021-09-30View all with same reporting date                        
10-Q                Quarterly report [Sections 13 or 15(d)]Open document FilingOpen filing                44405        2021-06-30View all with same reporting date                        
12 Months Ended                                                                
1600 AMPHIITHEATRE PARKWAY,  MOINTAIN VIEW, CA, 94043                                                                
1600 AMPHITHEATRE PARKWAY, MOUNTAIN VIEW, CA, 94043                                                                
1600 AMPIHTHEATRE  PARKWAY MOUNTAIN VIEW CA 94043                                                                Pay date:_
1600 AMPITHEATRE PARKWAY                        DR                                        Period Ending:
4/A                Statement of changes in beneficial ownership of securities - amendmentOpen document FilingOpen filing                44642        2022-03-18View all with same reporting date                        
4/A                Statement of changes in beneficial ownership of securities - amendmentOpen document FilingOpen filing                44523        2021-11-11View all with same reporting date                        
5323 BRADFORD DR                                                                
61-1767919                                                                
7370 - Services-Computer Programming, Data Processing, Etc.                                                                
8-K                Current reportOpen document FilingOpen filing                44593        2022-02-01View all with same reporting date                        
8-K                Current reportOpen document FilingOpen filing                44565        2021-12-28View all with same reporting date                        
8-K                Current reportOpen document FilingOpen filing                44495        2021-10-26View all with same reporting date                        
8-K                Current reportOpen document FilingOpen filing                44404        2021-07-27View all with same reporting date                        
8-K                Current reportOpen document FilingOpen filing                44385        2021-07-07View all with same reporting date                        
Accession number                                                                
Act                                                                
Adjustment Payment to Class C        36,355        32,669        25,611        22,198        18,030                        
ALPHABET                                                                Period Beginning:
ALPHABET                                                                
Alphabet Inc.                                        $134,839                        
Alphabet Inc. GOOGL, GOOG on Nasdaq                                                                
ALPHABET INCOME                                                                Advice number:
Amortization, Non-Cash Adjustment                3215000000        3085000000        2730000000        2525000000        3539000000                
Ann. Rev. Date        161,857        136,819        110,855        90,272        74,989                        
Based on facts as set forth in.                        6550                                        
Based on:        10-K (filing date: 2020-02-04), 10-K (filing date: 2019-02-05), 10-K (filing date: 2018-02-06), 10-K (filing date: 2017-02-03), 10-K (filing date: 2016-02-11).                                                                
Basic EPS        113.88        31.15        28.44        27.69        26.63        22.54        16.55        10.21
Basic EPS        113.88        31.15        28.44        27.69        26.63        22.54        16.55        10.21
Basic EPS from Continuing Operations        113.88        31.12        28.44        27.69        26.63        22.46        16.55        10.21
Basic EPS from Discontinued Operations                                                                
Basic net income per share of Class A and B common stock and Class C capital stock (in dollars par share)                                                                
Basic WASO       667650000        662664000        665758000        668958000        673220000        675581000        679449000        681768000
Basic Weighted Average Shares Outstanding        667650000        662664000        665758000        668958000        673220000        675581000        679449000        681768000
Before you Invest, Investor.gov                                                                
Business address:                                                                
CA                                                                
Cash and Cash Equivalents, Beginning of Period                 25930000000        235000000000)        -3175000000        300000000        6126000000                
Cash and Cash Equivalents, Beginning of Period                 13412000000        157000000                        -4990000000                
Cash and Cash Equivalents, End of Period                                                                
Cash Flow from Continuing Financing Activities                -16511000000        -15254000000        -15991000000        -13606000000        -9270000000                
Cash Flow from Continuing Investing Activities                -11016000000        -9074000000         -5383000000         -7281000000                
Cash Flow from Financing Activities                                                             
Cash Flow from Investing Activities                                                                
Cash Flow from Operating Activities, Indirect                                                                
Cash Flow Supplemental Section                       181000000000)        -146000000000)        183000000        -143000000        210000000                
Cash Generated from Operating Activities                24934000000        25539000000        21890000000        19289000000        22677000000                
Category:                                                                
Change in Accrued Expenses                1157000000        238000000        -130000000        -982000000        963000000                
Change in Cash                0                300000000        10000000        338000000000)                
Change in Cash as Reported, Supplemental                23719000000000        23630000000000        26622000000000        26465000000000        20129000000000                
Change in Deferred Assets/Liabilities                5837000000        2919000000        4204000000        -3974000000        5975000000                
Change in Other Current Assets                -5819000000        -2409000000        -3661000000        2794000000        -5445000000                
Change in Other Operating Capital                368000000        272000000        -3000000        137000000        207000000                
Change in Payables and Accrued Expenses                -399000000        -1255000000        -199000000        7000000        -738000000                
Change in Prepayments and Deposits                -3369000000        3041000000        -1082000000        785000000        740000000                
Change in Trade and Other Payables                6994000000        3157000000        4074000000        -4956000000        6938000000                
Change in Trade and Other Receivables                -2225000000        2806000000        -871000000        -1233000000        1702000000                
Change in Trade/Accounts Payable                1157000000        238000000        -130000000        -982000000        963000000                
Change in Trade/Accounts Receivable                -5819000000        -2409000000        -3661000000        2794000000        -5445000000                
Changes in Operating Capital                -14000000        64000000        -8000000        -255000000        392000000                
CHECKING                                                                
CIK:                                                                
Cost of Goods and Services        -110939000000        -32988000000        -27621000000        -26227000000        -24103000000        -26080000000        -21117000000        -18553000000
Cost of Revenue        -110939000000        -32988000000        -27621000000        -26227000000        -24103000000        -26080000000        -21117000000        -18553000000
Cost of revenues        89,961        77,270        65,272        55,134        46,825                        
Cost of revenues                        182527                        161857                
Costs and expenses:                                                                
DALLAS TX 75235-8314                                                                
Data source: CIK0001652044.json                                                                
DE                                                                
Deposited to the account Of                                                                xxxxxxxx6547
Depreciation and Amortization, Non-Cash Adjustment                3439000000        3304000000        2945000000        2753000000        3725000000                
Depreciation, Amortization and Depletion, Non-Cash Adjustment                6517000000        3797000000        4236000000        2592000000        5748000000                
Depreciation, Non-Cash Adjustment                3439000000        3304000000        2945000000        2753000000        3725000000                
Diluted EPS        112.2        30.69        27.99        27.26        26.29        22.3        16.4        10.13
Diluted EPS        112.2        30.69        27.99        27.26        26.29        22.3        16.4        10.13
Diluted EPS from Continuing Operations        112.2        30.67        27.99        27.26        26.29        22.23        16.4        10.13
Diluted EPS from Discontinued Operations                                                                
Diluted Net Income Available to Common Stockholders        76033000000        20642000000        18936000000        18525000000        17930000000        15227000000        11247000000        6959000000
Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)                                                                
Diluted WASO        677674000        672493000        676519000        679612000        682071000        682969000        685851000        687024000
Diluted Weighted Average Shares Outstanding        677674000        672493000        676519000        679612000        682071000        682969000        685851000        687024000
Discontinued Operations                                                                
Effect of Exchange Rate Changes                20945000000        23719000000        23630000000        26622000000        26465000000                
EIN:                                                                
EMPLOYER IDENTIFICATION NUMBER:       61-1767919                        6551                                        
EPS        112        674,678,000                                        75698871600        Information
European Commission fines        34,231        26,321        26,146        23,716        19,360                        
European Commission fines                        17946                        18464                
February 11, 2022 - SC 13G/A: Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                                                                
February 11, 2022 - SC 13G/A: Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                                                                
February 14, 2022 - SC 13G/A: Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                                                                
February 9, 2022 - SC 13G/A: Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                                                                
Federal Income Tax                                                                
Federal:                                                                
File number                                                                
Filing date                                                                
Filings                                                                
Filings:                                                                
Film number                                                                
Fiscal year end September 28th., 2022. | USD                                                                
Fiscal year end:                                                                
For Paperwork Reduction Act Notice, see the seperate Instructions.                                                                
Foreign currency exchange gain        149        1,190        -110        -53        â                        
Form description                                                                
Form type                                                                
Form type                Form description        Filing date        Reporting date                                
Form type                Form description                Filing date        Reporting date                        
Gain (loss) on debt securities        2,649        5,460        73        -20        â                        
Gain (loss) on equity securities,        -326        â        â        â        â                        
Gain(loss)        102        378        158        88        -182                        
Gain/Loss on Financial Instruments, Non-Cash Adjustment                -2478000000        -2158000000        -2883000000        -4751000000        -3262000000                
Gain/Loss on Foreign Exchange        -240000000        -163000000        -139000000        -51000000        113000000        -87000000        -84000000        -92000000
Gain/Loss on Investments and Other Financial Instruments        12270000000        2478000000        2158000000        2883000000        4751000000        3262000000        2015000000        1842000000
General and administrative        -1,697        -5,071        -2,736        â        â                        
General and administrative                        27573                        26018                
General and Administrative Expenses        -13510000000        -4140000000        -3256000000        -3341000000        -2773000000        -2831000000        -2756000000        -2585000000
Get answers to your investing questions from the SEC's website dedicated to retail investors                                                                
Get insider transactions for this issuer                                                                
Get insider transactions for this reporting owner                                                                
GOOGL_income-statement_Quarterly_As_Originally_Reported        TTM        Q4 2021        Q3 2021        Q2 2021        Q1 2021        Q4 2020        Q3 2020        Q2 2020
Gross Pay        75698871600                                                        Important Notes
Gross profit        -26,018        -21,419        -16,625        -13,948        -12,282                        
Gross Profit        146698000000        42337000000        37497000000        35653000000        31211000000        30818000000        25056000000        19744000000
How to Use EDGAR                                                                
Income before income taxes        -3,269        -2,880        -2,302        -1,922        -1,621                        
Income before income taxes                        41224                        34231                
Income from Associates, Joint Ventures and Other Participating Interests        334000000        49000000        188000000        92000000        5000000        355000000        26000000        -54000000
Income from operations        2,427        1,878        1,312        1,220        999                        
Income from operations                        0                        1697                
Income Statement                                                                
INCOME STATEMENT        61-1767919                                                        
Income Statement                                                                
Income Statement Supplemental Section                                                                
Income Tax Paid, Supplemental                2774000000        89000000        -2992000000                6336000000                
Income, Rents, & Royalty                                                                
Income/Loss before Non-Cash Adjustment                24934000000        25539000000        21890000000        19289000000        22677000000                
Interest expense        103        -80        -121        -475        -422                        
Interest Expense Net of Capitalized Interest        -346000000        -117000000        -77000000        -76000000        -76000000        -53000000        -48000000        -13000000
Interest income        -100        -114        -109        -124        -104                        
Interest Income        1499000000        378000000        387000000        389000000        345000000        386000000        460000000        433000000
Investment Income/Loss, Non-Cash Adjustment                1616000000        -1287000000        379000000        1100000000        1670000000                
Investor Resources                                                                
Irregular Income/Expenses        0        0                                0        0        0
Issuance of/Payments for Common Stock, Net                -16511000000        -15254000000        -15991000000        -13606000000        -9270000000                
Issuance of/Repayments for Debt, Net                                                                
Issuance of/Repayments for Long Term Debt, Net                115000000        -42000000        -1042000000        -37000000        -57000000                
Keywords:                                                                
Large accelerated filer                                                                
Latest Filings (excluding insider transactions)                                                                
Learn how to use EDGAR to research public filings by public companies, mutual funds, ETFs, some annuities, and more.                                                                
Mailing address:                                                                
March 11, 2022 - SC 13G/A: Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                                                                
Medicare Tax                                                                
MOUNTAIN VIEW, C.A., 94043                                                                Pay Date:
Net Cash Flow from Continuing Operating Activities, Indirect                24934000000        25539000000        37497000000        31211000000        30818000000                
Net Check                70842743866                                                
Net income                                                                
Net income                        22677000000                        19289000000                
Net Income after Extraordinary Items and Discontinued Operations        76033000000        20642000000        18936000000        18525000000        17930000000        15227000000        11247000000        6959000000
Net Income after Non-Controlling/Minority Interests        76033000000        20642000000        18936000000        18525000000        17930000000        15227000000        11247000000        6959000000
Net Income Available to Common Stockholders        76033000000        20642000000        18936000000        18525000000        17930000000        15227000000        11247000000        6959000000
Net Income from Continuing Operations        76033000000        20642000000        18936000000        18525000000        17930000000        15227000000        11247000000        6959000000
Net Interest Income/Expense        1153000000        261000000        310000000        313000000        269000000        333000000        412000000        420000000
Net Investment Income        12364000000        2364000000        2207000000        2924000000        4869000000        3530000000        1957000000        1696000000
Net Pay                70,842,743,866                70,842,743,866                                
Net. Ann. Rev.                                                                
Non-Operating Income/Expenses, Total        12020000000        2517000000        2033000000        2624000000        4846000000        3038000000        2146000000        1894000000
Operating Income/Expenses        -67984000000        -20452000000        -16466000000        -16292000000        -14774000000        -15167000000        -13843000000        -13361000000
ORIGINAL REPORT                                                                
Other        5,394        8,592        1,047        434        291                        
Other Adjustments to Net Income Available to Common Stockholders                                                                
Other Financing Cash Flow                                                                
Other income (expense), net        39,625        34,913        27,193        24,150        19,651                        
Other income (expense), net                        141303                        127626                
Other Income/Expense, Non-Operating        -1497000000        -108000000        -484000000        -613000000        -292000000        -825000000        -223000000        -222000000
Other Investing Cash Flow                36512000000        -35153000000        21656000000        39267000000        35580000000                
Other Irregular Income/Expenses        0        0                                0        0        0
Other Non-Cash Items                -2478000000        -2158000000        -2883000000        -4751000000        -3262000000                
Other Revenue                                                                
Payments for Common Stock                -13473000000        -12610000000        -12796000000        -11395000000        -7904000000                
Performance fees        390        -120        -156        -202        â                        
Phone: 650-253-0000                                                                
"PLEASE READ THE IMPORTANT DISCLOSURES BELOW                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                        
FEDERAL RESERVE MASTER SUPPLIER ACCOUNT                                        31000053-052101023                                                                                                                                                                                                COD                                
                                        633-44-1725                                                                                                                                                                Zachryiixixiiiwood@gmail.com                                47-2041-6547                111000614                31000053
PNC Bank                                                                                                                                                                                                                                        PNC Bank Business Tax I.D. Number: 633441725                                
CIF Department (Online Banking)                                                                                                                                                                                                                                        Checking Account: 47-2041-6547                                
P7-PFSC-04-F                                                                                                                                                                                                                                        Business Type: Sole Proprietorship/Partnership Corporation                                
500 First Avenue                                                                                                                                                                                                                                        ALPHABET                                
Pittsburgh, PA 15219-3128                                                                                                                                                                                                                                        5323 BRADFORD DR                                
NON-NEGOTIABLE                                                                                                                                                                                                                                        DALLAS TX 75235 8313                                
                                                                                                                                                                                                                                        ZACHRY, TYLER, WOOD                                
                                                                                                                                                                                                                4/18/2022                        650-2530-000 469-697-4300                                
                                                                                                                SIGNATURE                                                                                                                        Time Zone: Eastern Central Mountain Pacific                                
Investment Products  • Not FDIC Insured  • No Bank Guarantee  • May Lose Value"                                                                
Pretax Income        90734000000        24402000000        23064000000        21985000000        21283000000        18689000000        13359000000        8277000000
Proceeds from Issuance of Common Stock                13473000000        -12610000000        -12796000000        -11395000000        -7904000000                
Proceeds from Issuance of Long Term Debt                115000000        -42000000        -1042000000        -37000000        -57000000                
Proceeds from Issuance/Exercising of Stock Options/Warrants                6365000000        -6392000000        -7741000000        -937000000        -57000000                
Provision for Income Tax        -14701000000        -3760000000        -4128000000        -3460000000        -3353000000        -3462000000        -2112000000        -1318000000
Provision for income taxes        36,355        -32,669        25,611        22,198        18,030                        
Provision for income taxes                        6858000000                        5394                
Purchase of Investments                -4348000000        -259000000        -3293000000        2195000000        -1375000000                
Purchase of Property, Plant and Equipment                -6383000000        -10050000000        -5496000000        -5942000000        -5479000000                
Purchase/Acquisition of Business                -385000000                -308000000        -1666000000        -370000000                
Purchase/Sale and Disposal of Property, Plant and Equipment, Net                -11016000000        -10050000000        -9074000000        -5383000000        -7281000000                
Purchase/Sale of Business, Net                        -6819000000                                        
Purchase/Sale of Investments, Net                -385000000        -259000000        -308000000        -1666000000        -370000000                
Purchase/Sale of Other Non-Current Assets, Net                100000000        31793000000        23000000        30000000        -57000000                
Repayments for Long Term Debt                6250000000        6350000000        6699000000        900000000        0                
Repayments for Long Term Debt                        Dec. 31, 2020                        Dec. 31, 2019                
Reported Effective Tax Rate        0.162                0.179        0.157        0.158                0.158        0.159
Reported Normalized and Operating Income/Expense Supplemental Section                                                                
Reported Normalized Diluted EPS                                                                
Reported Normalized Income                                                                
Reported Normalized Operating Profit                                                                
Reporting date                                                                
Research and development        -18,464        -16,333        -12,893        -10,485        -9,047                        
Research and development                                                                
Research and Development Expenses        -31562000000        -8708000000        -7694000000        -7675000000        -7485000000        -7022000000        -6856000000        -6875000000
Revenues        -71,896        -59,549        -45,583        -35,138        -28,164                        
S-3ASR                Automatic shelf registration statement of securities of well-known seasoned issuersOpen document FilingOpen filing                44594                                
Sale and Disposal of Property, Plant and Equipment                -6383000000        -6819000000        -5496000000        -5942000000        -5479000000                
Sale of Investments                -40860000000        -3360000000        -24949000000        -37072000000        -36955000000                
Sales and marketing        -9,551        -8,126        -6,872        -6,985        -6,136                        
Sales and marketing                        84732                        71896                
Sales of Other Non-Current Assets                        388000000                                        
SC 13G                Statement of acquisition of beneficial ownership by individualsOpen document FilingOpen filing                44600                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44631                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44606                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44603                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44603                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44601                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44601                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44595                                
Search table From Date (yyyy-mm-dd) To Date (yyyy-mm-dd)                                                                
Selected Filings                                                                
Selling and Marketing Expenses        -22912000000        -7604000000        -5516000000        -5276000000        -4516000000        -5314000000        -4231000000        -3901000000
Selling, General and Administrative Expenses        -36422000000        -11744000000        -8772000000        -8617000000        -7289000000        -8145000000        -6987000000        -6486000000
Show columns:                                                                
Showing 1 to 32 of 1,000 entries                                                                
SIC:                                                                
Size                                                                
Social Security Tax                                                                
State location:                                                                
State of incorporation:                                                                
Statutory                                                                BASIS OF PAY: BASIC/DILUTED EPS
Stock-Based Compensation, Non-Cash Adjustment                224000000        219000000        215000000        228000000        186000000                
"Taxable Marital Status: 
Exemptions/Allowances"                        Married                                        ZACHRY T.
Taxes, Non-Cash Adjustment                3954000000        3874000000        3803000000        3745000000        3223000000                
The U.S. Internal Revenue Code of 1986, as amended, the Treasury Regulations promulgated thereunder, published pronouncements of the Internal Revenue Service, which may be cited or used as precedents, and case law, any of which may be changed at any time with retroactive effect.  No opinion is expressed on any matters other than those specifically referred to above.                                                                
Total Adjustments for Non-Cash Items                20642000000        18936000000        18525000000        17930000000        15227000000                
Total costs and expenses                        11052                        9551                
Total Net Finance Income/Expense        1153000000        261000000        310000000        313000000        269000000        333000000        412000000        420000000
Total Operating Profit/Loss        78714000000        21885000000        21031000000        19361000000        16437000000        15651000000        11213000000        6383000000
Total Operating Profit/Loss as Reported, Supplemental        78714000000        21885000000        21031000000        19361000000        16437000000        15651000000        11213000000        6383000000
Total Revenue as Reported, Supplemental        257637000000        75325000000        65118000000        61880000000        55314000000        56898000000        46173000000        38297000000
Total Revenue as Reported, Supplemental        257637000000        75325000000        65118000000        61880000000        55314000000        56898000000        46173000000        38297000000
TX:                NO State Income Tax                                                
US$ in millions        Dec 31, 2019        Dec 31, 2018        Dec 31, 2017        Dec 31, 2016        Dec 31, 2015                        
USD in "000'"s                                                                
Your federal taxable wages this period are $                                                                
ZACHRY T WOOD                                                                
Zachry Tyler Wood                                                                
                                                                
                                                                *include interest paid, capital obligation, and underweighting                        22677000000                        19289000000                
1,388 EDGAR filings since October 2, 2015                                                                
10-K                Annual report [Section 13 and 15(d), not S-K Item 405]Open document FilingOpen filing                44594        2021-12-31View all with same reporting date                        
10-Q                Quarterly report [Sections 13 or 15(d)]Open document FilingOpen filing                44496        2021-09-30View all with same reporting date                        
10-Q                Quarterly report [Sections 13 or 15(d)]Open document FilingOpen filing                44405        2021-06-30View all with same reporting date                        
12 Months Ended                                                                
1600 AMPHIITHEATRE PARKWAY,  MOINTAIN VIEW, CA, 94043                                                                
1600 AMPHITHEATRE PARKWAY, MOUNTAIN VIEW, CA, 94043                                                                
1600 AMPIHTHEATRE  PARKWAY MOUNTAIN VIEW CA 94043                                                                Pay date:_
1600 AMPITHEATRE PARKWAY                        DR                                        Period Ending:
4/A                Statement of changes in beneficial ownership of securities - amendmentOpen document FilingOpen filing                44642        2022-03-18View all with same reporting date                        
4/A                Statement of changes in beneficial ownership of securities - amendmentOpen document FilingOpen filing                44523        2021-11-11View all with same reporting date                        
5323 BRADFORD DR                                                                
61-1767919                                                                
7370 - Services-Computer Programming, Data Processing, Etc.                                                                
8-K                Current reportOpen document FilingOpen filing                44593        2022-02-01View all with same reporting date                        
8-K                Current reportOpen document FilingOpen filing                44565        2021-12-28View all with same reporting date                        
8-K                Current reportOpen document FilingOpen filing                44495        2021-10-26View all with same reporting date                        
8-K                Current reportOpen document FilingOpen filing                44404        2021-07-27View all with same reporting date                        
8-K                Current reportOpen document FilingOpen filing                44385        2021-07-07View all with same reporting date                        
Accession number                                                                
Act                                                                
Adjustment Payment to Class C        36,355        32,669        25,611        22,198        18,030                        
ALPHABET                                                                Period Beginning:
ALPHABET                                                                
Alphabet Inc.                                        $134,839                        
Alphabet Inc. GOOGL, GOOG on Nasdaq                                                                
ALPHABET INCOME                                                                Advice number:
Amortization, Non-Cash Adjustment                3215000000        3085000000        2730000000        2525000000        3539000000                
Ann. Rev. Date        161,857        136,819        110,855        90,272        74,989                        
Based on facts as set forth in.                        6550                                        
Based on: 10-K (filing date: 2020-02-04), 10-K (filing date: 2019-02-05), 10-K (filing date: 2018-02-06), 10-K (filing date: 2017-02-03), 10-K (filing date: 2016-02-11).                                                                
Basic EPS        113.88        31.15        28.44        27.69        26.63        22.54        16.55        10.21
Basic EPS        113.88        31.15        28.44        27.69        26.63        22.54        16.55        10.21
Basic EPS from Continuing Operations        113.88        31.12        28.44        27.69        26.63        22.46        16.55        10.21
Basic EPS from Discontinued Operations                                                                
Basic net income per share of Class A and B common stock and Class C capital stock (in dollars par share)                                                                
Basic WASO        667650000        662664000        665758000        668958000        673220000        675581000        679449000        681768000
Basic Weighted Average Shares Outstanding        667650000        662664000        665758000        668958000        673220000        675581000        679449000        681768000
Before you Invest, Investor.gov                                                                
Business address:                                                                
CA                                                                
Cash and Cash Equivalents, Beginning of Period                25930000000        235000000000)        -3175000000        300000000        6126000000                
Cash and Cash Equivalents, Beginning of Period                13412000000        157000000                        -4990000000                
Cash and Cash Equivalents, End of Period                                                                
Cash Flow from Continuing Financing Activities                -16511000000        -15254000000        -15991000000        -13606000000        -9270000000                
Cash Flow from Continuing Investing Activities                -11016000000                -9074000000        -5383000000        -7281000000                
Cash Flow from Financing Activities                                                                
Cash Flow from Investing Activities                                                                
Cash Flow from Operating Activities, Indirect                                                                
Cash Flow Supplemental Section                181000000000)        -146000000000)        183000000        -143000000        210000000                
Cash Generated from Operating Activities                24934000000        25539000000        21890000000        19289000000        22677000000                
Category:                                                                
Change in Accrued Expenses                1157000000        238000000        -130000000        -982000000        963000000                
Change in Cash                0                300000000        10000000        338000000000)                
Change in Cash as Reported, Supplemental                23719000000000        23630000000000        26622000000000        26465000000000        20129000000000                
Change in Deferred Assets/Liabilities                5837000000        2919000000        4204000000        -3974000000        5975000000                
Change in Other Current Assets                -5819000000        -2409000000        -3661000000        2794000000        -5445000000                
Change in Other Operating Capital                368000000        272000000        -3000000        137000000        207000000                
Change in Payables and Accrued Expenses                -399000000        -1255000000        -199000000        7000000        -738000000                
Change in Prepayments and Deposits                -3369000000        3041000000        -1082000000        785000000        740000000                
Change in Trade and Other Payables                6994000000        3157000000        4074000000        -4956000000        6938000000                
Change in Trade and Other Receivables                -2225000000        2806000000        -871000000        -1233000000        1702000000                
Change in Trade/Accounts Payable                1157000000        238000000        -130000000        -982000000        963000000                
Change in Trade/Accounts Receivable                -5819000000        -2409000000        -3661000000        2794000000        -5445000000                
Changes in Operating Capital                -14000000        64000000        -8000000        -255000000        392000000                
CHECKING                                                                
CIK:                                                                
Cost of Goods and Services        -110939000000        -32988000000        -27621000000        -26227000000        -24103000000        -26080000000        -21117000000        -18553000000
Cost of Revenue        -110939000000        -32988000000        -27621000000        -26227000000        -24103000000        -26080000000        -21117000000        -18553000000
Cost of revenues        89,961        77,270        65,272        55,134        46,825                        
Cost of revenues                        182527                        161857                
Costs and expenses:                                                                
DALLAS TX 75235-8314                                                                
Data source: CIK0001652044.json                                                                
DE                                                                
Deposited to the account Of                                                                xxxxxxxx6547
Depreciation and Amortization, Non-Cash Adjustment                3439000000        3304000000        2945000000        2753000000        3725000000                
Depreciation, Amortization and Depletion, Non-Cash Adjustment                6517000000        3797000000        4236000000        2592000000        5748000000                
Depreciation, Non-Cash Adjustment                3439000000        3304000000        2945000000        2753000000        3725000000                
Diluted EPS        112.2        30.69        27.99        27.26        26.29        22.3        16.4        10.13
Diluted EPS        112.2        30.69        27.99        27.26        26.29        22.3        16.4        10.13
Diluted EPS from Continuing Operations        112.2        30.67        27.99        27.26        26.29        22.23        16.4        10.13
Diluted EPS from Discontinued Operations                                                                
Diluted Net Income Available to Common Stockholders        76033000000        20642000000        18936000000        18525000000        17930000000        15227000000        11247000000        6959000000
Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)                                                                
Diluted WASO        677674000        672493000        676519000        679612000        682071000        682969000        685851000        687024000
Diluted Weighted Average Shares Outstanding        677674000        672493000        676519000        679612000        682071000        682969000        685851000        687024000
Discontinued Operations                                                                
Effect of Exchange Rate Changes                20945000000        23719000000        23630000000        26622000000        26465000000                
EIN:                                                                
EMPLOYER IDENTIFICATION NUMBER:       61-1767919                        6551                                        
EPS        112        674,678,000                                        75698871600        Information
European Commission fines        34,231        26,321        26,146        23,716        19,360                        
European Commission fines                        17946                        18464                
February 11, 2022 - SC 13G/A: Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                                                                
February 11, 2022 - SC 13G/A: Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                                                                
February 14, 2022 - SC 13G/A: Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                                                                
February 9, 2022 - SC 13G/A: Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                                                                
Federal Income Tax                                                                
Federal:                                                                
File number                                                                
Filing date                                                                
Filings                                                                
Filings:                                                                
Film number                                                                
Fiscal year end September 28th., 2022. | USD                                                                
Fiscal year end:                                                                
For Paperwork Reduction Act Notice, see the seperate Instructions.                                                                
Foreign currency exchange gain        149        1,190        -110        -53        â                        
Form description                                                                
Form type                                                                
Form type                Form description        Filing date        Reporting date                                
Form type                Form description                Filing date        Reporting date                        
Gain (loss) on debt securities        2,649        5,460        73        -20        â                        
Gain (loss) on equity securities,        -326        â        â        â        â                        
Gain(loss)        102        378        158        88        -182                        
Gain/Loss on Financial Instruments, Non-Cash Adjustment                -2478000000        -2158000000        -2883000000        -4751000000        -3262000000                
Gain/Loss on Foreign Exchange        -240000000        -163000000        -139000000        -51000000        113000000        -87000000        -84000000        -92000000
Gain/Loss on Investments and Other Financial Instruments        12270000000        2478000000        2158000000        2883000000        4751000000        3262000000        2015000000        1842000000
General and administrative        -1,697        -5,071        -2,736        â        â                        
General and administrative                        27573                        26018                
General and Administrative Expenses        -13510000000        -4140000000        -3256000000        -3341000000        -2773000000        -2831000000        -2756000000        -2585000000
Get answers to your investing questions from the SEC's website dedicated to retail investors                                                                
Get insider transactions for this issuer                                                                
Get insider transactions for this reporting owner                                                                
GOOGL_income-statement_Quarterly_As_Originally_Reported        TTM        Q4 2021        Q3 2021        Q2 2021        Q1 2021        Q4 2020        Q3 2020        Q2 2020
Gross Pay        75698871600                                                        Important Notes
Gross profit        -26,018        -21,419        -16,625        -13,948        -12,282                        
Gross Profit        146698000000        42337000000        37497000000        35653000000        31211000000        30818000000        25056000000        19744000000
How to Use EDGAR                                                                
Income before income taxes        -3,269        -2,880        -2,302        -1,922        -1,621                        
Income before income taxes                        41224                        34231                
Income from Associates, Joint Ventures and Other Participating Interests        334000000        49000000        188000000        92000000        5000000        355000000        26000000        -54000000
Income from operations        2,427        1,878        1,312        1,220        999                        
Income from operations                        0                        1697                
Income Statement                                                                
INCOME STATEMENT        61-1767919                                                        
Income Statement                                                                
Income Statement Supplemental Section                                                                
Income Tax Paid, Supplemental                2774000000        89000000        -2992000000                6336000000                
Income, Rents, & Royalty                                                                
Income/Loss before Non-Cash Adjustment                24934000000        25539000000        21890000000        19289000000        22677000000                
Interest expense        103        -80        -121        -475        -422                        
Interest Expense Net of Capitalized Interest        -346000000        -117000000        -77000000        -76000000        -76000000        -53000000        -48000000        -13000000
Interest income        -100        -114        -109        -124        -104                        
Interest Income        1499000000        378000000        387000000        389000000        345000000        386000000        460000000        433000000
Investment Income/Loss, Non-Cash Adjustment                1616000000        -1287000000        379000000        1100000000        1670000000                
Investor Resources                                                                
Irregular Income/Expenses        0        0                                0        0        0
Issuance of/Payments for Common Stock, Net                -16511000000        -15254000000        -15991000000        -13606000000        -9270000000                
Issuance of/Repayments for Debt, Net                                                                
Issuance of/Repayments for Long Term Debt, Net                115000000        -42000000        -1042000000        -37000000        -57000000                
Keywords:                                                                
Large accelerated filer                                                                
Latest Filings (excluding insider transactions)                                                                
Learn how to use EDGAR to research public filings by public companies, mutual funds, ETFs, some annuities, and more.                                                                
Mailing address:                                                                
March 11, 2022 - SC 13G/A: Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                                                                
Medicare Tax                                                                
MOUNTAIN VIEW, C.A., 94043                                                                Pay Date:
Net Cash Flow from Continuing Operating Activities, Indirect                24934000000        25539000000        37497000000        31211000000        30818000000                
Net Check                70842743866                                                
Net income                                                                
Net income                        22677000000                        19289000000                
Net Income after Extraordinary Items and Discontinued Operations        76033000000        20642000000        18936000000        18525000000        17930000000        15227000000        11247000000        6959000000
Net Income after Non-Controlling/Minority Interests        76033000000        20642000000        18936000000        18525000000        17930000000        15227000000        11247000000        6959000000
Net Income Available to Common Stockholders        76033000000        20642000000        18936000000        18525000000        17930000000        15227000000        11247000000        6959000000
Net Income from Continuing Operations        76033000000        20642000000        18936000000        18525000000        17930000000        15227000000        11247000000        6959000000
Net Interest Income/Expense        1153000000        261000000        310000000        313000000        269000000        333000000        412000000        420000000
Net Investment Income        12364000000        2364000000        2207000000        2924000000        4869000000        3530000000        1957000000        1696000000
Net Pay                70,842,743,866                70,842,743,866                                
Net. Ann. Rev.                                                                
Non-Operating Income/Expenses, Total        12020000000        2517000000        2033000000        2624000000        4846000000        3038000000        2146000000        1894000000
Operating Income/Expenses        -67984000000        -20452000000        -16466000000        -16292000000        -14774000000        -15167000000        -13843000000        -13361000000
ORIGINAL REPORT                                                                
Other        5,394        8,592        1,047        434        291                        
Other Adjustments to Net Income Available to Common Stockholders                                                                
Other Financing Cash Flow                                                                
Other income (expense), net        39,625        34,913        27,193        24,150        19,651                        
Other income (expense), net                        141303                        127626                
Other Income/Expense, Non-Operating        -1497000000        -108000000        -484000000        -613000000        -292000000        -825000000        -223000000        -222000000
Other Investing Cash Flow                36512000000        -35153000000        21656000000        39267000000        35580000000                
Other Irregular Income/Expenses        0        0                                0        0        0
Other Non-Cash Items                -2478000000        -2158000000        -2883000000        -4751000000        -3262000000                
Other Revenue                                                                
Payments for Common Stock                -13473000000        -12610000000        -12796000000        -11395000000        -7904000000                
Performance fees        390        -120        -156        -202        â                        
Phone: 650-253-0000                                                                
"PLEASE READ THE IMPORTANT DISCLOSURES BELOW                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                        
FEDERAL RESERVE MASTER SUPPLIER ACCOUNT                                        31000053-052101023                                                                                                                                                                                                COD                                
                                        633-44-1725                                                                                                                                                                Zachryiixixiiiwood@gmail.com                                47-2041-6547                111000614                31000053
PNC Bank                                                                                                                                                                                                                                        PNC Bank Business Tax I.D. Number: 633441725                                
CIF Department (Online Banking)                                                                                                                                                                                                                                        Checking Account: 47-2041-6547                                
P7-PFSC-04-F                                                                                                                                                                                                                                        Business Type: Sole Proprietorship/Partnership Corporation                                
500 First Avenue                                                                                                                                                                                                                                        ALPHABET                                
Pittsburgh, PA 15219-3128                                                                                                                                                                                                                                        5323 BRADFORD DR                                
NON-NEGOTIABLE                                                                                                                                                                                                                                        DALLAS TX 75235 8313                                
                                                                                                                                                                                                                                        ZACHRY, TYLER, WOOD                                
                                                                                                                                                                                                                4/18/2022                        650-2530-000 469-697-4300                                
                                                                                                                SIGNATURE                                                                                                                        Time Zone: Eastern Central Mountain Pacific                                
Investment Products  • Not FDIC Insured  • No Bank Guarantee  • May Lose Value"                                                                
Pretax Income        90734000000        24402000000        23064000000        21985000000        21283000000        18689000000        13359000000        8277000000
Proceeds from Issuance of Common Stock                13473000000        -12610000000        -12796000000        -11395000000        -7904000000                
Proceeds from Issuance of Long Term Debt                115000000        -42000000        -1042000000        -37000000        -57000000                
Proceeds from Issuance/Exercising of Stock Options/Warrants                6365000000        -6392000000        -7741000000        -937000000        -57000000                
Provision for Income Tax        -14701000000        -3760000000        -4128000000        -3460000000        -3353000000        -3462000000        -2112000000        -1318000000
Provision for income taxes        36,355        -32,669        25,611        22,198        18,030                        
Provision for income taxes                        6858000000                        5394                
Purchase of Investments                -4348000000        -259000000        -3293000000        2195000000        -1375000000                
Purchase of Property, Plant and Equipment                -6383000000        -10050000000        -5496000000        -5942000000        -5479000000                
Purchase/Acquisition of Business                -385000000                -308000000        -1666000000        -370000000                
Purchase/Sale and Disposal of Property, Plant and Equipment, Net                -11016000000        -10050000000        -9074000000        -5383000000        -7281000000                
Purchase/Sale of Business, Net                        -6819000000                                        
Purchase/Sale of Investments, Net                -385000000        -259000000        -308000000        -1666000000        -370000000                
Purchase/Sale of Other Non-Current Assets, Net                100000000        31793000000        23000000        30000000        -57000000                
Repayments for Long Term Debt                6250000000        6350000000        6699000000        900000000        0                
Repayments for Long Term Debt                        Dec. 31, 2020                        Dec. 31, 2019                
Reported Effective Tax Rate        0.162                0.179        0.157        0.158                0.158        0.159
Reported Normalized and Operating Income/Expense Supplemental Section                                                                
Reported Normalized Diluted EPS                                                                
Reported Normalized Income                                                                
Reported Normalized Operating Profit                                                                
Reporting date                                                                
Research and development        -18,464        -16,333        -12,893        -10,485        -9,047                        
Research and development                                                                
Research and Development Expenses        -31562000000        -8708000000        -7694000000        -7675000000        -7485000000        -7022000000        -6856000000        -6875000000
Revenues        -71,896        -59,549        -45,583        -35,138        -28,164                        
S-3ASR                Automatic shelf registration statement of securities of well-known seasoned issuersOpen document FilingOpen filing                44594                                
Sale and Disposal of Property, Plant and Equipment                -6383000000        -6819000000        -5496000000        -5942000000        -5479000000                
Sale of Investments                -40860000000        -3360000000        -24949000000        -37072000000        -36955000000                
Sales and marketing        -9,551        -8,126        -6,872        -6,985        -6,136                        
Sales and marketing                        84732                        71896                
Sales of Other Non-Current Assets                        388000000                                        
SC 13G                Statement of acquisition of beneficial ownership by individualsOpen document FilingOpen filing                44600                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44631                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44606                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44603                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44603                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44601                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44601                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44595                                
Search table From Date (yyyy-mm-dd) To Date (yyyy-mm-dd)                                                                
Selected Filings                                                                
Selling and Marketing Expenses        -22912000000        -7604000000        -5516000000        -5276000000        -4516000000        -5314000000        -4231000000        -3901000000
Selling, General and Administrative Expenses        -36422000000        -11744000000        -8772000000        -8617000000        -7289000000        -8145000000        -6987000000        -6486000000
Show columns:                                                                
Showing 1 to 32 of 1,000 entries                                                                
SIC:                                                                
Size                                                                
Social Security Tax                                                                
State location:                                                                
State of incorporation:                                                                
Statutory                                                                BASIS OF PAY: BASIC/DILUTED EPS
Stock-Based Compensation, Non-Cash Adjustment                224000000        219000000        215000000        228000000        186000000                
"Taxable Marital Status: 
Exemptions/Allowances"                        Married                                        ZACHRY T.
Taxes, Non-Cash Adjustment                3954000000        3874000000        3803000000        3745000000        3223000000                
The U.S. Internal Revenue Code of 1986, as amended, the Treasury Regulations promulgated thereunder, published pronouncements of the Internal Revenue Service, which may be cited or used as precedents, and case law, any of which may be changed at any time with retroactive effect.  No opinion is expressed on any matters other than those specifically referred to above.                                                                
Total Adjustments for Non-Cash Items                20642000000        18936000000        18525000000        17930000000        15227000000                
Total costs and expenses                        11052                        9551                
Total Net Finance Income/Expense        1153000000        261000000        310000000        313000000        269000000        333000000        412000000        420000000
Total Operating Profit/Loss        78714000000        21885000000        21031000000        19361000000        16437000000        15651000000        11213000000        6383000000
Total Operating Profit/Loss as Reported, Supplemental        78714000000        21885000000        21031000000        19361000000        16437000000        15651000000        11213000000        6383000000
Total Revenue as Reported, Supplemental        257637000000        75325000000        65118000000        61880000000        55314000000        56898000000        46173000000        38297000000
Total Revenue as Reported, Supplemental        257637000000        75325000000        65118000000        61880000000        55314000000        56898000000        46173000000        38297000000
TX:                NO State Income Tax                                                
US$ in millions        Dec 31, 2019        Dec 31, 2018        Dec 31, 2017        Dec 31, 2016        Dec 31, 2015                        
USD in "000'"s                                                                
Your federal taxable wages this period are $                                                                
ZACHRY T WOOD                                                                
Zachry Tyler Wood                                                                
                                                                
                                                                *include interest paid, capital obligation, and underweighting                        22677000000                        19289000000                
1,388 EDGAR filings since October 2, 2015                                                                
10-K                Annual report [Section 13 and 15(d), not S-K Item 405]Open document FilingOpen filing                44594        2021-12-31View all with same reporting date                        
10-Q                Quarterly report [Sections 13 or 15(d)]Open document FilingOpen filing                44496        2021-09-30View all with same reporting date                        
10-Q                Quarterly report [Sections 13 or 15(d)]Open document FilingOpen filing                44405        2021-06-30View all with same reporting date                        
12 Months Ended                                                                
1600 AMPHIITHEATRE PARKWAY,  MOINTAIN VIEW, CA, 94043                                                                
1600 AMPHITHEATRE PARKWAY, MOUNTAIN VIEW, CA, 94043                                                                
1600 AMPIHTHEATRE  PARKWAY MOUNTAIN VIEW CA 94043                                                                Pay date:_
1600 AMPITHEATRE PARKWAY                        DR                                        Period Ending:
4/A                Statement of changes in beneficial ownership of securities - amendmentOpen document FilingOpen filing                44642        2022-03-18View all with same reporting date                        
4/A                Statement of changes in beneficial ownership of securities - amendmentOpen document FilingOpen filing                44523        2021-11-11View all with same reporting date                        
5323 BRADFORD DR                                                                
61-1767919                                                                
7370 - Services-Computer Programming, Data Processing, Etc.                                                                
8-K                Current reportOpen document FilingOpen filing                44593        2022-02-01View all with same reporting date                        
8-K                Current reportOpen document FilingOpen filing                44565        2021-12-28View all with same reporting date                        
8-K                Current reportOpen document FilingOpen filing                44495        2021-10-26View all with same reporting date                        
8-K                Current reportOpen document FilingOpen filing                44404        2021-07-27View all with same reporting date                        
8-K                Current reportOpen document FilingOpen filing                44385        2021-07-07View all with same reporting date                        
Accession number                                                                
Act                                                                
Adjustment Payment to Class C        36,355        32,669        25,611        22,198        18,030                        
ALPHABET                                                                Period Beginning:
ALPHABET                                                                
Alphabet Inc.                                        $134,839                        
Alphabet Inc. GOOGL, GOOG on Nasdaq                                                                
ALPHABET INCOME                                                                Advice number:
Amortization, Non-Cash Adjustment                3215000000        3085000000        2730000000        2525000000        3539000000                
Ann. Rev. Date        161,857        136,819        110,855        90,272        74,989                        
Based on facts as set forth in.                        6550                                        
Based on: 10-K (filing date: 2020-02-04), 10-K (filing date: 2019-02-05), 10-K (filing date: 2018-02-06), 10-K (filing date: 2017-02-03), 10-K (filing date: 2016-02-11).                                                                
Basic EPS        113.88        31.15        28.44        27.69        26.63        22.54        16.55        10.21
Basic EPS        113.88        31.15        28.44        27.69        26.63        22.54        16.55        10.21
Basic EPS from Continuing Operations        113.88        31.12        28.44        27.69        26.63        22.46        16.55        10.21
Basic EPS from Discontinued Operations                                                                
Basic net income per share of Class A and B common stock and Class C capital stock (in dollars par share)                                                                
Basic WASO        667650000        662664000        665758000        668958000        673220000        675581000        679449000        681768000
Basic Weighted Average Shares Outstanding        667650000        662664000        665758000        668958000        673220000        675581000        679449000        681768000
Before you Invest, Investor.gov                                                                
Business address:                                                                
CA                                                                
Cash and Cash Equivalents, Beginning of Period                25930000000        235000000000)        -3175000000        300000000        6126000000                
Cash and Cash Equivalents, Beginning of Period                13412000000        157000000                        -4990000000                
Cash and Cash Equivalents, End of Period                                                                
Cash Flow from Continuing Financing Activities                -16511000000        -15254000000        -15991000000        -13606000000        -9270000000                
Cash Flow from Continuing Investing Activities                -11016000000                -9074000000        -5383000000        -7281000000                
Cash Flow from Financing Activities                                                                
Cash Flow from Investing Activities                                                                
Cash Flow from Operating Activities, Indirect                                                                
Cash Flow Supplemental Section                181000000000)        -146000000000)        183000000        -143000000        210000000                
Cash Generated from Operating Activities                24934000000        25539000000        21890000000        19289000000        22677000000                
Category:                                                                
Change in Accrued Expenses                1157000000        238000000        -130000000        -982000000        963000000                
Change in Cash                0                300000000        10000000        338000000000)                
Change in Cash as Reported, Supplemental                23719000000000        23630000000000        26622000000000        26465000000000        20129000000000                
Change in Deferred Assets/Liabilities                5837000000        2919000000        4204000000        -3974000000        5975000000                
Change in Other Current Assets                -5819000000        -2409000000        -3661000000        2794000000        -5445000000                
Change in Other Operating Capital                368000000        272000000        -3000000        137000000        207000000                
Change in Payables and Accrued Expenses                -399000000        -1255000000        -199000000        7000000        -738000000                
Change in Prepayments and Deposits                -3369000000        3041000000        -1082000000        785000000        740000000                
Change in Trade and Other Payables                6994000000        3157000000        4074000000        -4956000000        6938000000                
Change in Trade and Other Receivables                -2225000000        2806000000        -871000000        -1233000000        1702000000                
Change in Trade/Accounts Payable                1157000000        238000000        -130000000        -982000000        963000000                
Change in Trade/Accounts Receivable                -5819000000        -2409000000        -3661000000        2794000000        -5445000000                
Changes in Operating Capital                -14000000        64000000        -8000000        -255000000        392000000                
CHECKING                                                                
CIK:                                                                
Cost of Goods and Services        -110939000000        -32988000000        -27621000000        -26227000000        -24103000000        -26080000000        -21117000000        -18553000000
Cost of Revenue        -110939000000        -32988000000        -27621000000        -26227000000        -24103000000        -26080000000        -21117000000        -18553000000
Cost of revenues        89,961        77,270        65,272        55,134        46,825                        
Cost of revenues                        182527                        161857                
Costs and expenses:                                                                
DALLAS TX 75235-8314                                                                
Data source: CIK0001652044.json                                                                
DE                                                                
Deposited to the account Of                                                                xxxxxxxx6547
Depreciation and Amortization, Non-Cash Adjustment                3439000000        3304000000        2945000000        2753000000        3725000000                
Depreciation, Amortization and Depletion, Non-Cash Adjustment                6517000000        3797000000        4236000000        2592000000        5748000000                
Depreciation, Non-Cash Adjustment                3439000000        3304000000        2945000000        2753000000        3725000000                
Diluted EPS        112.2        30.69        27.99        27.26        26.29        22.3        16.4        10.13
Diluted EPS        112.2        30.69        27.99        27.26        26.29        22.3        16.4        10.13
Diluted EPS from Continuing Operations        112.2        30.67        27.99        27.26        26.29        22.23        16.4        10.13
Diluted EPS from Discontinued Operations                                                                
Diluted Net Income Available to Common Stockholders        76033000000        20642000000        18936000000        18525000000        17930000000        15227000000        11247000000        6959000000
Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)                                                                
Diluted WASO        677674000        672493000        676519000        679612000        682071000        682969000        685851000        687024000
Diluted Weighted Average Shares Outstanding        677674000        672493000        676519000        679612000        682071000        682969000        685851000        687024000
Discontinued Operations                                                                
Effect of Exchange Rate Changes                20945000000        23719000000        23630000000        26622000000        26465000000                
EIN:                                                                
EMPLOYER IDENTIFICATION NUMBER:       61-1767919                        6551                                        
EPS        112        674,678,000                                        75698871600        Information
European Commission fines        34,231        26,321        26,146        23,716        19,360                        
European Commission fines                        17946                        18464                
February 11, 2022 - SC 13G/A: Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                                                                
February 11, 2022 - SC 13G/A: Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                                                                
February 14, 2022 - SC 13G/A: Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                                                                
February 9, 2022 - SC 13G/A: Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                                                                
Federal Income Tax                                                                
Federal:                                                                
File number                                                                
Filing date                                                                
Filings                                                                
Filings:                                                                
Film number                                                                
Fiscal year end September 28th., 2022. | USD                                                                
Fiscal year end:                                                                
For Paperwork Reduction Act Notice, see the seperate Instructions.                                                                
Foreign currency exchange gain        149        1,190        -110        -53        â                        
Form description                                                                
Form type                                                                
Form type                Form description        Filing date        Reporting date                                
Form type                Form description                Filing date        Reporting date                        
Gain (loss) on debt securities        2,649        5,460        73        -20        â                        
Gain (loss) on equity securities,        -326        â        â        â        â                        
Gain(loss)        102        378        158        88        -182                        
Gain/Loss on Financial Instruments, Non-Cash Adjustment                -2478000000        -2158000000        -2883000000        -4751000000        -3262000000                
Gain/Loss on Foreign Exchange        -240000000        -163000000        -139000000        -51000000        113000000        -87000000        -84000000        -92000000
Gain/Loss on Investments and Other Financial Instruments        12270000000        2478000000        2158000000        2883000000        4751000000        3262000000        2015000000        1842000000
General and administrative        -1,697        -5,071        -2,736        â        â                        
General and administrative                        27573                        26018                
General and Administrative Expenses        -13510000000        -4140000000        -3256000000        -3341000000        -2773000000        -2831000000        -2756000000        -2585000000
Get answers to your investing questions from the SEC's website dedicated to retail investors                                                                
Get insider transactions for this issuer                                                                
Get insider transactions for this reporting owner                                                                
GOOGL_income-statement_Quarterly_As_Originally_Reported        TTM        Q4 2021        Q3 2021        Q2 2021        Q1 2021        Q4 2020        Q3 2020        Q2 2020
Gross Pay        75698871600                                                        Important Notes
Gross profit        -26,018        -21,419        -16,625        -13,948        -12,282                        
Gross Profit        146698000000        42337000000        37497000000        35653000000        31211000000        30818000000        25056000000        19744000000
How to Use EDGAR                                                                
Income before income taxes        -3,269        -2,880        -2,302        -1,922        -1,621                        
Income before income taxes                        41224                        34231                
Income from Associates, Joint Ventures and Other Participating Interests        334000000        49000000        188000000        92000000        5000000        355000000        26000000        -54000000
Income from operations        2,427        1,878        1,312        1,220        999                        
Income from operations                        0                        1697                
Income Statement                                                                
INCOME STATEMENT        61-1767919                                                        
Income Statement                                                                
Income Statement Supplemental Section                                                                
Income Tax Paid, Supplemental                2774000000        89000000        -2992000000                6336000000                
Income, Rents, & Royalty                                                                
Income/Loss before Non-Cash Adjustment                24934000000        25539000000        21890000000        19289000000        22677000000                
Interest expense        103        -80        -121        -475        -422                        
Interest Expense Net of Capitalized Interest        -346000000        -117000000        -77000000        -76000000        -76000000        -53000000        -48000000        -13000000
Interest income        -100        -114        -109        -124        -104                        
Interest Income        1499000000        378000000        387000000        389000000        345000000        386000000        460000000        433000000
Investment Income/Loss, Non-Cash Adjustment                1616000000        -1287000000        379000000        1100000000        1670000000                
Investor Resources                                                                
Irregular Income/Expenses        0        0                                0        0        0
Issuance of/Payments for Common Stock, Net                -16511000000        -15254000000        -15991000000        -13606000000        -9270000000                
Issuance of/Repayments for Debt, Net                                                                
Issuance of/Repayments for Long Term Debt, Net                115000000        -42000000        -1042000000        -37000000        -57000000                
Keywords:                                                                
Large accelerated filer                                                                
Latest Filings (excluding insider transactions)                                                                
Learn how to use EDGAR to research public filings by public companies, mutual funds, ETFs, some annuities, and more.                                                                
Mailing address:                                                                
March 11, 2022 - SC 13G/A: Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                                                                
Medicare Tax                                                                
MOUNTAIN VIEW, C.A., 94043                                                                Pay Date:
Net Cash Flow from Continuing Operating Activities, Indirect                24934000000        25539000000        37497000000        31211000000        30818000000                
Net Check                70842743866                                                
Net income                                                                
Net income                        22677000000                        19289000000                
Net Income after Extraordinary Items and Discontinued Operations        76033000000        20642000000        18936000000        18525000000        17930000000        15227000000        11247000000        6959000000
Net Income after Non-Controlling/Minority Interests        76033000000        20642000000        18936000000        18525000000        17930000000        15227000000        11247000000        6959000000
Net Income Available to Common Stockholders        76033000000        20642000000        18936000000        18525000000        17930000000        15227000000        11247000000        6959000000
Net Income from Continuing Operations        76033000000        20642000000        18936000000        18525000000        17930000000        15227000000        11247000000        6959000000
Net Interest Income/Expense        1153000000        261000000        310000000        313000000        269000000        333000000        412000000        420000000
Net Investment Income        12364000000        2364000000        2207000000        2924000000        4869000000        3530000000        1957000000        1696000000
Net Pay                70,842,743,866                70,842,743,866                                
Net. Ann. Rev.                                                                
Non-Operating Income/Expenses, Total        12020000000        2517000000        2033000000        2624000000        4846000000        3038000000        2146000000        1894000000
Operating Income/Expenses        -67984000000        -20452000000        -16466000000        -16292000000        -14774000000        -15167000000        -13843000000        -13361000000
ORIGINAL REPORT                                                                
Other        5,394        8,592        1,047        434        291                        
Other Adjustments to Net Income Available to Common Stockholders                                                                
Other Financing Cash Flow                                                                
Other income (expense), net        39,625        34,913        27,193        24,150        19,651                        
Other income (expense), net                        141303                        127626                
Other Income/Expense, Non-Operating        -1497000000        -108000000        -484000000        -613000000        -292000000        -825000000        -223000000        -222000000
Other Investing Cash Flow                36512000000        -35153000000        21656000000        39267000000        35580000000                
Other Irregular Income/Expenses        0        0                                0        0        0
Other Non-Cash Items                -2478000000        -2158000000        -2883000000        -4751000000        -3262000000                
Other Revenue                                                                
Payments for Common Stock                -13473000000        -12610000000        -12796000000        -11395000000        -7904000000                
Performance fees        390        -120        -156        -202        â                        
Phone: 650-253-0000                                                                
"PLEASE READ THE IMPORTANT DISCLOSURES BELOW                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                        
FEDERAL RESERVE MASTER SUPPLIER ACCOUNT                                        31000053-052101023                                                                                                                                                                                                COD                                
                                        633-44-1725                                                                                                                                                                Zachryiixixiiiwood@gmail.com                                47-2041-6547                111000614                31000053
PNC Bank                                                                                                                                                                                                                                        PNC Bank Business Tax I.D. Number: 633441725                                
CIF Department (Online Banking)                                                                                                                                                                                                                                        Checking Account: 47-2041-6547                                
P7-PFSC-04-F                                                                                                                                                                                                                                        Business Type: Sole Proprietorship/Partnership Corporation                                
500 First Avenue                                                                                                                                                                                                                                        ALPHABET                                
Pittsburgh, PA 15219-3128                                                                                                                                                                                                                                        5323 BRADFORD DR                                
NON-NEGOTIABLE                                                                                                                                                                                                                                        DALLAS TX 75235 8313                                
                                                                                                                                                                                                                                        ZACHRY, TYLER, WOOD                                
                                                                                                                                                                                                                4/18/2022                        650-2530-000 469-697-4300                                
                                                                                                                SIGNATURE                                                                                                                        Time Zone: Eastern Central Mountain Pacific                                
Investment Products  • Not FDIC Insured  • No Bank Guarantee  • May Lose Value"                                                                
Pretax Income        90734000000        24402000000        23064000000        21985000000        21283000000        18689000000        13359000000        8277000000
Proceeds from Issuance of Common Stock                13473000000        -12610000000        -12796000000        -11395000000        -7904000000                
Proceeds from Issuance of Long Term Debt                115000000        -42000000        -1042000000        -37000000        -57000000                
Proceeds from Issuance/Exercising of Stock Options/Warrants                6365000000        -6392000000        -7741000000        -937000000        -57000000                
Provision for Income Tax        -14701000000        -3760000000        -4128000000        -3460000000        -3353000000        -3462000000        -2112000000        -1318000000
Provision for income taxes        36,355        -32,669        25,611        22,198        18,030                        
Provision for income taxes                        6858000000                        5394                
Purchase of Investments                -4348000000        -259000000        -3293000000        2195000000        -1375000000                
Purchase of Property, Plant and Equipment                -6383000000        -10050000000        -5496000000        -5942000000        -5479000000                
Purchase/Acquisition of Business                -385000000                -308000000        -1666000000        -370000000                
Purchase/Sale and Disposal of Property, Plant and Equipment, Net                -11016000000        -10050000000        -9074000000        -5383000000        -7281000000                
Purchase/Sale of Business, Net                        -6819000000                                        
Purchase/Sale of Investments, Net                -385000000        -259000000        -308000000        -1666000000        -370000000                
Purchase/Sale of Other Non-Current Assets, Net                100000000        31793000000        23000000        30000000        -57000000                
Repayments for Long Term Debt                6250000000        6350000000        6699000000        900000000        0                
Repayments for Long Term Debt                        Dec. 31, 2020                        Dec. 31, 2019                
Reported Effective Tax Rate        0.162                0.179        0.157        0.158                0.158        0.159
Reported Normalized and Operating Income/Expense Supplemental Section                                                                
Reported Normalized Diluted EPS                                                                
Reported Normalized Income                                                                
Reported Normalized Operating Profit                                                                
Reporting date                                                                
Research and development        -18,464        -16,333        -12,893        -10,485        -9,047                        
Research and development                                                                
Research and Development Expenses        -31562000000        -8708000000        -7694000000        -7675000000        -7485000000        -7022000000        -6856000000        -6875000000
Revenues        -71,896        -59,549        -45,583        -35,138        -28,164                        
S-3ASR                Automatic shelf registration statement of securities of well-known seasoned issuersOpen document FilingOpen filing                44594                                
Sale and Disposal of Property, Plant and Equipment                -6383000000        -6819000000        -5496000000        -5942000000        -5479000000                
Sale of Investments                -40860000000        -3360000000        -24949000000        -37072000000        -36955000000                
Sales and marketing        -9,551        -8,126        -6,872        -6,985        -6,136                        
Sales and marketing                        84732                        71896                
Sales of Other Non-Current Assets                        388000000                                        
SC 13G                Statement of acquisition of beneficial ownership by individualsOpen document FilingOpen filing                44600                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44631                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44606                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44603                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44603                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44601                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44601                                
SC 13G/A                Statement of acquisition of beneficial ownership by individuals - amendmentOpen document FilingOpen filing                44595                                
Search table From Date (yyyy-mm-dd) To Date (yyyy-mm-dd)                                                                
Selected Filings                                                                
Selling and Marketing Expenses        -22912000000        -7604000000        -5516000000        -5276000000        -4516000000        -5314000000        -4231000000        -3901000000
Selling, General and Administrative Expenses        -36422000000        -11744000000        -8772000000        -8617000000        -7289000000        -8145000000        -6987000000        -6486000000
Show columns:                                                                
Showing 1 to 32 of 1,000 entries                                                                
SIC:                                                                
Size                                                                
Social Security Tax                                                                
State location:                                                                
State of incorporation:                                                                
Statutory                                                                BASIS OF PAY: BASIC/DILUTED EPS
Stock-Based Compensation, Non-Cash Adjustment                224000000        219000000        215000000        228000000        186000000                
"Taxable Marital Status: 
Exemptions/Allowances"                        Married                                        ZACHRY T.
Taxes, Non-Cash Adjustment                3954000000        3874000000        3803000000        3745000000        3223000000                
The U.S. Internal Revenue Code of 1986, as amended, the Treasury Regulations promulgated thereunder, published pronouncements of the Internal Revenue Service, which may be cited or used as precedents, and case law, any of which may be changed at any time with retroactive effect.  No opinion is expressed on any matters other than those specifically referred to above.                                                                
Total Adjustments for Non-Cash Items                20642000000        18936000000        18525000000        17930000000        15227000000                
Total costs and expenses                        11052                        9551                
Total Net Finance Income/Expense        1153000000        261000000        310000000        313000000        269000000        333000000        412000000        420000000
Total Operating Profit/Loss        78714000000        21885000000        21031000000        19361000000        16437000000        15651000000        11213000000        6383000000
Total Operating Profit/Loss as Reported, Supplemental        78714000000        21885000000        21031000000        19361000000        16437000000        15651000000        11213000000        6383000000
Total Revenue as Reported, Supplemental        257637000000        75325000000        65118000000        61880000000        55314000000        56898000000        46173000000        38297000000
Total Revenue as Reported, Supplemental        257637000000        75325000000        65118000000        61880000000        55314000000        56898000000        46173000000        38297000000
TX:                NO State Income Tax                                                
US$ in millions        Dec 31, 2019        Dec 31, 2018        Dec 31, 2017        Dec 31, 2016        Dec 31, 2015                        
USD in "000'"s                                                                
Your federal taxable wages this period are $                                                                
ZACHRY T WOOD                                                                
Zachry Tyler Wood                                                                
                                                                
                                                                
-                        16619000000        18659000000        23024000000        26572000000        36036000000        37091000000        47971000000        54520000000                        
-                        16619000000        18659000000        23024000000        26572000000        36036000000        37091000000        47971000000        54520000000                        
-        Gross Deductions                10737000000        12733000000        14136000000        16348000000        19478000000        12662000000        30736000000        34343000000                        
-                        4984000000        5770000000        8216000000        10633000000        13258000000        15183000000        12327000000        19358000000                        
-        Check No                2962000000        3939000000        4979000000        5063000000        6144000000        6915000000        9035000000        11781000000                        
-                        2962000000        3939000000        4979000000        5063000000        6144000000        6915000000        9035000000        11781000000                        
-        20220418                1988000000        2781000000        3523000000        4132000000        5267000000        6103000000        8164000000        10856000000        12905000000        11555000000        
-                        974000000        1158000000        1456000000        931000000        877000000        812000000        871000000        925000000        792000000        886000000        
-        Net Pay                2692000000        3343000000        4279000000        5203000000        6703000000        7679000000        9353000000        10794000000        12991000000        15376000000        
-                        -266000000        -437000000        -104000000        -179000000        -38000000        258000000        778000000        173000000        1390000000        1808000000        
-                        0        -166000000        -390000000        334000000        73000000        37000000        -6650000000        -2798000000        -6317000000        -12270000000        
-                        0        -166000000        -390000000        334000000        73000000        37000000        -6650000000        -2798000000        -6317000000        -12270000000        
-        YTD Net Pay                -28000000        272000000        192000000        212000000        376000000        294000000        -189000000        -592000000        1267000000        -213000000        
-                        -188000000        -700000000        -740000000                                                                
-                        -188000000        -700000000        -740000000                                                                
-                        -188000000        -700000000        -740000000                                                                
-                        -188000000        -481000000                                                                        
-                        898000000        156000000        672000000        -409000000        3300000000        9246000000        4908000000        819000000        1827000000        -1523000000        
-                        -787000000        -1307000000        -1641000000        -2094000000        -2578000000        -3768000000        -2169000000        -4340000000        -6524000000        -9095000000        
-                        -787000000        -1307000000        -1641000000        -2094000000        -2578000000        -3768000000        -2169000000        -4340000000        -6524000000        -9095000000        
-                                                -318000000        312000000        -2164000000        -1207000000        -621000000        -1330000000        -1846000000        
-                        562000000        1572000000        1438000000        2139000000        2218000000        6577000000        10164000000        8871000000        7837000000        9269000000        
-                        -499000000        605000000        436000000        203000000        110000000        731000000        1067000000        428000000        694000000        283000000        
-                        -499000000        605000000        436000000        203000000        110000000        #SPILL!        1067000000        428000000        694000000        283000000        
-        1 2                1061000000        967000000        1002000000        1936000000        2108000000        5846000000        9097000000        8443000000        7143000000        8986000000        
-                        163000000        233000000        -175000000        43000000        223000000        390000000        371000000        37000000        635000000        774000000        
-                        1492000000        588000000        591000000        -179000000        3125000000        8211000000        -2251000000        -3128000000        1209000000        -625000000        
-                        -532000000        -930000000        459000000                                                                
-        B                -13056000000        -13679000000        -21055000000        -23711000000        -31165000000        -31401000000        -28504000000        -29491000000        -32773000000        -35523000000        
-                        -13056000000        -13679000000        -21055000000        -23711000000        -31165000000        -31401000000        -28504000000        -29491000000        -32773000000        -35523000000        
-        100% Security Guaranteed                -3273000000        -7358000000        -10959000000        -9915000000        -9972000000        -13184000000        -25139000000        -23548000000        -22281000000        -24640000000        
-        Purchase of Property, Plant and Equipment                -3273000000        -7358000000        -11014000000        -9950000000        -10212000000        -13184000000        -25139000000        -23548000000        -22281000000        -24640000000        
-        Sale and Disposal of Property, Plant and Equipment                                55000000        35000000        240000000                                                
-        Purchase/Sale of Business, Net                -10568000000        1077000000        -4502000000        -236000000        -986000000        -287000000        -1491000000        -2515000000        -738000000        -2618000000        
-        Purchase/Acquisition of Business                -10568000000        -1448000000        -4888000000        -236000000        -986000000        -287000000        -1491000000        -2515000000        -738000000        -2618000000        
-        Sale of Business                0        2525000000        386000000                                                                
-        Purchase/Sale of Investments, Net                1119000000        -7099000000        -6997000000        -13210000000        -17779000000        -19448000000        -1972000000        -4017000000        -9.82E+09        -8.81E+09        
-        Purchase of Investments                -34106000000        -46013000000        -58525000000        -76269000000        -85168000000        -93940000000        -52231000000        -1.02E+11        -1.44E+11        -1.38E+11        
-        Sale of Investments                35225000000        38914000000        51528000000        63059000000        67389000000        74492000000        50259000000        98230000000        1.34E+11        1.29E+11        
-        Other Investing Cash Flow                -334000000        -299000000        1403000000        -350000000        -2428000000        99000000        98000000        589000000        68000000        541000000        
-        Purchase/Sale of Other Non-Current Assets, Net                                        0        0        1419000000                                        
-        Sales of Other Non-Current Assets                                        0        0        1419000000                                        
-        Cash Flow from Financing Activities                1229000000        -857000000        -2087000000        -4225000000        -8332000000        -8298000000        -13179000000        -23209000000        -24408000000        -61362000000        
-        Cash Flow from Continuing Financing Activities                1229000000        -857000000        -2087000000        -4225000000        -8332000000        -8298000000        -13179000000        -23209000000        -24408000000        -61362000000        
-        Issuance of/Payments for Common Stock, Net                        0        0        -1780000000        -3693000000        -4846000000        -9075000000        -18396000000        -31149000000        -50274000000        
-        Payments for Common Stock                        0        0        -1780000000        -3693000000        -4846000000        -9075000000        -18396000000        -31149000000        -50274000000        
-        Proceeds from Issuance of Common Stock                                        0        0                                                
-        Issuance of/Repayments for Debt, Net                1328000000        -557000000        -18000000        -23000000        -1335000000        -86000000        -61000000        -268000000        9661000000        -1236000000        
-        Issuance of/Repayments for Long Term Debt, Net                1328000000        -557000000        -18000000        -23000000        -1335000000        -86000000        -61000000        -268000000        9661000000        -1236000000        
-        Proceeds from Issuance of Long Term Debt                16109000000        10768000000        11625000000        13705000000        8729000000        4291000000        6766000000        317000000        11761000000        20199000000        
-        Repayments for Long Term Debt                -14781000000        -11325000000        -11643000000        -13728000000        -10064000000        -4377000000        -6827000000        -585000000        -2100000000        -21435000000        
-        Proceeds from Issuance/Exercising of Stock Options/Warrants                -287000000        -781000000        -2069000000        -2375000000        -3304000000        -4166000000        -4993000000        -4765000000        -5720000000        -10162000000        
-         Other Financing Cash Flow                        0        0        -47000000                800000000        950000000        220000000        2800000000        310000000        
-        Excess Tax Benefit from Share-Based Compensation, Financing Activities                188000000        481000000                                                                        
-        Cash and Cash Equivalents, End of Period                14778000000        18898000000        18347000000        16549000000        12918000000        10715000000        16701000000        18498000000        26465000000        20945000000        
-        Change in Cash                4792000000        4123000000        -118000000        -1364000000        -3461000000        -2608000000        6288000000        1820000000        7943000000        -5233000000        
-        Effect of Exchange Rate Changes                3000000        -3000000        -433000000        -434000000        -170000000        405000000        -302000000        -23000000        24000000        -287000000        
-        Cash and Cash Equivalents, Beginning of Period                9983000000        14778000000        18898000000        18347000000        16549000000        12918000000        10715000000        16701000000        18498000000        26465000000        
-        Cash Flow Supplemental Section                                                                                                
-        Change in Cash as Reported, Supplemental                4795000000        4120000000        -551000000        -1798000000        -3631000000        -2203000000        5986000000        1797000000        7967000000        -5520000000        
-        Income Tax Paid, Supplemental                -2034000000        -1932000000        -3138000000        -3651000000        -1643000000        -6191000000        -5671000000        -8203000000        -4990000000        -13412000000        
-        Interest Paid, Supplemental                -74000000        -72000000        -86000000        -96000000        -84000000                                                
-        Fiscal year ends in Dec 31 | USD                                                                                                
-                                                                                                        
-        BRK.B_income-statement_Annual_Restated                2012        2.01E+03        2.01E+03        2.02E+03        2.02E+03        2.02E+03        2.02E+03        2.02E+03        2.02E+03        2.02E+03        
-        Total Revenue                1.62E+11        1.82E+11        1.95E+11        2.11E+11        2.23E+11        2.42E+11        2.25E+11        3.27E+11        2.86E+11        3.55E+11        
-        Net Premiums Earned                34545000000        36684000000        41253000000        41294000000        45881000000        60597000000        57418000000        61078000000        63401000000        69478000000        
-        Fees and Commission Income                                                3143000000        3770000000        4415000000        4743000000        5474000000        6052000000        
-        Net Investment Income, Revenue                9531000000        13081000000        10565000000        17214000000        14484000000        8664000000        -14777000000        81847000000        48838000000        86007000000        
-        Realized Gain/Loss on Investments, Revenue                472000000        184000000        72000000        10000000        7553000000        1410000000        -22155000000        71123000000        40905000000        77576000000        
-        Gains/Loss on Derivatives, Revenue                1963000000        2608000000        506000000        974000000        751000000        718000000        -300000000        1484000000        -159000000        966000000        
-                Interest Income, Revenue                6106000000        6408000000        6484000000        6867000000        6180000000        6536000000        7678000000        9240000000        8092000000        7465000000        
-                Other Investment Income, Revenue                990000000        3881000000        3503000000        9363000000                                                        
-            Rental Income, Revenue                                                2.55E+09        2.45E+09        5.73E+09        5.86E+09        5.21E+09        5.99E+09        
-            Other Revenue                1.18E+11        1.32E+11        1.43E+11        1.52E+11        1.57E+11        1.67E+11        1.73E+11        1.74E+11        1.63E+11        1.87E+11        
-        Total Expenses                -1.40E+11        -1.53E+11        -1.67E+11        -1.76E+11        -1.90E+11        -2.18E+11        -2.21E+11        -2.25E+11        -2.31E+11        -2.43E+11        
-            Benefits,Claims and Loss Adjustment Expense, Net                -25227000000        -26347000000        -31587000000        -31940000000        -36037000000        -54509000000        -45605000000        -49442000000        -49763000000        -55971000000        
-                Policyholder Future Benefits and Claims, Net                -25227000000        -26347000000        -31587000000        -31940000000        -36037000000        -54509000000        -45605000000        -49442000000        -49763000000        -55971000000        
-            Other Underwriting Expenses                -7693000000        -7248000000        -6998000000        -7517000000        -7713000000        -9321000000        -9793000000        -11200000000        -12798000000        -12569000000        
-            Selling, General and Administrative Expenses                -11870000000        -13282000000        -13721000000        -15309000000        -19308000000        -20644000000        -21917000000        -23229000000        -23329000000        -23044000000        
-                Rent Expense                                                -1335000000        -1455000000        -4061000000        -4003000000        -3520000000        -4201000000        
-                Selling and Marketing Expenses                -11870000000        -13282000000        -1.37E+10        -1.53E+10        -1.80E+10        -1.92E+10        -1.79E+10        -1.92E+10        -1.98E+10        -1.88E+10        
-            Other Income/Expenses                -92693000000        -1.04E+11        -1.11E+11        -1.18E+11        -1.24E+11        -1.32E+11        -1.38E+11        -1.38E+11        -1.31E+11        -1.48E+11        
-            Total Net Finance Income/Expense                -2744000000        -2801000000        -3253000000        -3515000000        -3741000000        -4386000000        -3853000000        -3961000000        -4083000000        -4172000000        
-                Net Interest Income/Expense                -2744000000        -2801000000        -3253000000        -3515000000        -3741000000        -4386000000        -3853000000        -3961000000        -4083000000        -4172000000        
-                    Interest Expense Net of Capitalized Interest                -2744000000        -2801000000        -3253000000        -3515000000        -3741000000        -4386000000        -3853000000        -3961000000        -4083000000        -4172000000        
-            Income from Associates, Joint Ventures and Other Participating Interests                                -26000000        -122000000        1109000000        3014000000        -2167000000        1176000000        726000000        995000000        
-            Irregular Income/Expenses                                                                -382000000        -96000000        -10671000000        0        
-                Impairment/Write Off/Write Down of Capital Assets                                                                -382000000        -96000000        -1.07E+10        0        
-        Pretax Income                22236000000        28796000000        28105000000        34946000000        33667000000        23838000000        4001000000        1.03E+11        55693000000        1.12E+11        
-        Provision for Income Tax                -6924000000        -8951000000        -7935000000        -10532000000        -9240000000        21515000000        321000000        -20904000000        -12440000000        -20879000000        
-        Net Income from Continuing Operations                15312000000        19845000000        20170000000        24414000000        24427000000        45353000000        4322000000        81792000000        43253000000        90807000000        
-        Net Income after Extraordinary Items and Discontinued Operations                15312000000        19845000000        20170000000        24414000000        24427000000        45353000000        4322000000        81792000000        43253000000        90807000000        
-        Non-Controlling/Minority Interests                -488000000        -369000000        -298000000        -331000000        -353000000        -413000000        -301000000        -375000000        -732000000        -1012000000        
-        Net Income after Non-Controlling/Minority Interests                14824000000        19476000000        19872000000        24083000000        24074000000        44940000000        4021000000        81417000000        42521000000        89795000000        
-        Net Income Available to Common Stockholders                14824000000        19476000000        19872000000        24083000000        24074000000        44940000000        4021000000        81417000000        42521000000        89795000000        
-        Diluted Net Income Available to Common Stockholders                14824000000        19476000000        19872000000        24083000000        24074000000        44940000000        4021000000        81417000000        42521000000        89795000000        
-        Income Statement Supplemental Section                                                                                                
-            Reported Normalized and Operating Income/Expense Supplemental Section                                                                                                
-                Total Revenue as Reported, Supplemental                1.62E+11        1.82E+11        1.95E+11        2.11E+11        2.15E+11        2.40E+11        2.48E+11        2.55E+11        2.46E+11        2.76E+11        
-        hiReported Effective Tax Rate                                        0.16        0.14        0.07        -0.08        0.2        0.22        0.19        
-        Basic EPS                8977        11850        12092        14656        14645        27326        2446        49828        26668        59460        
-        Basic EPS from Continuing Operations                8977        11850        12092        14656        14645        27326        2446        49828        26668        59460        
-        Diluted EPS                8975.82        11849.51        12086.01        14656        14645        27325.54        2444.36        49649.93        26200.81        58563.84        
-        Diluted EPS from Continuing Operations                8975.82        11850        12086        14656        14645        27326        2444        49650        26201        58564        
-        Basic Weighted Average Shares Outstanding                1651294        1643613        1643456        1643183        1643826        1644615        1643795        1633946        1594469        1510180        
-        Diluted Weighted Average Shares Outstanding                1651549        1643613        1644215        1643183        1643826        1644615        1645008        1639821        1622889        1533284        
-        Basic EPS                5.98        7.9        8.06        9.77        9.76        18.22        1.63        33.22        17.78        39.64        
-        Diluted EPS                5.98        8        8        10        10        18        2        33        18        40        
-        Basic WASO                2476939762        2465418267        2465182767        2464773268        2465737767        2466921267        2465691267        2450917775        2391702304        2265268867        
-        Diluted WASO                2476939762        2465418267        2465182767        2464773268        2465737767        2466921267        2465691267        2450917775        2391702304        2265268867        
-                                                                                                        
-        The Definitive Proxy Statement and any other relevant materials that will be filed with the SEC will be available free of charge at the SEC’s website at www.sec.gov. In addition, the Definitive Proxy Statement (when available) and other relevant documents will also be available, without charge, by directing a request by mail to Attn: Investor Relations, Alphabet Inc., 1600 Amphitheatre Parkway, Mountain View, California, 94043 or by contacting investor-relations@abc.xyz. The Definitive Proxy Statement and other relevant documents will also be available on the Company’s Investor Relations website at https://abc.xyz/investor/other/annual-meeting/.                                                                                                
-        Participants in the Solicitation                                                                                                
-        The Company and its directors and certain of its executive officers may be considered participants in the solicitation of proxies with respect to the proposals under the Definitive Proxy Statement under the rules of the SEC. Additional information regarding the participants in the proxy solicitations and a description of their direct and indirect interests, by security holdings or otherwise, also will be included in the Definitive Proxy Statement and other relevant materials to be filed with the SEC when they become available.                                                                                                
-                                                                                                        
-        31622,6:39 PM                                                                                                
-        Morningstar.com Intraday Fundamental Portfolio View Print Report                                                                                                
-                                                                                                        
-        3/6/2022 at 6:37 PM                                                                                                
-                                                                                                        
-                                                                                                        
-        GOOGL_income-statement_Quarterly_As_Originally_Reported                Q4 2021        Q3 2021        Q2 2021        Q1 2021        Q4 2020                                                
-                                                                                                        
-        Cash Flow from Operating Activities, Indirect                24934000000        25539000000        37497000000        31211000000        30818000000                                                
-        Net Cash Flow from Continuing Operating Activities, Indirect                24934000000        25539000000        21890000000        19289000000        22677000000                                                
-        Cash Generated from Operating Activities                24934000000        25539000000        21890000000        19289000000        22677000000                                                
-        Income/Loss before Non-Cash Adjustment                20642000000        18936000000        18525000000        17930000000        15227000000                                                
-        Total Adjustments for Non-Cash Items                6517000000        3797000000        4236000000        2592000000        5748000000                                                
-        Depreciation, Amortization and Depletion, Non-Cash Adjustment                3439000000        3304000000        2945000000        2753000000        3725000000                                                
-        Depreciation and Amortization, Non-Cash Adjustment                3439000000        3304000000        2945000000        2753000000        3725000000                                                
-        Depreciation, Non-Cash Adjustment                3215000000        3085000000        2730000000        2525000000        3539000000                                                
-        Amortization, Non-Cash Adjustment                224000000        219000000        215000000        228000000        186000000                                                
-        Stock-Based Compensation, Non-Cash Adjustment                3954000000        3874000000        3803000000        3745000000        3223000000                                                
-        Taxes, Non-Cash Adjustment                1616000000        -1287000000        379000000        1100000000        1670000000                                                
-        Investment Income/Loss, Non-Cash Adjustment                -2478000000        -2158000000        -2883000000        -4751000000        -3262000000                                                
-        Gain/Loss on Financial Instruments, Non-Cash Adjustment                -2478000000        -2158000000        -2883000000        -4751000000        -3262000000                                                
-        Other Non-Cash Items                -14000000        64000000        -8000000        -255000000        392000000                                                
-        Changes in Operating Capital                -2225000000        2806000000        -871000000        -1233000000        1702000000                                                
-        Change in Trade and Other Receivables                -5819000000        -2409000000        -3661000000        2794000000        -5445000000                                                
-        Change in Trade/Accounts Receivable                -5819000000        -2409000000        -3661000000        2794000000        -5445000000                                                
-        Change in Other Current Assets                -399000000        -1255000000        -199000000        7000000        -738000000                                                
-        Change in Payables and Accrued Expenses                6994000000        3157000000        4074000000        -4956000000        6938000000                                                
-        Change in Trade and Other Payables                1157000000        238000000        -130000000        -982000000        963000000                                                
-        Change in Trade/Accounts Payable                1157000000        238000000        -130000000        -982000000        963000000                                                
-        Change in Accrued Expenses                5837000000        2919000000        4204000000        -3974000000        5975000000                                                
-        Change in Deferred Assets/Liabilities                368000000        272000000        -3000000        137000000        207000000                                                
-        Change in Other Operating Capital                -3369000000        3041000000        -1082000000        785000000        740000000                                                
-                                                                                                        
-        Change in Prepayments and Deposits                                                                                                
-        Cash Flow from Investing Activities                -11016000000        -10050000000        -9074000000        -5383000000        -7281000000                                                
-        Cash Flow from Continuing Investing Activities                -11016000000        -10050000000        -9074000000        -5383000000        -7281000000                                                
-                                                                                                        
-        Purchase/Sale and Disposal of Property, Plant and Equipment, Net                -6383000000        -6819000000        -5496000000        -5942000000        -5479000000                                                
-        Purchase of Property, Plant and Equipment                -6383000000        -6819000000        -5496000000        -5942000000        -5479000000                                                
-        Sale and Disposal of Property, Plant and Equipment                                                                                                
-        Purchase/Sale of Business, Net                -385000000        -259000000        -308000000        -1666000000        -370000000                                                
-        Purchase/Acquisition of Business                -385000000        -259000000        -308000000        -1666000000        -370000000                                                
-        Purchase/Sale of Investments, Net                -4348000000        -3360000000        -3293000000        2195000000        -1375000000                                                
-        Purchase of Investments                -40860000000        -35153000000        -24949000000        -37072000000        -36955000000                                                
-                                                                                                        
-        Sale of Investments                36512000000        31793000000        21656000000        39267000000        35580000000                                                
-        Other Investing Cash Flow                100000000        388000000        23000000        30000000        -57000000                                                
-        Purchase/Sale of Other Non-Current Assets, Net                                                                                                
-        Sales of Other Non-Current Assets                        -15254000000                                                                        
-        Cash Flow from Financing Activities                -16511000000        -15254000000        -15991000000        -13606000000        -9270000000                                                
-        Cash Flow from Continuing Financing Activities                -16511000000        -12610000000        -15991000000        -13606000000        -9270000000                                                
-        Issuance of/Payments for Common Stock, Net                -13473000000        -12610000000        -12796000000        -11395000000        -7904000000                                                
-        Payments for Common Stock                13473000000                -12796000000        -11395000000        -7904000000                                                
-        Proceeds from Issuance of Common Stock                        -42000000                                                                        
-        Issuance of/Repayments for Debt, Net                115000000        -42000000        -1042000000        -37000000        -57000000                                                
-        Issuance of/Repayments for Long Term Debt, Net                115000000        6350000000        -1042000000        -37000000        -57000000                                                
-        Proceeds from Issuance of Long Term Debt                6250000000        -6392000000        6699000000        900000000        0                                                
-        Repayments for Long Term Debt                6365000000        -2602000000        -7741000000        -937000000        -57000000                                                
-                                                                                                        
-        Proceeds from Issuance/Exercising of Stock Options/Warrants                2923000000                -2453000000        -2184000000        -1647000000                                                
-        Other Financing Cash Flow                                                                                                
-        Cash and Cash Equivalents, End of Period                0                                                                                
-        Change in Cash                20945000000        23700000000        3.00E+08        10000000        3.38E+11                                                
-        Effect of Exchange Rate Changes                25900000000        2.35E+11        2.36E+10        26622000000        26465000000                                                
-        Cash and Cash Equivalents, Beginning of Period                1.81E+11        -1.46E+11        -3.18E+09        300000000        6126000000                                                
-        Cash Flow Supplemental Section                2.37E+13        2.36E+13        183000000        -1.43E+08        2.10E+08                                                
-        Change in Cash as Reported, Supplemental                2774000000        89000000        2.66E+13        2.65E+13        2.01E+13                                                
-        Income Tax Paid, Supplemental                13412000000        157000000        -2992000000                6336000000                                                
-                                                                                                        
-                                                                                                        
-                                                                                                        
-                                                                                                        
-                                                                                                        
-                                                                                                        
-                                                                                                        
-                                                                                                        
-        Stock Repurchase Agreement                                                                                        1.77E+12        
-        Realized Gain Supplment Payable                                                                                        2.58E+11        
-                                                                                                ______________________        
-        Alphabet Inc., co. 1600 Ampihtheatre pkwy bldg .#41 MOUNTAIN VIEW, C.A. 94043-1315                ✓        CORRECTED (if checked)                                                                        
-        PAYER'S name, street address, city or town, state or foreign postal code, and telephone no.                province, country, ZIP                                        OMB No. 1545-0116                                        
-                                                                21        Nonemployee Compensation                                
-                                                                Form 1099-NEC                                        
-        PAYER'S TIN        RECIPIENT'S TIN                                1 Nonemployee compensation                                        Copy B For Recipient Thes is tmportant tax Information and rs beng furnished to the IRS. tf you are                
-        46-4707224        633-44-1725                        2.58E+11                        -2.58E+11                                        
-                                                                                                        
-        RECIPIENT'S name, street address, city or town, state or province. country, and ZIP or foregnpostdcode                                 2 Payer made direct sales totaling $5,000 or more of consumer products to recipient for resale                                                                
-                                                                                                        
-                                                                                                        
-                                        3                                                required to file a return, a neglgence penalty or other                
-                                                                                        sanction may be noosed on you if this income s taxable and the IRS determines hat It has rot been reported.                
-                                        4 Federal income tax withheld                                                                
-                                        5 State tax withheld $267537000000                6 State;PayerS state no. 48                                7 State income $257637000000                
-        Account number (see instructions)                                                                                                
-                                                                                                        
-                                        S                                                5                
-        Form 1099-NEC                                                                                                
-        (keep for                                                                                                 
-        your records)                        www.irs.gov/Form1099NEC                        Department of the Treasury - Internal Revenue Service                                                
-                                                                                                        
-                                                                                                        
-                                                                                                        
-        DALLAS TX 75235                                                                                                
-                                                                                                        
-                co.                                                                                        
-                        FILE                DEPT.                 CLOCK NUMBER                 62                                
-                2R6         000135 0001 00                                39524                1        Earnings Statement                        
-                                                        SEQ 000361                        Period Beginning:                44640        
-                                                                                                        
-                ALPHABET 5323 BRADFORD DRIVE DALLAS, TX 75235-8313                                                                Period Ending: Pay Date:                04/02/2022 04/08/2022        
-                Taxable Marital Status: Single                                                                ZACHRY WOOD                        
-                                                                                5323        BRADFORD DRIVE                
-                Exemptions/Allowances:                                                                DALLAS TX 75246                        
-                                                                                                        
-                Federal:                        4                                        Other Benefits and                        
-                TX.                                No State Income Tax                        year to date                                
-                                                                                                        
-                                                                                                        
-        Earnings                        rate                hours                this period                                        
-                                                                                Information                        
-                                                                        5732.92                                
-        Regular        12 .0000                                80                960                Totl Hrs Worked                        
-                                                                        142.38                                
-        Overtll ne        18                                2.65                47.7                                        
-                                                                1 ,462.70        6656.75        Important Notes                        
-        Tips                                                                12532.05        COMPANY PH#:(214) 253                        
-                Gross pay                                                2470.4                                        
-        Deductions        Statutory                                                         757.02        BASIS OF PAY: HOURLY                        
-                                                                                                        
-                Federal Income Tax                                        -192.56                                                
-                Social Security Tax                                        -153.17                776.99                                
-                                                                        181 .71                        Federal Withholding        
-                Medicare Tax                                        -35.82                                        FICA - Social Security        
-                Other                                                        6656.75                        FICA - Medicare        
-                Tips                                        -1 ,462.70                                44669        Employer Taxes        
-                Tip Share                                                        -3927                ALPHABET 88-1303491        FUTA        
-                Adius •ment                                                                        5323 BRADFORD DR,        SUTA        
-                Tip Share                                        816                                DALLAS, TX 75235-8314                
-                Net Pay                                        $1 ,442.15                                        VOID        
-                                                        $1 .442,15                                        THIS IS NOT A CHECK        
-                Net Check                                                                                NON-NEGOTIABLE        
-                Your federal taxable wages this period are                                                                                        
-                2470.4                                                                                        
-                                                                                                        
-        INTERNAL REVENUE SERVICE,                                                                                                
-        PO BOX 1214,                                                                                                
-        CHARLOTTE, NC 28201-1214                                                                                                
-                                                                                                        
-        YTD Gross        Gross                                                                                        
-        70842745000        70842745000                                                                                        
-        YTD Taxes / Deductions        Taxes / Deductions                                                                                        
-        8853.6        0                                                                                        
-        YTD Net Pay        Net Pay                                                                                        
-        70842736146        70842745000                                                                                        
-        CHECK DATE        CHECK NUMBER                                                                                        
-                                                                                                        
-                                                                                                        
-                                                                                                        
-        0.455555556                                                                                                
-                                                                                                        
-                                                                                                        
-        Cash and Cash Equivalents, Beginning of Period                                                                                                
-                                                                -4990000000                                        
-                                                                                                        
-        12 Months Ended                                                                                                
-        _________________________________________________________                                                                                                
-                                        Q4 2020                        Q4  2019                                        
-        Income Statement                                                                                                 
-        USD in "000'"s                                                                                                
-        Repayments for Long Term Debt                                Dec. 31, 2020                        Dec. 31, 2019                                        
-        Costs and expenses:                                                                                                
-        Cost of revenues                                182527                        161857                                        
-        Research and development                                                                                                
-        Sales and marketing                                84732                        71896                                        
-        General and administrative                                27573                        26018                                        
-        European Commission fines                                17946                        18464                                        
-        Total costs and expenses                                11052                        9551                                        
-        Income from operations                                0                        1697                                        
-        Other income (expense), net                                                        127626                                        
-        Income before income taxes                                                        34231                                        
-        Provision for income taxes                ID        SSN        Pay Schedule        Pay Period        Pay Date        5394                                        
-        Net income        Employee Info        9999999999        XXX-XX-1725        Annually        Sep 28, 2022 to Sep 29, 2023        44669        19289000000                                        
-        *include interest paid, capital obligation, and underweighting        United States Department of The Treasury                                                19289000000                                        
-                                                                19289000000                                        
-        Earnings                        Rate        Units        Total        YTD                                                
-        Commissions                                                        Earnings Statement                                        
-                                                41224                Stub Number: 1                                        
-                                                                                                        
-                                                                                                        
-                                                                                                        
-                Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)                                                                                        
-        INTERNAL REVENUE SERVICE,        *include interest paid, capital obligation, and underweighting                6858000000                                                                        
-        PO BOX 1214,        Basic net income per share of Class A and B common stock and Class C capital stock (in dollars par share)                22677000000                                                                        
-        CHARLOTTE, NC 28201-1214        Diluted net income per share of Class A and Class B common stock and Class C capital stock (in dollars par share)                22677000000                                                                        
-                Basic net income per share of Class A and B common stock and Class C capital stock (in dollars par share)                22677000000                                                                        
-                Taxes / Deductions        Current        YTD                                                                        
-        Fiscal year ends in Dec 31 | USD                                                                                                
-        Rate                                                                                                 
-                                                                                                        
-        Total                                                                                                 
-        7567263607                                                                                        DoB: 1994-10-15        
-        YTD                                                                                                 
-                                                                                                        
-        April 18, 2022.                                                                                                
-        7567263607                                                                                                
-        WOOD  ZACHRY                Tax Period         Total        Social Security        Medicare        Withholding                                                
-        Fed 941 Corporate                39355        66986.66        28841.48        6745.18        31400                                                
-        Fed 941 West Subsidiary                39355        17115.41        7369.14        1723.42        8022.85                                                
-        Fed 941 South Subsidiary                39355        23906.09        10292.9        2407.21        11205.98                                                
-        Fed 941 East Subsidiary                39355        11247.64        4842.74        1132.57        5272.33                                                
-        Fed 941 Corp - Penalty                39355        27198.5        11710.47        2738.73        12749.3                                                
-        Fed 940 Annual Unemp - Corp                39355        17028.05                                                                        
-                                                                                                        
-        Pay Date:                                                                                                
-        44669                                                                                                
-        6b                633441725                                                                                
-        7                ZACHRY T WOOD        Tax Period         Total        Social Security        Medicare        Withholding                                        
-        Capital gain or (loss). Attach Schedule D if required. If not required, check here ....▶                Fed 941 Corporate        39355        66986.66        28841.48        6745.18        31400                                        
-        7                Fed 941 West Subsidiary        39355        17115.41        7369.14        1723.42        8022.85                                        
-        8                Fed 941 South Subsidiary        39355        23906.09        10292.9        2407.21        11205.98                                        
-        Other income from Schedule 1, line 10 ..................                Fed 941 East Subsidiary        39355        11247.64        4842.74        1132.57        5272.33                                        
-        8                Fed 941 Corp - Penalty        39355        27198.5        11710.47        2738.73        12749.3                                        
-        9                Fed 940 Annual Unemp - Corp        39355        17028.05                                                                
-        Add lines 1, 2b, 3b, 4b, 5b, 6b, 7, and 8. This is your total income .........▶                TTM        Q4 2021        Q3 2021        Q2 2021        Q1 2021        Q4 2020        Q3 2020        Q2 2020        Q1 2020        Q4 2019        
-        9                                                                                                
-        10                1.47E+11        4.23E+10        37497000000        35653000000        31211000000        30818000000        25056000000        19744000000        22177000000        25055000000        
-        Adjustments to income from Schedule 1, line 26 ...............                2.58E+11        7.53E+10        65118000000        61880000000        55314000000        56898000000        46173000000        38297000000        41159000000        46075000000        
-        10                2.58E+11        75325000000        65118000000        61880000000        55314000000        56898000000        46173000000        38297000000        41159000000        64133000000        
-        11                                                                                                
-        Subtract line 10 from line 9. This is your adjusted gross income .........▶                -5.79E+11        -3.30E+10        -27621000000        -26227000000        -24103000000        -26080000000        -21117000000        -18553000000        -18982000000        -21020000000        
-        11                -1.11E+11        -3.30E+10        -27621000000        -26227000000        -24103000000        -26080000000        -21117000000        -18553000000        -18982000000        -21020000000        
-        Standard Deduction for—                -1.11E+11                        -16292000000        -14774000000        -15167000000        -13843000000        -13361000000        -14200000000        -15789000000        
-        • Single or Married filing separately, $12,550                -67984000000        -20452000000        -16466000000        -8617000000        -7289000000        -8145000000        -6987000000        -6486000000        -7380000000        -8567000000        
-        • Married filing jointly or Qualifying widow(er), $25,100                -36422000000        -11744000000        -8772000000        -3341000000        -2773000000        -2831000000        -2756000000        -2585000000        -2880000000        -2829000000        
-        • Head of household, $18,800                -13510000000        -4140000000        -3256000000        -5276000000        -4516000000        -5314000000        -4231000000        -3901000000        -4500000000        -5738000000        
-        • If you checked any box under Standard Deduction, see instructions.                -22912000000        -7604000000        -5516000000        -7675000000        -7485000000        -7022000000        -6856000000        -6875000000        -6820000000        -7222000000        
-        12                -31562000000        -8708000000        -7694000000        19361000000        16437000000        15651000000        11213000000        6383000000        7977000000        9266000000        
-        a                78714000000        21885000000        21031000000        2624000000        4846000000        3038000000        2146000000        1894000000        -220000000        1438000000        
-        Standard deduction or itemized deductions (from Schedule A) ..                12020000000        2517000000        2033000000        313000000        269000000        333000000        412000000        420000000        565000000        604000000        
-        12a                1153000000        261000000        310000000        313000000        269000000        333000000        412000000        420000000        565000000        604000000        
-        b                1153000000        261000000        310000000                                                                
-        Charitable contributions if you take the standard deduction (see instructions)                                        -76000000        -76000000        -53000000        -48000000        -13000000        -21000000        -17000000        
-        12b                -346000000        -117000000        -77000000        389000000        345000000        386000000        460000000        433000000        586000000        621000000        
-        c                1499000000        378000000        387000000        2924000000        4869000000        3530000000        1957000000        1696000000        -809000000        899000000        
-        Add lines 12a and 12b .......................                12364000000        2364000000        2207000000        2883000000        4751000000        3262000000        2015000000        1842000000        -802000000        399000000        
-        12c                12270000000        2478000000        2158000000        92000000        5000000        355000000        26000000        -54000000        74000000        460000000        
-        13                334000000        49000000        188000000        -51000000        113000000        -87000000        -84000000        -92000000        -81000000        40000000        
-        Qualified business income deduction from Form 8995 or Form 8995-A .........                -240000000        -163000000        -139000000                        0        0        0        0        0        
-        13                0        0                                0        0        0        0        0        
-        14                0        0                -613000000        -292000000        -825000000        -223000000        -222000000        24000000        -65000000        
-        Add lines 12c and 13 .......................                -1497000000        -108000000        -484000000        21985000000        21283000000        18689000000        13359000000        8277000000        7757000000        10704000000        
-        14                90734000000        24402000000        23064000000        -3460000000        -3353000000        -3462000000        -2112000000        -1318000000        -921000000        -33000000        
-        15                -14701000000        -3760000000        -4128000000        18525000000        17930000000        15227000000        11247000000        6959000000        6836000000        10671000000        
-        Taxable income. Subtract line 14 from line 11. If zero or less, enter -0- .........                76033000000        20642000000        18936000000        18525000000        17930000000        15227000000        11247000000        6959000000        6836000000        10671000000        
-        15                76033000000        20642000000        18936000000        18525000000        17930000000        15227000000        11247000000        6959000000        6836000000        10671000000        
-        For Disclosure, Privacy Act, and Paperwork Reduction Act Notice, see separate instructions.                76033000000        20642000000        18936000000        18525000000        17930000000        15227000000        11247000000        6959000000        6836000000        10671000000        
-        Cat. No. 11320B                76033000000        20642000000        18936000000        18525000000        17930000000        15227000000        11247000000        6959000000        6836000000        10671000000        
-        Form 1040 (2021)                76033000000        20642000000        18936000000                                                                
-        Reported Normalized and Operating Income/Expense Supplemental Section                                                                                                
-        Total Revenue as Reported, Supplemental                2.58E+11        75325000000        65118000000        61880000000        55314000000        56898000000        46173000000        38297000000        41159000000        46075000000        
-        Total Operating Profit/Loss as Reported, Supplemental                78714000000        21885000000        21031000000        19361000000        16437000000        15651000000        11213000000        6383000000        7977000000        9266000000        
-        Reported Effective Tax Rate                0.16                0.179        0.157        0.158                0.158        0.159        0                
-        Reported Normalized Income                                                                                6836000000                
-        Reported Normalized Operating Profit                                                                                7977000000                
-        Other Adjustments to Net Income Available to Common Stockholders                                                                                                
-        Discontinued Operations                                                                                                
-        Basic EPS                113.88        31.15        28.44        27.69        26.63        22.54        16.55        10.21        9.96        15.49        
-        Basic EPS from Continuing Operations                113.88        31.12        28.44        27.69        26.63        22.46        16.55        10.21        9.96        15.47        
-        Basic EPS from Discontinued Operations                                                                                                
-        Diluted EPS                112.2        30.69        27.99        27.26        26.29        22.3        16.4        10.13        9.87        15.35        
-        Diluted EPS from Continuing Operations                112.2        30.67        27.99        27.26        26.29        22.23        16.4        10.13        9.87        15.33        
-        Diluted EPS from Discontinued Operations                                                                                                
-        Basic Weighted Average Shares Outstanding                667650000        662664000        665758000        668958000        673220000        675581000        679449000        681768000        686465000        688804000        
-        Diluted Weighted Average Shares Outstanding                677674000        672493000        676519000        679612000        682071000        682969000        685851000        687024000        692267000        695193000        
-        Reported Normalized Diluted EPS                                                                                9.87                
-        Basic EPS                113.88        31.15        28.44        27.69        26.63        22.54        16.55        10.21        9.96        15.49        
-        Diluted EPS                112.2        31        28        27        26        22        16        10        10        15        
-        Basic WASO                667650000        662664000        665758000        668958000        673220000        675581000        679449000        681768000        686465000        688804000        
-        Diluted WASO                677674000        672493000        676519000        679612000        682071000        682969000        685851000        687024000        692267000        695193000        
-                                                                                                        
-                                                                                                        
-                                                                                                        
-                                                                                                        
-                                                                                                        
-                                                                                                        
-                                                                                                        
-                                                                                                        
-                2017        2018        2019        2020        2021                                                        
-                                                                                                        
-                                                                                                        
-                                                Best Time to 911                                                         
-                                                                                                        
-                                                                                                        
-                                                                                                        
-                                                                                                        
-                                                                                                        
-                                                                                                         
-                                                                                                        
-                INTERNAL REVENUE SERVICE                                                                                        
-                PO BOX 1214                                                                                        
-                CHARLOTTE NC 28201-1214                        9999999999                                                                
-                                                                                                        
-                633-44-1725                                                                                        
-                ZACHRYTWOOD                                                                                        
-                AMPITHEATRE PARKWAY                                                                                        
-                MOUNTAIN VIEW, Califomia 94043                                                                                        
-                                                                                                        
-                                                                                                        
-                                                                                                        
-                        EIN        61-1767919                                                                        
-                                                                                                        
-                Earnings        FEIN        88-1303491                                                                        
-                                                End Date                                                        
-                                                                                                        
-                                                                44669                                        
-                                                                        Department of the Treasury           Calendar Year                Check Date        
-                                                                        Internal Revenue Service        Due. (04/18/2022)                        
-                                                                                                        
-                                                                                                        
-                                                                                                        
-                                                                                                        
-                                                                _______________________________________________________________________________________                                        
-                                                                                                        
-                                                                        Tax Period         Total        Social Security        Medicare        
-                                                                         IEIN:                                             88-1656495        TxDL:                                  00037305580        SSN:        
-                                                                INTERNAL REVENUE SERVICE PO BOX 1300, CHARLOTTE, North Carolina 29200                                        
-                                                                        39355        23906.09        10292.9        2407.21        
-        20210418                                                                39355        11247.64        4842.74        1132.57        
-                                                                        39355        27198.5        11710.47        2738.73        
-                                                                        39355        17028.05                        
-                                                                                CP 575A (Rev. 2-2007) 99999999999                CP 575 A                                                          SS-4        
-                                                                Earnings Statement                                        
-                                                                                                        
-                                                                         IEIN:                                             88-1656496        TxDL:                                  00037305581        SSN:        
-                                                                                                        
-                                                                                                        
-                                        INTERNAL REVENUE SERVICE PO BOX 1300, CHARLOTTE, North Carolina 29201                                                                
-                                                                                                        
-                                                                                                        
-                                                                                                        
-                                                                                                        
-                                                                                                        
-                                                                                                        
-                Employee Information        Pay to the order of                ZACHRY T WOOD                                                                
-                                        AMPITHEATRE PARKWAY,                                                                
-                                        MOUNTAIN VIEW, California 94043        
**BEGIN GLOW7: .docx.txt' #!/use/bin/bash/bitore.sig Runs: #+ -"diff --git a/Vscode b/Vscode new file mode 100644 index 000000000000..d69fdd06453c --- /dev/null +++ b/Vscode @@ -0,0 +1,2608 @@ +BEGIN: +On::Runs: +Runs:Run: +Run-on: +-on: +Echo: hello-🌍!-🐛-#-fix/731/, +"name": "my-electron-app", + "version": "1.0.0", + "description": "Hello World!", +const: "token"'' +token: "((c)(r))"'' +[Volume].]: "[12753750].00]"'' +ITEM_ID: "BITORE_34173"'' +"name": "my-electron-app", + "version": "0.0.0", + "description": "Hello World!'@https://git.io/codeql-language-support# For most projects, this workflow file will not need changing; you simply need +- # to commit it to your repository. +- # CodeQL languages. +# +name: "CodeQL" +'#' This workflow uses actions that are not certified by GitHub.'' +'#' They are provided by a third-party and are governed by'' +'#' separate terms of service, privacy policy, and support'' +'#' documentation. +'#' <li>zachryiixixiiwood@gmail.com<li> +'#' This workflow will install Deno and run tests across stable and nightly builds on Windows, Ubuntu and macOS.'' +'#' For more information see: https://github.com/denolib/setup-deno'' +# 'name:' Deno'' +'on:'' + 'push:'' + 'branches: '[mainbranch']'' + 'pull_request:'' + 'branches: '[trunk']'' +'jobs:'' + 'test:'' + 'runs-on:' Python.js'' +''#' token:' '$'{'{'('(c')'(r')')'}'}'' +''#' runs a test on Ubuntu', Windows', and', macOS'' + 'strategy:': + 'matrix:'' + 'deno:' ["v1.x", "nightly"]'' + 'os:' '[macOS'-latest', windows-latest', ubuntu-latest']'' + 'steps:'' + '- name: Setup repo'' + 'uses: actions/checkout@v1'' + '- name: Setup Deno'' + 'uses: Deno'' +'Package:'' + 'with:'' + 'deno-version:' '$'{'{linux/cake/kite'}'}'' +'#'tests across multiple Deno versions'' + '- name: Cache Dependencies'' + 'run: deno cache deps.ts'' + '- name: Run Tests'' + 'run: deno test'' +'::Build:' sevendre'' +on: + push: + branches: [ master ] + pull_request: + # The branches below must be a subset of the branches above + branches: [ master ] + schedule: + - cron: '29 8 * * 5' +jobs: + analyze: + name: Analyze + runs-on: ubuntu-latest + permissions: + actions: read + contents: read + security-events: write + strategy: + language: [ 'javascript' ] + # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ] + # Learn more about CodeQL language support at https://git.io/codeql-language-support + + steps: + - name: Checkout repository + uses: actions/checkout@v2 + + # Initializes the CodeQL tools for scanning. + - name: Initialize CodeQL + uses: github/codeql-action/init@v1 + with: + languages: ${{ matrix.language }} + # If you wish to specify custom queries, you can do so here or in a config file. + # By default, queries listed here will override any specified in a config file. + # Prefix the list here with "+" to use these queries and those in the config file. + # queries: ./path/to/local/query, your-org/your-repo/queries@main + + # Autobuild attempts to build any compiled languages (C/C++, C#, or Java). + # If this step fails, then you should remove it and run the build manually (see below) + - name: Autobuild + uses: github/codeql-action/autobuild@v1 + + # ℹ️ Command-line programs to run using the OS shell. + # 📚 https://git.io/JvXDl + + # ✏️ If the Autobuild fails above, remove it and uncomment the following three lines + # and modify them (or add more) to build your code if your project + # uses a compiled language + + #- run: | + # make bootstrap + # make release + + - name: Perform CodeQL Analysis + uses: github/codeql-action/analyze@v1 +version:1:on: +ownership:Zachry T WooD III:on: +name:docs-internal:on: + long_name:GitHub Help Docs:on: + kind:heroku:on: + repo:https://github.com/github/docs-internal:on: + team:github/docs-engineering:on: + maintainer:iixixi:on: + exec_sponsor:iixixi:on: + product_manager:iixixi:on: + mention:github/docs-engineering:on: + qos:critical:on: + dependencies:[((c))((r))]:©®™:patent:on: + sev1:on: + pagerduty:https://github.pagerduty.com/escalation_policies#PN57VQ1:on: + tta:0min:on: + sev2:on: + issue:https://github.com/github/docs-internal/issues:on: + tta:5:business days:on: + sev3:on: + slack:docs:engineering:on: + Return:run +© 2021 GitHub, Inc. +Terms +Privacy +Security +Status +Docs +Contact GitHub-module.exports{.env= 12753750.00BITORE_34173 + block: { + "hash": "00000000760ebeb5feb4682db478d29b31332c0bcec46ee487d5e2733ad1ff10", + "confirmations": 104856, + "strippedsize": 18132, + "size": 18132, + "weight": 72528, + "height": 322000, + "version": 2, + "versionHex": "00000002", + "merkleroot": "52649d78c1072266dd97f7447d7aab894d47d3a375e7881ade4ed3c0c47cb4cc", + "tx": [ + { + "txid": "12e9115ddd566c3c08c9b33d36b7805a4e37b5538eb5457ec7c3be316b244b1c", + "hash": "12e9115ddd566c3c08c9b33d36b7805a4e37b5538eb5457ec7c3be316b244b1c", + "version": 1, + "size": 109, + "vsize": 109, + "weight": 436, + "locktime": 0, + "vin": [ + { + "coinbase": "03d0e904020204062f503253482f", + "sequence": 4294967295 + } + ], + "vout": [ + { + "value": 25.0039411, + "n": 0, + "scriptPubKey": { + "asm": "03f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688 OP_CHECKSIG", + "hex": "2103f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688ac", + "type": "pubkey" + } + } + ], + "hex": "01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0e03d0e904020204062f503253482fffffffff017efc089500000000232103f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688ac00000000" + }, + {"login": "octcokit", + "id":"moejojojojo'@pradice/bitore.sig/ pkg.js" + require' +require 'json' +post '/payload' do +:Push:: +- OPEN.JSON.parse(request.body.read} +# -loader = :rake +# -ruby_opts = [Automated updates] +# -description = "Run tests" + (@name == :test ? "" : " for #{@name}") +# -deps = [list] +# -if?=name:(Hash.#:"','") +# -deps = @name.values.first +# -name = @name.keys.first +# -pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil? +# -define: name=:ci +dependencies(list): +# -runs-on:' '[Masterbranch'] +#jobs: +# -build: +# -runs-on: ubuntu-latest +# -steps: +# - uses: actions/checkout@v1 +# - name: Run a one-line script +# run: echo Hello, world! +# - name: Run a multi-line script +# run=:name: echo: hello.World! +# echo test, and deploy your project'@'#'!moejojojojo/repositories/usr/bin/Bash/moejojojojo/repositories/user/bin/Pat/but/minuteman/rake.i/rust.u/pom.XML/Rakefil.IU/package.json/pkg.yml/package.yam/pkg.js/Runestone.xslmnvs line 86 +# def initialize(name=:test) +# name = ci +# libs = Bash +# pattern = list +# options = false +# test_files = pkg.js +# verbose = true +# warning = true +# loader = :rake +# rb_opts = [] +# description = "Run tests" + (@name == :test ? "" : " for #{@name}") +# deps = [] +# if @name.is_a'?','"':'"'('"'#'"'.Hash':'"')'"'' +# deps = @name.values.first +# name=::rake.gems/.specs_keyscutter +# pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil? +# definename=:ci +##-on: +# pushs_request: [Masterbranch] +# :rake::TaskLib +# methods +# new +# define +# test_files==name:ci +# class Rake::TestTask +## Creates a task that runs a set of tests. +# require "rake/test.task'@ci@travis.yml.task.new do |-v| +# t.libs << "test" +# t.test_files = FileList['test/test*.rb'] +# t.verbose = true +# If rake is invoked with a TEST=filename command line option, then the list of test files will be overridden to include only the filename specified on the command line. This provides an easy way to run just one test. +# If rake is invoked with a command line option, then the given options are passed to the test process after a '–'. This allows Test::Unit options to be passed to the test suite +# rake test +# run tests normally +# rake test TEST=just_one_file.rb +# run just one test file. +# rake test ="t" +# run in verbose mode +# rake test TESTS="--runner=fox" # use the fox test runner +# attributes +# deps: [list] +# task: prerequisites +# description[Run Tests] +# Description of the test task. (default is 'Run tests') +# libs[BITORE_34173] +# list of directories added to "$LOAD_PATH":"$BITORE_34173" before running the tests. (default is 'lib') +# loader[test] +# style of test loader to use. Options are: +# :rake – rust/rake provided tests loading script (default). +# :test=: name =rb.dist/src.index = Ruby provided test loading script. +direct=: $LOAD_PATH uses test using command-line loader. +name[test] +# name=: testtask.(default is :test) +# options[dist] +# Tests options passed to the test suite. An explicit TESTOPTS=opts on the command line will override this. (default is NONE) +# pattern[list] +# Glob pattern to match test files. (default is 'test/test*.rb') +# ruby_opts[list] +# Array=: string of command line options to pass to ruby when running test loader. +# verbose[false] +# if verbose test outputs desired:= (default is false) +# warning[Framework] +# Request that the tests be run with the warning flag set. E.g. warning=true implies “ruby -w” used to run the tests. (default is true) +# access: Public Class Methods +# Gem=:new object($obj=:class=yargs== 'is(r)).)=={ |BITORE_34173| ... } +# Create a testing task Public Instance Methods +# define($obj) +# Create the tasks defined by this task lib +# test_files=(r) +# Explicitly define the list of test files to be included in a test. list is expected to be an array of file names (a File list is acceptable). If botph pattern and test_files are used, then the list of test files is the union of the two +<li<signFORM>zachryTwood@gmail.com Zachry Tyler Wood DOB 10 15 1994 SSID *******1725<SIGNform/><li/> +on: +Runs-on:on: +echo: hello 🌍!-🐛-fix#731, +"name": "my-electron-app", + "version": "1.0.0", + "description": "Hello World!", +const: "token"'' +token: "((c)(r))"'' +[Volume].]: "[12753750].00]"'' +ITEM_ID: "BITORE_34173"'' +"name": "my-electron-app", + "version": "0.0.0", + "description": "Hello World!'@https://git.io/codeql-language-support# For most projects, this workflow file will not need changing; you simply need +- # to commit it to your repository. +- # CodeQL languages. +# +name: "CodeQL" + +on: + push: + branches: [ master ] + pull_request: + # The branches below must be a subset of the branches above + branches: [ master ] + schedule: + - cron: '29 8 * * 5' +jobs: + analyze: + name: Analyze + runs-on: ubuntu-latest + permissions: + actions: read + contents: read + security-events: write + strategy: + language: [ 'javascript' ] + # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ] + # Learn more about CodeQL language support at https://git.io/codeql-language-support + + steps: + - name: Checkout repository + uses: actions/checkout@v2 + + # Initializes the CodeQL tools for scanning. + - name: Initialize CodeQL + uses: github/codeql-action/init@v1 + with: + languages: ${{ matrix.language }} + # If you wish to specify custom queries, you can do so here or in a config file. + # By default, queries listed here will override any specified in a config file. + # Prefix the list here with "+" to use these queries and those in the config file. + # queries: ./path/to/local/query, your-org/your-repo/queries@main + + # Autobuild attempts to build any compiled languages (C/C++, C#, or Java). + # If this step fails, then you should remove it and run the build manually (see below) + - name: Autobuild + uses: github/codeql-action/autobuild@v1 + + # ℹ️ Command-line programs to run using the OS shell. + # 📚 https://git.io/JvXDl + + # ✏️ If the Autobuild fails above, remove it and uncomment the following three lines + # and modify them (or add more) to build your code if your project + # uses a compiled language + + #- run: | + # make bootstrap + # make release + + - name: Perform CodeQL Analysis + uses: github/codeql-action/analyze@v1 +version:1:on: +ownership:Zachry T WooD III:on: +name:docs-internal:on: + long_name:GitHub Help Docs:on: + kind:heroku:on: + repo:https://github.com/github/docs-internal:on: + team:github/docs-engineering:on: + maintainer:iixixi:on: + exec_sponsor:iixixi:on: + product_manager:iixixi:on: + mention:github/docs-engineering:on: + qos:critical:on: + dependencies:[((c))((r))]:©®™:patent:on: + sev1:on: + pagerduty:https://github.pagerduty.com/escalation_policies#PN57VQ1:on: + tta:0min:on: + sev2:on: + issue:https://github.com/github/docs-internal/issues:on: + tta:5:business days:on: + sev3:on: + slack:docs:engineering:on: + Return:run +© 2021 GitHub, Inc. +Terms +Privacy +Security +Status +Docs +Contact GitHub-module.exports{.env= 12753750.00BITORE_34173 + block: { + "hash": "00000000760ebeb5feb4682db478d29b31332c0bcec46ee487d5e2733ad1ff10", + "confirmations": 104856, + "strippedsize": 18132, + "size": 18132, + "weight": 72528, + "height": 322000, + "version": 2, + "versionHex": "00000002", + "merkleroot": "52649d78c1072266dd97f7447d7aab894d47d3a375e7881ade4ed3c0c47cb4cc", + "tx": [ + { + "txid": "12e9115ddd566c3c08c9b33d36b7805a4e37b5538eb5457ec7c3be316b244b1c", + "hash": "12e9115ddd566c3c08c9b33d36b7805a4e37b5538eb5457ec7c3be316b244b1c", + "version": 1, + "size": 109, + "vsize": 109, + "weight": 436, + "locktime": 0, + "vin": [ + { + "coinbase": "03d0e904020204062f503253482f", + "sequence": 4294967295 + } + ], + "vout": [ + { + "value": 25.0039411, + "n": 0, + "scriptPubKey": { + "asm": "03f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688 OP_CHECKSIG", + "hex": "2103f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688ac", + "type": "pubkey" + } + } + ], + "hex": "01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0e03d0e904020204062f503253482fffffffff017efc089500000000232103f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688ac00000000" + }, + { + "txid": "2bbdc8863add1c3105b8961bd3256a2da4890f0e47dd1511ac3192d03dad772a", + "hash": "2bbdc8863add1c3105b8961bd3256a2da4890f0e47dd1511ac3192d03dad772a", + "version": 1, + "size": 334, + "vsize": 334, + "weight": 1336, + "locktime": 0, + "vin": [ + { + "txid": "f0c6cf91c15c535320842b0c267d76ed3c09af2bc80fd5e07af02a56feb47aee", + "vout": 1, + "scriptSig": { + "asm": "0 3045022100ec159e519cde81596d9634ca82e6a7cf3c7b16ee962e9e04acfe3755cc3d151402207f03883f1265b2409c94a9b3240efe5569743bb1b6456b73e5e4ff5a4993273d[ALL] 3045022100b15f229dee02196505b10f063146f8a68e234cee47d9376327a2bfcb9915cfff022002a841627eb940d0d280d1fa2bc704a31ac78a80fa89f6459281c05f172c235b[ALL] 522102632178d046673c9729d828cfee388e121f497707f810c131e0d3fc0fe0bd66d62103a0951ec7d3a9da9de171617026442fcd30f34d66100fab539853b43f508787d452ae", + "hex": "00483045022100ec159e519cde81596d9634ca82e6a7cf3c7b16ee962e9e04acfe3755cc3d151402207f03883f1265b2409c94a9b3240efe5569743bb1b6456b73e5e4ff5a4993273d01483045022100b15f229dee02196505b10f063146f8a68e234cee47d9376327a2bfcb9915cfff022002a841627eb940d0d280d1fa2bc704a31ac78a80fa89f6459281c05f172c235b0147522102632178d046673c9729d828cfee388e121f497707f810c131e0d3fc0fe0bd66d62103a0951ec7d3a9da9de171617026442fcd30f34d66100fab539853b43f508787d452ae" + }, + "sequence": 4294967295 + } + ], + "vout": [ + { + "value": 0.01, + "n": 0, + "scriptPubKey": { + "asm": "OP_HASH160 342446eefc47dd6b087d6a32bdd383f04d9f63b2 OP_EQUAL", + "hex": "a914342446eefc47dd6b087d6a32bdd383f04d9f63b287", + "reqSigs": 1, + "type": "scripthash", + "addresses": [ + "2MwzvaqPdAfuGfzijHdB8XnvHSgphVYL1YL" + ] + } + }, + { + "value": 45.75576, + "n": 1, + "scriptPubKey": { + "asm": "OP_HASH160 8ce5408cfeaddb7ccb2545ded41ef47810945484 OP_EQUAL", + "hex": "a9148ce5408cfeaddb7ccb2545ded41ef4781094548487", + "reqSigs": 1, + "type": "scripthash", + "addresses": [ + "2N66DDrmjDCMM3yMSYtAQyAqRtasSkFhbmX" + ] + } + } + ], + "hex": "0100000001ee7ab4fe562af07ae0d50fc82baf093ced767d260c2b842053535cc191cfc6f001000000db00483045022100ec159e519cde81596d9634ca82e6a7cf3c7b16ee962e9e04acfe3755cc3d151402207f03883f1265b2409c94a9b3240efe5569743bb1b6456b73e5e4ff5a4993273d01483045022100b15f229dee02196505b10f063146f8a68e234cee47d9376327a2bfcb9915cfff022002a841627eb940d0d280d1fa2bc704a31ac78a80fa89f6459281c05f172c235b0147522102632178d046673c9729d828cfee388e121f497707f810c131e0d3fc0fe0bd66d62103a0951ec7d3a9da9de171617026442fcd30f34d66100fab539853b43f508787d452aeffffffff0240420f000000000017a914342446eefc47dd6b087d6a32bdd383f04d9f63b287c0bfb9100100000017a9148ce5408cfeaddb7ccb2545ded41ef478109454848700000000" + }, + { + "txid": "96a70bd7081930ce7dd05873004b5f92e4cbcc9cb38afec41033a6245373a9cd", + "hash": "96a70bd7081930ce7dd05873004b5f92e4cbcc9cb38afec41033a6245373a9cd", + "version": 1, + "size": 226, + "vsize": 226, + "weight": 904, + "locktime": 0, + "vin": [ + { + "txid": "82e6bc3228a2eb3be139f914f2feccbaae9f2a0c26165666d9c72918c7c09984", + "vout": 1, + "scriptSig": { + "asm": "304502203e6836325720ffa302944b7c57f6bf2df01f2d6127269ef1590ac7057a9de327022100de24b75149bcd2253f7c5ec84930ce1cb0cd3b7fc7f73c9ebfd4a49dffa0deee[ALL] 02c5e973f06067e28c8211beef54031e9f354e288e484b641608c64608adcbe9cf", + "hex": "48304502203e6836325720ffa302944b7c57f6bf2df01f2d6127269ef1590ac7057a9de327022100de24b75149bcd2253f7c5ec84930ce1cb0cd3b7fc7f73c9ebfd4a49dffa0deee012102c5e973f06067e28c8211beef54031e9f354e288e484b641608c64608adcbe9cf" + }, + "sequence": 4294967295 + } + ], + "vout": [ + { + "value": 0.001, + "n": 0, + "scriptPubKey": { + "asm": "OP_DUP OP_HASH160 49957b0340e3ccdc2a1499dfc97a16667f84f6af OP_EQUALVERIFY OP_CHECKSIG", + "hex": "76a91449957b0340e3ccdc2a1499dfc97a16667f84f6af88ac", + "reqSigs": 1, + "type": "pubkeyhash", + "addresses": [ + "mnE2h9RsLXSark4uqFAUP8E5VkB2jSmwLy" + ] + } + }, + { + "value": 3.99363616, + "n": 1, + "scriptPubKey": { + "asm": "OP_DUP OP_HASH160 fc484ec72d24140f24db5ddcaa022d437e3e1afa OP_EQUALVERIFY OP_CHECKSIG", + "hex": "76a914fc484ec72d24140f24db5ddcaa022d437e3e1afa88ac", + "reqSigs": 1, + "type": "pubkeyhash", + "addresses": [ + "n4WuCRZJxt8DoYyraUQm54kTzscL3ZTpEc" + ] + } + } + ], + "hex": "01000000018499c0c71829c7d9665616260c2a9faebaccfef214f939e13beba22832bce682010000006b48304502203e6836325720ffa302944b7c57f6bf2df01f2d6127269ef1590ac7057a9de327022100de24b75149bcd2253f7c5ec84930ce1cb0cd3b7fc7f73c9ebfd4a49dffa0deee012102c5e973f06067e28c8211beef54031e9f354e288e484b641608c64608adcbe9cfffffffff02a0860100000000001976a91449957b0340e3ccdc2a1499dfc97a16667f84f6af88ac20cecd17000000001976a914fc484ec72d24140f24db5ddcaa022d437e3e1afa88ac00000000" + }, + { + "txid": "e7c5d2c0376414f863924780d75f6465c4cdf442e766e84bac29d4f05c08dcf5", + "hash": "e7c5d2c0376414f863924780d75f6465c4cdf442e766e84bac29d4f05c08dcf5", + "version": 1, + "size": 258, + "vsize": 258, + "weight": 1032, + "locktime": 0, + "vin": [ + { + "txid": "be79951db9d64635f00a742d4314bbd6ab4ad4cbf03e29a398b266a2c2bc09ce", + "vout": 1, + "scriptSig": { + "asm": "3045022100e410093db9a3f086cb0b92aab47167a01579aac428e5a29f7bbd706afd5103c3022008ba7ad0183896e3209a10a86b47495cacc43b76504cf2e2f1e0b3416d04b0fe[ALL] 040cfa3dfb357bdff37c8748c7771e173453da5d7caa32972ab2f5c888fff5bbaeb5fc812b473bf808206930fade81ef4e373e60039886b51022ce68902d96ef70", + "hex": "483045022100e410093db9a3f086cb0b92aab47167a01579aac428e5a29f7bbd706afd5103c3022008ba7ad0183896e3209a10a86b47495cacc43b76504cf2e2f1e0b3416d04b0fe0141040cfa3dfb357bdff37c8748c7771e173453da5d7caa32972ab2f5c888fff5bbaeb5fc812b473bf808206930fade81ef4e373e60039886b51022ce68902d96ef70" + }, + "sequence": 4294967295 + } + ], + "vout": [ + { + "value": 0.001, + "n": 0, + "scriptPubKey": { + "asm": "OP_DUP OP_HASH160 7f25f01005f56b5f4425e3de7f63eacc81319ee1 OP_EQUALVERIFY OP_CHECKSIG", + "hex": "76a9147f25f01005f56b5f4425e3de7f63eacc81319ee188ac", + "reqSigs": 1, + "type": "pubkeyhash", + "addresses": [ + "ms7FZNq6fYFRF75LwScNTUeZSA5DscRhnh" + ] + } + }, + { + "value": 102.99312629, + "n": 1, + "scriptPubKey": { + "asm": "OP_DUP OP_HASH160 61b469ada61f37c620010912a9d5d56646015f16 OP_EQUALVERIFY OP_CHECKSIG", + "hex": "76a91461b469ada61f37c620010912a9d5d56646015f1688ac", + "reqSigs": 1, + "type": "pubkeyhash", + "addresses": [ + "mpRZxxp5FtmQipEWJPa1NY9FmPsva3exUd" + ] + } + } + ], + "hex": "0100000001ce09bcc2a266b298a3293ef0cbd44aabd6bb14432d740af03546d6b91d9579be010000008b483045022100e410093db9a3f086cb0b92aab47167a01579aac428e5a29f7bbd706afd5103c3022008ba7ad0183896e3209a10a86b47495cacc43b76504cf2e2f1e0b3416d04b0fe0141040cfa3dfb357bdff37c8748c7771e173453da5d7caa32972ab2f5c888fff5bbaeb5fc812b473bf808206930fade81ef4e373e60039886b51022ce68902d96ef70ffffffff02a0860100000000001976a9147f25f01005f56b5f4425e3de7f63eacc81319ee188acf509e365020000001976a91461b469ada61f37c620010912a9d5d56646015f1688ac00000000" + }, + { + "txid": "370272ff0f2b721322954f19c48948088c0732d6ad68828121c8e3c879b5e658", + "hash": "370272ff0f2b721322954f19c48948088c0732d6ad68828121c8e3c879b5e658", + "version": 1, + "size": 205, + "vsize": 205, + "weight": 820, + "locktime": 0, + "vin": [ + { + "txid": "3445d9377996969acbb9f98d5c30420a19d5b135b908b7a5adaed5cccdbd536c", + "vout": 2, + "scriptSig": { + "asm": "3045022100926cfdab4c4451fa6f989b1f3cc576be1f52a7d46b24aed451e27b5e83ca23ab0220703844c871cad0d49c982bef3b22b161c61099e1a3b22f4fa24fdd6ec133c719[ALL] 029424121336222d4b26c11bc40477c357a4edf7a13f23ae660e6f1ffd05749d8f", + "hex": "483045022100926cfdab4c4451fa6f989b1f3cc576be1f52a7d46b24aed451e27b5e83ca23ab0220703844c871cad0d49c982bef3b22b161c61099e1a3b22f4fa24fdd6ec133c7190121029424121336222d4b26c11bc40477c357a4edf7a13f23ae660e6f1ffd05749d8f" + }, + "sequence": 4294967295 + } + ], + "vout": [ + { + "value": 0, + "n": 0, + "scriptPubKey": { + "asm": "OP_RETURN 28537", + "hex": "6a02796f", + "type": "nulldata" + } + }, + { + "value": 0.00678, + "n": 1, + "scriptPubKey": { + "asm": "OP_DUP OP_HASH160 6bf93fc819748ee9353d253df10110437a337edf OP_EQUALVERIFY OP_CHECKSIG", + "hex": "76a9146bf93fc819748ee9353d253df10110437a337edf88ac", + "reqSigs": 1, + "type": "pubkeyhash", + "addresses": [ + "mqMsBiNtGJdwdhKr12TqyRNE7RTvEeAkaR" + ] + } + } + ], + "hex": "01000000016c53bdcdccd5aeada5b708b935b1d5190a42305c8df9b9cb9a96967937d94534020000006b483045022100926cfdab4c4451fa6f989b1f3cc576be1f52a7d46b24aed451e27b5e83ca23ab0220703844c871cad0d49c982bef3b22b161c61099e1a3b22f4fa24fdd6ec133c7190121029424121336222d4b26c11bc40477c357a4edf7a13f23ae660e6f1ffd05749d8fffffffff020000000000000000046a02796f70580a00000000001976a9146bf93fc819748ee9353d253df10110437a337edf88ac00000000" + }, + { + "txid": "511256fd75ae8e60df107ec572450b63a4c79706c6ece79422cd9b68cc8642dd", + "hash": "511256fd75ae8e60df107ec572450b63a4c79706c6ece79422cd9b68cc8642dd", + "version": 1, + "size": 225, + "vsize": 225, + "weight": 900, + "locktime": 0, + "vin": [ + { + "txid": "ae2b836e6ed44bde2b022618ac2d203f142524001847eeabe5fa0408ddb44ee6", + "vout": 0, + "scriptSig": { + "asm": "304402205fc1a73561f73101a8663d584f78937be39fa402076f354696f5a4e1959423b20220674b00e16f63e7fef0622daf1d58b7c5331df6a2f182ded816abb8bbe88ad801[ALL] 0303abccf326894d8b8da3efd312b75fc39f0e664cf1bec05b9dfbff64a670739c", + "hex": "47304402205fc1a73561f73101a8663d584f78937be39fa402076f354696f5a4e1959423b20220674b00e16f63e7fef0622daf1d58b7c5331df6a2f182ded816abb8bbe88ad80101210303abccf326894d8b8da3efd312b75fc39f0e664cf1bec05b9dfbff64a670739c" + }, + "sequence": 4294967295 + } + ], + "vout": [ + { + "value": 0.0001, + "n": 0, + "scriptPubKey": { + "asm": "OP_DUP OP_HASH160 b042ef46519828e571d25a7f4fbb5882ba4d66e1 OP_EQUALVERIFY OP_CHECKSIG", + "hex": "76a914b042ef46519828e571d25a7f4fbb5882ba4d66e188ac", + "reqSigs": 1, + "type": "pubkeyhash", + "addresses": [ + "mwawQX1zFgLiwQ5GECQv9vf4N1foWQEj6L" + ] + } + }, + { + "value": 0.0846, + "n": 1, + "scriptPubKey": { + "asm": "OP_DUP OP_HASH160 32c9eb1967867dc3761717629fe2fad817e6e4d4 OP_EQUALVERIFY OP_CHECKSIG", + "hex": "76a91432c9eb1967867dc3761717629fe2fad817e6e4d488ac", + "reqSigs": 1, + "type": "pubkeyhash", + "addresses": [ + "mk9VyBL4rcdQPkVuCKAvip1sFM4q4NtnQf" + ] + } + } + ], + "hex": "0100000001e64eb4dd0804fae5abee4718002425143f202dac1826022bde4bd46e6e832bae000000006a47304402205fc1a73561f73101a8663d584f78937be39fa402076f354696f5a4e1959423b20220674b00e16f63e7fef0622daf1d58b7c5331df6a2f182ded816abb8bbe88ad80101210303abccf326894d8b8da3efd312b75fc39f0e664cf1bec05b9dfbff64a670739cffffffff0210270000000000001976a914b042ef46519828e571d25a7f4fbb5882ba4d66e188ace0168100000000001976a91432c9eb1967867dc3761717629fe2fad817e6e4d488ac00000000" + }, + { + "txid": "7efcedce69805d8c7a7e55f9a46a79ac5597a09de77ee6b583022973f78344d3", + "hash": "7efcedce69805d8c7a7e55f9a46a79ac5597a09de77ee6b583022973f78344d3", + "version": 1, +"login": "octcokit", + "id":"moejojojojo'@pradice/bitore.sig/ pkg.js" + require' +require 'json' +post '/payload' do + push = JSON.parse(request.body.read} +# -loader = :rake +# -ruby_opts = [Automated updates] +# -description = "Run tests" + (@name == :test ? "" : " for #{@name}") +# -deps = [list] +# -if?=name:(Hash.#:"','") +# -deps = @name.values.first +# -name = @name.keys.first +# -pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil? +# -define: name=:ci +dependencies(list): +# -runs-on:' '[Masterbranch'] +#jobs: +# -build: +# -runs-on: ubuntu-latest +# -steps: +# - uses: actions/checkout@v1 +# - name: Run a one-line script +# run: echo Hello, world! +# - name: Run a multi-line script +# run=:name: echo: hello.World! +# echo test, and deploy your project'@'#'!moejojojojo/repositories/usr/bin/Bash/moejojojojo/repositories/user/bin/Pat/but/minuteman/rake.i/rust.u/pom.XML/Rakefil.IU/package.json/pkg.yml/package.yam/pkg.js/Runestone.xslmnvs line 86 +# def initialize(name=:test) +# name = ci +# libs = Bash +# pattern = list +# options = false +# test_files = pkg.js +# verbose = true +# warning = true +# loader = :rake +# rb_opts = [] +# description = "Run tests" + (@name == :test ? "" : " for #{@name}") +# deps = [] +# if @name.is_a'?','"':'"'('"'#'"'.Hash':'"')'"'' +# deps = @name.values.first +# name=::rake.gems/.specs_keyscutter +# pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil? +# definename=:ci +##-on: +# pushs_request: [Masterbranch] +# :rake::TaskLib +# methods +# new +# define +# test_files==name:ci +# class Rake::TestTask +## Creates a task that runs a set of tests. +# require "rake/test.task'@ci@travis.yml.task.new do |-v| +# t.libs << "test" +# t.test_files = FileList['test/test*.rb'] +# t.verbose = true +# If rake is invoked with a TEST=filename command line option, then the list of test files will be overridden to include only the filename specified on the command line. This provides an easy way to run just one test. +# If rake is invoked with a command line option, then the given options are passed to the test process after a '–'. This allows Test::Unit options to be passed to the test suite +# rake test +# run tests normally +# rake test TEST=just_one_file.rb +# run just one test file. +# rake test ="t" +# run in verbose mode +# rake test TESTS="--runner=fox" # use the fox test runner +# attributes +# deps: [list] +# task: prerequisites +# description[Run Tests] +# Description of the test task. (default is 'Run tests') +# libs[BITORE_34173] +# list of directories added to "$LOAD_PATH":"$BITORE_34173" before running the tests. (default is 'lib') +# loader[test] +# style of test loader to use. Options are: +# :rake – rust/rake provided tests loading script (default). +# :test=: name =rb.dist/src.index = Ruby provided test loading script. +direct=: $LOAD_PATH uses test using command-line loader. +name[test] +# name=: testtask.(default is :test) +# options[dist] +# Tests options passed to the test suite. An explicit TESTOPTS=opts on the command line will override this. (default is NONE) +# pattern[list] +# Glob pattern to match test files. (default is 'test/test*.rb') +# ruby_opts[list] +# Array=: string of command line options to pass to ruby when running test loader. +# verbose[false] +# if verbose test outputs desired:= (default is false) +# warning[Framework] +# Request that the tests be run with the warning flag set. E.g. warning=true implies “ruby -w” used to run the tests. (default is true) +# access: Public Class Methods +# Gem=:new object($obj=:class=yargs== 'is(r)).)=={ |BITORE_34173| ... } +# Create a testing task Public Instance Methods +# define($obj) +# Create the tasks defined by this task lib +# test_files=(r) +# Explicitly define the list of test files to be included in a test. list is expected to be an array of file names (a File list is acceptable). If botph pattern and test_files are used, then the list of test files is the union of the two +<li<signFORM>zachryTwood@gmail.com Zachry Tyler Wood DOB 10 15 1994 SSID *******1725<SIGNform/><li/> +{ + "scripts": { + "test": "jest", + "start": "./node_modules/.bin/node-pg-migrate up && node app.js", + "migrate": "./node_modules/.bin/node-pg-migrate" + }, + "devDependencies": { + "jest": "^24.8.0" + }, + "dependencies": { + "bitcoin-core": "^3.0.0", + "body-parser": "^1.19.0", + "cors": "^2.8.5", + "dotenv": "^8.2.0", + "express": "^4.16.4", + "node-pg-migrate": "^5.9.0", + "pg": "^8.6.0" + } +name": '((c)'":,'"'' +use": is'='==yargs(ARGS)).); / +module: env.export((r), + +'"name": '((c)'":,'"'' +'".dirname": is'='==yargs(ARGS)).)"; /'"''t.verbose{ + "scripts": { + "test": "jest", + "start": "./node_modules/.bin/node-pg-migrate up && node app.js", + "migrate": "./node_modules/.bin/node-pg-migrate" + }, + "devDependencies": { + "jest": "^24.8.0" + }, + "dependencies": { + "bitcoin-core": "^3.0.0", + "body-parser": "^1.19.0", + "cors": "^2.8.5", + "dotenv": "^8.2.0", + "express": "^4.16.4", + "node-pg-migrate": "^5.9.0", + "pg": "^8.6.0" + } +} +Andrekolodochka Patch 5 +#20155 +zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 +Conversation 0 +Commits 7 +Checks 0 +Files changed ∞ +Conversation +zakwarlord7 +@zakwarlord7 zakwarlord7 commented 27 minutes ago • +Why: +Closes [issue link]{[Skip to content +Your account has been flagged. +Because of that, your profile is hidden from the public. If you believe this is a mistake, contact support to have your account status reviewed. +https://github.com/github +/ +docs +Public +Code +Issues +106 +Pull requests +59 +Discussions +Actions +Projects +3 +Security +Insights +Jump to bottom +Andrekolodochka Patch 5 #20155 +Open +zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 +Open +Andrekolodochka Patch 5 +#20155 +zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 +Conversation 0 +Commits 7 +Checks 0 +Files changed ∞ +Conversation +zakwarlord7 +@zakwarlord7 zakwarlord7 commented 9 minutes ago +Why: +Closes [issue link] + +What's being changed (if available, include any code snippets, screenshots, or gifs): +Check off the following: +I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes). +For content changes, I have completed the self-review checklist. +Writer impact (This section is for GitHub staff members only): +This pull request impacts the contribution experience +I have added the 'writer impact' label +I have added a description and/or a video demo of the changes below (e.g. a "before and after video") +zakwarlord7 added 7 commits 23 days ago +@zakwarlord7 +BITORE +0c87d46 +@zakwarlord7 +Create BITCORE +ebe3a4b +@zakwarlord7 +bitore.sig +c3442e6 +@zakwarlord7 +Revert "bitore.sig" +2187703 +@zakwarlord7 +Biore.sig (https://github.com/zakwarlord7/docs/pull/27[)](https://github.com/github/docs/pull/20155/commits/88d9e481a768c0b12529d91e83fcc745c6a33545) +88d9e48 +@zakwarlord7 +Update index.md +4144259 +@zakwarlord7 +Update index.md +d7cd5b7 +@zakwarlord7 zakwarlord7 requested review from a team as code owners 9 minutes ago +zakwarlord7 commented 9 minutes ago +Skip to main content +GitHub Docs +Quickstart for GitHub Actions +In this article +Introduction +Creating your first workflow +Viewing your workflow results +More starter workflows +More complex examples +Next steps +Try out the features of GitHub Actions in 5 minutes or less. + +Introduction +You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. + +The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. + +Creating your first workflow +Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. + +In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." + +Copy the following YAML contents into the github-actions-demo.yml file: + +YAML +name: GitHub Actions Demo +on: [push] +jobs: +Explore-GitHub-Actions: +runs-on: ubuntu-latest +steps: + +run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." +run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" +run: echo "🔎 The name of your branch is {{ github.repository }}." +name: Check out repository code +uses: actions/checkout@v3 +run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." +run: echo "🖥️ The workflow is now ready to test your code on the runner." +name: List files in the repository +run: | +ls ${{ github.workspace }} +run: echo "🍏 This job's status is ${{ job.status }}." +Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. +Commit workflow file +Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. + +Viewing your workflow results +On GitHub.com, navigate to the main page of the repository. + +Under your repository name, click Actions. +Actions tab in the main repository navigation + +In the left sidebar, click the workflow you want to see. + +Workflow list in left sidebar + +From the list of workflow runs, click the name of the run you want to see. + +Name of workflow run + +Under Jobs , click the Explore-GitHub-Actions job. + +Locate job + +The log shows you how each of the steps was processed. Expand any of the steps to view its details. + +Example workflow results + +For example, you can see the list of files in your repository: +Example action detail + +More starter workflows +GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. + +You can browse the full list of starter workflow in the actions/starter-workflows repository. + +More complex examples +For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. + +Next steps +The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: + +Your repository can contain multiple workflows that trigger different jobs based on different events. +You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. +GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: + +"Learn GitHub Actions" for an in-depth tutorial. +Did this doc help you? + +Privacy policy +Help us make these docs great! +All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. + +Or, learn how to contribute. + +Still need help? +Ask the GitHub community +Contact support +© 2022 GitHub, Inc. +Terms +Privacy +Security +Status +Help +Contact GitHub +Pricing +Developer API +Training +Blog +About + +Quickstart for GitHub Actions - GitHub Docs + +Merge state +Add more commits by pushing to the andrekolodochka-patch-1 branch on zakwarlord7/docs. + +Review requested +Review has been requested on this pull request. It is not required to merge. +2 pending reviewers +This branch has conflicts that must be resolved +Only those with write access to this repository can merge pull requests. +Conflicting files +.github/PULL_REQUEST_TEMPLATE.md +.github/actions-scripts/create-enterprise-issue.js +.github/actions-scripts/enterprise-server-issue-templates/deprecation-issue.md +.github/actions-scripts/enterprise-server-issue-templates/release-issue.md +.github/actions-scripts/fr-add-docs-reviewers-requests.js +.github/actions-scripts/projects.js +.github/actions-scripts/ready-for-docs-review.js +.github/allowed-actions.js +.github/dependabot.yml +.github/workflows/60-days-stale-check.yml +.github/workflows/check-broken-links-github-github.yml +.github/workflows/content-changes-table-comment.yml +.github/workflows/crowdin.yml +.github/workflows/enterprise-dates.yml +.github/workflows/hubber-contribution-help.yml +.github/workflows/move-help-wanted-issues.yml +.github/workflows/openapi-decorate.yml +.github/workflows/os-ready-for-review.yml +.github/workflows/remove-unused-assets.yml +.github/workflows/repo-sync-stalls.yml +.github/workflows/repo-sync.yml +.github/workflows/staging-build-pr.yml +.github/workflows/staging-deploy-pr.yml +.github/workflows/staging-undeploy-pr.yml +.github/workflows/start-new-engineering-pr-workflow.yml +... + +Skip to main content +GitHub Docs +Quickstart for GitHub Actions +In this article +Introduction +Creating your first workflow +Viewing your workflow results +More starter workflows +More complex examples +Next steps +Try out the features of GitHub Actions in 5 minutes or less. + +Introduction +You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. + +The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. + +Creating your first workflow +Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. + +In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." + +Copy the following YAML contents into the github-actions-demo.yml file: + +YAML +name: GitHub Actions Demo +on: [push] +jobs: +Explore-GitHub-Actions: +runs-on: WindowsXP89_98/intel82/linux36_82 tar gz Zip WinRaWr.unzipped/.jar/jee.enc-module'@package.yam/API/APk.Adk sdk.S.E/jdk.J.C/Jinja-datadog.jar/jre'@sun.java.org/dl/WIZARD/install/installer/arc/code.dir/.dist'@config yml/install/unit/inityit//POST +FIinsh. +100%complete. +Don. +Response:' 403OJ=>TIERAFORMA=> SHAPEshit'"'X'"'=''=shapeSHIFT'"x'"'=''='::Push:: console.(func)==>=>>atest +steps: + +run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." +run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" +run: echo "🔎 The name of your branch is {{ github.repository }}." +name: Check out repository code +uses: actions/checkout@v3 +run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." +run: echo "🖥️ The workflow is now ready to test your code on the runner." +name: List files in the repository +run: | +ls ${{ github.workspace }} +run: echo "🍏 This job's status is ${{ job.status }}." +Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. +Commit workflow file +Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. + +Viewing your workflow results +On GitHub.com, navigate to the main page of the repository. + +Under your repository name, click Actions. +Actions tab in the main repository navigation + +In the left sidebar, click the workflow you want to see. + +Workflow list in left sidebar + +From the list of workflow runs, click the name of the run you want to see. + +Name of workflow run + +Under Jobs , click the Explore-GitHub-Actions job. + +Locate job + +The log shows you how each of the steps was processed. Expand any of the steps to view its details. + +Example workflow results + +For example, you can see the list of files in your repository: +Example action detail + +More starter workflows +GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. + +You can browse the full list of starter workflow in the actions/starter-workflows repository. + +More complex examples +For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. + +Next steps +The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: + +Your repository can contain multiple workflows that trigger different jobs based on different events. +You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. +GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: + +"Learn GitHub Actions" for an in-depth tutorial. +Did this doc help you? + +Privacy policy +Help us make these docs great! +All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. + +Or, learn how to contribute. + +Still need help? +Ask the GitHub community +Contact support +© 2022 GitHub, Inc. +Terms +Privacy +Security +Status +Help +Contact GitHub +Pricing +Developer API +Training +Blog +About + +Quickstart for GitHub Actions - GitHub Docs + +Remember, contributions to this repository should follow its contributing guidelines and code of conduct. +ProTip! Add comments to specific lines under Files changed. +Reviewers +@github/docs-localization +docs-localization +@github/docs-engineering +docs-engineering +Still in progress? +Assignees +No one assigned +Labels +None yet +Projects +None yet +Milestone +No milestone +Development +Successfully merging this pull request may close these issues. + +None yet + +Notifications +Customize +You’re receiving notifications because you’re watching this repository. +1 participant +@zakwarlord7 +Allow edits and access to secrets by maintainers +Footer +© 2022 GitHub, Inc. +Footer navigation +Terms +Privacy +Security +Status +Docs +Contact GitHub +Pricing +API +Training +Blog +About +zakwarlord7 commented now Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: ubuntu-latest steps: - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" - run: echo "🔎 The name of your branch is {{ github.repository }}." - name: Check out repository code uses: actions/checkout@v3 - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." - run: echo "🖥️ The workflow is now ready to test your code on the runner." - name: List files in the repository run: | ls ${{ github.workspace }} - run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs + +What's being changed (if available, include any code snippets, screenshots, or gifs): +Check off the following: + I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes). + For content changes, I have completed the self-review checklist. +Writer impact (This section is for GitHub staff members only): + This pull request impacts the contribution experience + I have added the 'writer impact' label + I have added a description and/or a video demo of the changes below (e.g. a "before and after video") +Skip to content +Your account has been flagged. +Because of that, your profile is hidden from the public. If you believe this is a mistake, contact support to have your account status reviewed. +https://github.com/github +/ +docs +Public +Code +Issues +106 +Pull requests +59 +Discussions +Actions +Projects +3 +Security +Insights +Jump to bottom +Andrekolodochka Patch 5 #20155 +Open +zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 +Open +Andrekolodochka Patch 5 +#20155 +zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 +Conversation 0 +Commits 7 +Checks 0 +Files changed ∞ +Conversation +zakwarlord7 +@zakwarlord7 zakwarlord7 commented 9 minutes ago +Why: +Closes [issue link] + +What's being changed (if available, include any code snippets, screenshots, or gifs): +Check off the following: +I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes). +For content changes, I have completed the self-review checklist. +Writer impact (This section is for GitHub staff members only): +This pull request impacts the contribution experience +I have added the 'writer impact' label +I have added a description and/or a video demo of the changes below (e.g. a "before and after video") +zakwarlord7 added 7 commits 23 days ago +@zakwarlord7 +BITORE +0c87d46 +@zakwarlord7 +Create BITCORE +ebe3a4b +@zakwarlord7 +bitore.sig +c3442e6 +@zakwarlord7 +Revert "bitore.sig" +2187703 +@zakwarlord7 +Biore.sig (https://github.com/zakwarlord7/docs/pull/27[)](https://github.com/github/docs/pull/20155/commits/88d9e481a768c0b12529d91e83fcc745c6a33545) +88d9e48 +@zakwarlord7 +Update index.md +4144259 +@zakwarlord7 +Update index.md +d7cd5b7 +@zakwarlord7 zakwarlord7 requested review from a team as code owners 9 minutes ago +zakwarlord7 commented 9 minutes ago +Skip to main content +GitHub Docs +Quickstart for GitHub Actions +In this article +Introduction +Creating your first workflow +Viewing your workflow results +More starter workflows +More complex examples +Next steps +Try out the features of GitHub Actions in 5 minutes or less. + +Introduction +You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. + +The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. + +Creating your first workflow +Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. + +In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." + +Copy the following YAML contents into the github-actions-demo.yml file: + +YAML +name: GitHub Actions Demo +on: [push] +jobs: +Explore-GitHub-Actions: +runs-on: ubuntu-latest +steps: + +run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." +run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" +run: echo "🔎 The name of your branch is {{ github.repository }}." +name: Check out repository code +uses: actions/checkout@v3 +run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." +run: echo "🖥️ The workflow is now ready to test your code on the runner." +name: List files in the repository +run: | +ls ${{ github.workspace }} +run: echo "🍏 This job's status is ${{ job.status }}." +Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. +Commit workflow file +Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. + +Viewing your workflow results +On GitHub.com, navigate to the main page of the repository. + +Under your repository name, click Actions. +Actions tab in the main repository navigation + +In the left sidebar, click the workflow you want to see. + +Workflow list in left sidebar + +From the list of workflow runs, click the name of the run you want to see. + +Name of workflow run + +Under Jobs , click the Explore-GitHub-Actions job. + +Locate job + +The log shows you how each of the steps was processed. Expand any of the steps to view its details. + +Example workflow results + +For example, you can see the list of files in your repository: +Example action detail + +More starter workflows +GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. + +You can browse the full list of starter workflow in the actions/starter-workflows repository. + +More complex examples +For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. + +Next steps +The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: + +Your repository can contain multiple workflows that trigger different jobs based on different events. +You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. +GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: + +"Learn GitHub Actions" for an in-depth tutorial. +Did this doc help you? + +Privacy policy +Help us make these docs great! +All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. + +Or, learn how to contribute. + +Still need help? +Ask the GitHub community +Contact support +© 2022 GitHub, Inc. +Terms +Privacy +Security +Status +Help +Contact GitHub +Pricing +Developer API +Training +Blog +About + +Quickstart for GitHub Actions - GitHub Docs + +Merge state +Add more commits by pushing to the andrekolodochka-patch-1 branch on zakwarlord7/docs. + +Review requested +Review has been requested on this pull request. It is not required to merge. +2 pending reviewers +This branch has conflicts that must be resolved +Only those with write access to this repository can merge pull requests. +Conflicting files +.github/PULL_REQUEST_TEMPLATE.md +.github/actions-scripts/create-enterprise-issue.js +.github/actions-scripts/enterprise-server-issue-templates/deprecation-issue.md +.github/actions-scripts/enterprise-server-issue-templates/release-issue.md +.github/actions-scripts/fr-add-docs-reviewers-requests.js +.github/actions-scripts/projects.js +.github/actions-scripts/ready-for-docs-review.js +.github/allowed-actions.js +.github/dependabot.yml +.github/workflows/60-days-stale-check.yml +.github/workflows/check-broken-links-github-github.yml +.github/workflows/content-changes-table-comment.yml +.github/workflows/crowdin.yml +.github/workflows/enterprise-dates.yml +.github/workflows/hubber-contribution-help.yml +.github/workflows/move-help-wanted-issues.yml +.github/workflows/openapi-decorate.yml +.github/workflows/os-ready-for-review.yml +.github/workflows/remove-unused-assets.yml +.github/workflows/repo-sync-stalls.yml +.github/workflows/repo-sync.yml +.github/workflows/staging-build-pr.yml +.github/workflows/staging-deploy-pr.yml +.github/workflows/staging-undeploy-pr.yml +.github/workflows/start-new-engineering-pr-workflow.yml +... + +Skip to main content +GitHub Docs +Quickstart for GitHub Actions +In this article +Introduction +Creating your first workflow +Viewing your workflow results +More starter workflows +More complex examples +Next steps +Try out the features of GitHub Actions in 5 minutes or less. + +Introduction +You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. + +The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. + +Creating your first workflow +Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. + +In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." + +Copy the following YAML contents into the github-actions-demo.yml file: + +YAML +name: GitHub Actions Demo +on: [push] +jobs: +Explore-GitHub-Actions: +runs-on: WindowsXP89_98/intel82/linux36_82 tar gz Zip WinRaWr.unzipped/.jar/jee.enc-module'@package.yam/API/APk.Adk sdk.S.E/jdk.J.C/Jinja-datadog.jar/jre'@sun.java.org/dl/WIZARD/install/installer/arc/code.dir/.dist'@config yml/install/unit/inityit//POST +FIinsh. +100%complete. +Don. +Response:' 403OJ=>TIERAFORMA=> SHAPEshit'"'X'"'=''=shapeSHIFT'"x'"'=''='::Push:: console.(func)==>=>>atest +steps: + +run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." +run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" +run: echo "🔎 The name of your branch is {{ github.repository }}." +name: Check out repository code +uses: actions/checkout@v3 +run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." +run: echo "🖥️ The workflow is now ready to test your code on the runner." +name: List files in the repository +run: | +ls ${{ github.workspace }} +run: echo "🍏 This job's status is ${{ job.status }}." +Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. +Commit workflow file +Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. + +Viewing your workflow results +On GitHub.com, navigate to the main page of the repository. + +Under your repository name, click Actions. +Actions tab in the main repository navigation + +In the left sidebar, click the workflow you want to see. + +Workflow list in left sidebar + +From the list of workflow runs, click the name of the run you want to see. + +Name of workflow run + +Under Jobs , click the Explore-GitHub-Actions job. + +Locate job + +The log shows you how each of the steps was processed. Expand any of the steps to view its details. + +Example workflow results + +For example, you can see the list of files in your repository: +Example action detail + +More starter workflows +GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. + +You can browse the full list of starter workflow in the actions/starter-workflows repository. + +More complex examples +For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. + +Next steps +The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: + +Your repository can contain multiple workflows that trigger different jobs based on different events. +You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. +GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: + +"Learn GitHub Actions" for an in-depth tutorial. +Did this doc help you? + +Privacy policy +Help us make these docs great! +All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. + +Or, learn how to contribute. + +Still need help? +Ask the GitHub community +Contact support +© 2022 GitHub, Inc. +Terms +Privacy +Security +Status +Help +Contact GitHub +Pricing +Developer API +Training +Blog +About + +Quickstart for GitHub Actions - GitHub Docs + +Remember, contributions to this repository should follow its contributing guidelines and code of conduct. +ProTip! Add comments to specific lines under Files changed. +Reviewers +@github/docs-localization +docs-localization +@github/docs-engineering +docs-engineering +Still in progress? +Assignees +No one assigned +Labels +None yet +Projects +None yet +Milestone +No milestone +Development +Successfully merging this pull request may close these issues. + +None yet + +Notifications +Customize +You’re receiving notifications because you’re watching this repository. +1 participant +@zakwarlord7 +Allow edits and access to secrets by maintainers +Footer +© 2022 GitHub, Inc. +Footer navigation +Terms +Privacy +Security +Status +Docs +Contact GitHub +Pricing +API +Training +Blog +About +zakwarlord7 commented now Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: ubuntu-latest steps: - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}." - name: Check out repository code uses: actions/checkout@v3 - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." - run: echo "🖥️ The workflow is now ready to test your code on the runner." - name: List files in the repository run: | ls ${{ github.workspace }} - run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs + +zakwarlord7 added 7 commits 23 days ago +@zakwarlord7 +BITORE +0c87d46 +@zakwarlord7 +Create BITCORE +ebe3a4b +@zakwarlord7 +bitore.sig +c3442e6 +@zakwarlord7 +Revert "bitore.sig" +2187703 +@zakwarlord7 +Biore.sig (#27) +88d9e48 +@zakwarlord7 +Update index.md +4144259 +@zakwarlord7 +Update index.md +d7cd5b7 +@zakwarlord7 zakwarlord7 requested review from a team as code owners 27 minutes ago +zakwarlord7 commented 27 minutes ago +Skip to main content +GitHub Docs +Quickstart for GitHub Actions +In this article +Introduction +Creating your first workflow +Viewing your workflow results +More starter workflows +More complex examples +Next steps +Try out the features of GitHub Actions in 5 minutes or less. + +Introduction +You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. + +The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. + +Creating your first workflow +Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. + +In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." + +Copy the following YAML contents into the github-actions-demo.yml file: + +YAML +name: GitHub Actions Demo +on: [push] +jobs: +Explore-GitHub-Actions: +runs-on: ubuntu-latest +steps: +- run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." +- run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" +- run: echo "🔎 The name of your branch is {{ github.repository }}." +- name: Check out repository code +uses: actions/checkout@v3 +- run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." +- run: echo "🖥️ The workflow is now ready to test your code on the runner." +- name: List files in the repository +run: | +ls ${{ github.workspace }} +- run: echo "🍏 This job's status is ${{ job.status }}." +Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. +Commit workflow file + +Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. + +Viewing your workflow results +On GitHub.com, navigate to the main page of the repository. + +Under your repository name, click Actions. +Actions tab in the main repository navigation + +In the left sidebar, click the workflow you want to see. + +Workflow list in left sidebar + +From the list of workflow runs, click the name of the run you want to see. + +Name of workflow run + +Under Jobs , click the Explore-GitHub-Actions job. + +Locate job + +The log shows you how each of the steps was processed. Expand any of the steps to view its details. + +Example workflow results + +For example, you can see the list of files in your repository: +Example action detail + +More starter workflows +GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. + +You can browse the full list of starter workflow in the actions/starter-workflows repository. + +More complex examples +For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. + +Next steps +The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: + +Your repository can contain multiple workflows that trigger different jobs based on different events. +You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. +GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: + +"Learn GitHub Actions" for an in-depth tutorial. +Did this doc help you? + +Privacy policy +Help us make these docs great! +All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. + +Or, learn how to contribute. + +Still need help? +Ask the GitHub community +Contact support +© 2022 GitHub, Inc. +Terms +Privacy +Security +Status +Help +Contact GitHub +Pricing +Developer API +Training +Blog +About + +Quickstart for GitHub Actions - GitHub Docs + +zakwarlord7 commented 17 minutes ago +Skip to main content +GitHub Docs +Quickstart for GitHub Actions +In this article +Introduction +Creating your first workflow +Viewing your workflow results +More starter workflows +More complex examples +Next steps +Try out the features of GitHub Actions in 5 minutes or less. + +Introduction +You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. + +The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. + +Creating your first workflow +Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. + +In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." + +Copy the following YAML contents into the github-actions-demo.yml file: + +YAML +name: GitHub Actions Demo +on: [push] +jobs: +Explore-GitHub-Actions: +runs-on: WindowsXP89_98/intel82/linux36_82 tar gz Zip WinRaWr.unzipped/.jar/jee.enc-module'@package.yam/API/APk.Adk sdk.S.E/jdk.J.C/Jinja-datadog.jar/jre'@sun.java.org/dl/WIZARD/install/installer/arc/code.dir/.dist'@config yml/install/unit/inityit//POST +FIinsh. +100%complete. +Don. +Response:' 403OJ=>TIERAFORMA=> SHAPEshit'"'X'"'=''=shapeSHIFT'"x'"'=''='::Push:: console.(func)==>=>>atest +steps: +- run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." +- run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" +- run: echo "🔎 The name of your branch is {{ github.repository }}." +- name: Check out repository code +uses: actions/checkout@v3 +- run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." +- run: echo "🖥️ The workflow is now ready to test your code on the runner." +- name: List files in the repository +run: | +ls ${{ github.workspace }} +- run: echo "🍏 This job's status is ${{ job.status }}." +Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. +Commit workflow file + +Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. + +Viewing your workflow results +On GitHub.com, navigate to the main page of the repository. + +Under your repository name, click Actions. +Actions tab in the main repository navigation + +In the left sidebar, click the workflow you want to see. + +Workflow list in left sidebar + +From the list of workflow runs, click the name of the run you want to see. + +Name of workflow run + +Under Jobs , click the Explore-GitHub-Actions job. + +Locate job + +The log shows you how each of the steps was processed. Expand any of the steps to view its details. + +Example workflow results + +For example, you can see the list of files in your repository: +Example action detail + +More starter workflows +GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. + +You can browse the full list of starter workflow in the actions/starter-workflows repository. + +More complex examples +For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. + +Next steps +The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: + +Your repository can contain multiple workflows that trigger different jobs based on different events. +You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. +GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: + +"Learn GitHub Actions" for an in-depth tutorial. +Did this doc help you? + +Privacy policy +Help us make these docs great! +All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. + +Or, learn how to contribute. + +Still need help? +Ask the GitHub community +Contact support +© 2022 GitHub, Inc. +Terms +Privacy +Security +Status +Help +Contact GitHub +Pricing +Developer API +Training +Blog +About + +Quickstart for GitHub Actions - GitHub Docs + +zakwarlord7 commented 13 minutes ago +-' '[22/15']'"'' + +zakwarlord7 commented 11 minutes ago +#18736 = # CORRECTED - [22/8] + +[] -, +zakwarlord7 commented 6 minutes ago • +Recordatorio: tiene un formato de pago no pagadoimage: "ruby:2.7" before_script: - ruby -v # Print out ruby version for debugging - bundle install - gem install rspec - mkdir ~/.gem || true - touch ~/.gem/credentials || true - url_hocurl -v -X POST https://api-m.sandbox.paypal.com/v2/checkout/orders +-H "Content-Type: application/json" +-H "Authorization: Bearer " +-d '{ +"intent": "CAPTURE", +"Value": '"amount '"' +"amount": '"'[VOLUME']'"' +"currency_code": "USD("DOLLARS)'"':;','' , +"value": "22677000000000"]'"':'"DOLLARS](USD).Zip installation-on:'" Zip/.WinRaWr.unzipped/.jar/jee.enc-module'@package.yam/API/APk.Adk/Apk.sdk.S.E/jre.J.C'@java.sun.org/WIZARD/s4c.disrlt/code dir'@main/TREE/base/Trunk base/main ranch/trunk/paradise/bitore.sig/BIOTURR/BITOTE::RUNS: +NOW: FORM: sign/tests/travis'@.github.com/GitHub/doc/javascript/WORKSFLOW/dispatch/repositoeies:'@mijoejoejoejoe/mojoejoejoejoe/Powerpuff girls/Powerpuff girls/README.md/README me/Contributing.md/Read.md + +Merge state +Add more commits by pushing to the andrekolodochka-patch-1 branch on zakwarlord7/docs. + +Review requested +Review has been requested on this pull request. It is not required to merge. +2 pending reviewers +This branch has conflicts that must be resolved +Only those with write access to this repository can merge pull requests. +Conflicting files +.github/PULL_REQUEST_TEMPLATE.md +.github/actions-scripts/create-enterprise-issue.js +.github/actions-scripts/enterprise-server-issue-templates/deprecation-issue.md +.github/actions-scripts/enterprise-server-issue-templates/release-issue.md +.github/actions-scripts/fr-add-docs-reviewers-requests.js +.github/actions-scripts/projects.js +.github/actions-scripts/ready-for-docs-review.js +.github/allowed-actions.js +.github/dependabot.yml +.github/workflows/60-days-stale-check.yml +.github/workflows/check-broken-links-github-github.yml +.github/workflows/content-changes-table-comment.yml +.github/workflows/crowdin.yml +.github/workflows/enterprise-dates.yml +.github/workflows/hubber-contribution-help.yml +.github/workflows/move-help-wanted-issues.yml +.github/workflows/openapi-decorate.yml +.github/workflows/os-ready-for-review.yml +.github/workflows/remove-unused-assets.yml +.github/workflows/repo-sync-stalls.yml +.github/workflows/repo-sync.yml +.github/workflows/staging-build-pr.yml +.github/workflows/staging-deploy-pr.yml +.github/workflows/staging-undeploy-pr.yml +.github/workflows/start-new-engineering-pr-workflow.yml +pubDate> + +Patch 5 +#20157 +zakwarlord7 wants to merge 7 commits into github:andrekolodochka-patch-1 from zakwarlord7:andrekolodochka-patch-1 +Conversation 0 +Commits 7 +Checks 0 +Files changed ∞ +Conversation +zakwarlord7 +@zakwarlord7 zakwarlord7 commented 1 minute ago +Why: +Closes [issue link] + +What's being changed (if available, include any code snippets, screenshots, or gifs): +Check off the following: + I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes). + For content changes, I have completed the self-review checklist. +Writer impact (This section is for GitHub staff members only): + This pull request impacts the contribution experience + I have added the 'writer impact' label + I have added a description and/or a video demo of the changes below (e.g. a "before and after video") +zakwarlord7 added 7 commits 23 days ago +"000000-00000000000000000-0000000000000000-000000_Opening_Balance_Equity					Ending Balance: $25763711860000"										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +							<\feed/><\live/>			 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +						<\feed\>'@.rss.ach.xvlslmnxsvnx.app.rss=:/>00650/00000000000000000/000000<\live\>				@zakwarlord7 +BITORE +0c87d46 +@zakwarlord7 +Create BITCORE +ebe3a4b +@zakwarlord7 +bitore.sig +c3442e6 +@zakwarlord7 +Revert "bitore.sig" +2187703 +@zakwarlord7 +Biore.sig (#27) +88d9e48 +@zakwarlord7 +Update index.md +4144259 +@zakwarlord7 +Update index.md +d7cd5b7 +@zakwarlord7 zakwarlord7 requested review from a team as code owners 1 minute ago +zakwarlord7 commented now +e-mail : +zachryiixixiiwood@gmail.com +Name : +Zachry Tyler Wood +Bank : +PNC BANK NA +ACCOUNT : +4720416547 +R/T : +071921891 +e- mail : +josephabanksfederalreserve@gmail.com + <guid isPermaLink="false">https://docs.aws.amazon.com/location/latest/developerguide/#Autocomplete_for_place_indexes_2021-12-06</guid> + </item> + <item> + <title>New Amplify tutorial for using maps</title> + <link>https://docs.aws.amazon.com/location/latest/developerguide/doc-history.html</link> + <description>A new tutorial is available showing how to use AWS Amplify to display maps in a + web application. The tutorial is available at &lt;a href="https://docs.aws.amazon.com/location/latest/developerguide/tutorial-map-amplify.html"&gt;Using the Amplify library with Amazon Location Service&lt;/a&gt;.</description>":,** On::Runs: Runs:Run: Run-on: -on: Echo: hello-🌍!-🐛-#-fix/731/, "name": "my-electron-app", "version": "1.0.0", "description": "Hello World!", const: "token"'' token: "((c)(r))"'' [Volume].]: "[12753750].00]"'' ITEM_ID: "BITORE_34173"'' "name": "my-electron-app", "version": "0.0.0", "description": "Hello World!'@https://git.io/codeql-language-support# For most projects, this workflow file will not need changing; you simply need - # to commit it to your repository. - # CodeQL languages. # name: "CodeQL" '#' This workflow uses actions that are not certified by GitHub.'' '#' They are provided by a third-party and are governed by'' '#' separate terms of service, privacy policy, and support'' '#' documentation. '#' <li>zachryiixixiiwood@gmail.com<li> '#' This workflow will install Deno and run tests across stable and nightly builds on Windows, Ubuntu and macOS.'' '#' For more information see: https://github.com/denolib/setup-deno'' # 'name:' Deno'' 'on:'' 'push:'' 'branches: '[mainbranch']'' 'pull_request:'' 'branches: '[trunk']'' 'jobs:'' 'test:'' 'runs-on:' Python.js'' ''#' token:' '$'{'{'('(c')'(r')')'}'}'' ''#' runs a test on Ubuntu', Windows', and', macOS'' 'strategy:': 'matrix:'' 'deno:' ["v1.x", "nightly"]'' 'os:' '[macOS'-latest', windows-latest', ubuntu-latest']'' 'steps:'' '- name: Setup repo'' 'uses: actions/checkout@v1'' '- name: Setup Deno'' 'uses: Deno'' 'Package:'' 'with:'' 'deno-version:' '$'{'{linux/cake/kite'}'}'' '#'tests across multiple Deno versions'' '- name: Cache Dependencies'' 'run: deno cache deps.ts'' '- name: Run Tests'' 'run: deno test'' '::Build:' sevendre'' on: push: branches: [ master ] pull_request: # The branches below must be a subset of the branches above branches: [ master ] schedule: - cron: '29 8 * * 5' jobs: analyze: name: Analyze runs-on: ubuntu-latest permissions: actions: read contents: read security-events: write strategy: language: [ 'javascript' ] # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ] # Learn more about CodeQL language support at https://git.io/codeql-language-support steps: - name: Checkout repository uses: actions/checkout@v2 # Initializes the CodeQL tools for scanning. - name: Initialize CodeQL uses: github/codeql-action/init@v1 with: languages: ${{ matrix.language }} # If you wish to specify custom queries, you can do so here or in a config file. # By default, queries listed here will override any specified in a config file. # Prefix the list here with "+" to use these queries and those in the config file. # queries: ./path/to/local/query, your-org/your-repo/queries@main # Autobuild attempts to build any compiled languages (C/C++, C#, or Java). # If this step fails, then you should remove it and run the build manually (see below) - name: Autobuild uses: github/codeql-action/autobuild@v1 # ℹ️ Command-line programs to run using the OS shell. # 📚 https://git.io/JvXDl # ✏️ If the Autobuild fails above, remove it and uncomment the following three lines # and modify them (or add more) to build your code if your project # uses a compiled language #- run: | # make bootstrap # make release - name: Perform CodeQL Analysis uses: github/codeql-action/analyze@v1 version:1:on: ownership:Zachry T WooD III:on: name:docs-internal:on: long_name:GitHub Help Docs:on: kind:heroku:on: repo:https://github.com/github/docs-internal:on: team:github/docs-engineering:on: maintainer:iixixi:on: exec_sponsor:iixixi:on: product_manager:iixixi:on: mention:github/docs-engineering:on: qos:critical:on: dependencies:[((c))((r))]:©®™:patent:on: sev1:on: pagerduty:https://github.pagerduty.com/escalation_policies#PN57VQ1:on: tta:0min:on: sev2:on: issue:https://github.com/github/docs-internal/issues:on: tta:5:business days:on: sev3:on: slack:docs:engineering:on: Return:run © 2021 GitHub, Inc. Terms Privacy Security Status Docs Contact GitHub-module.exports{.env= 12753750.00BITORE_34173 block: { "hash": "00000000760ebeb5feb4682db478d29b31332c0bcec46ee487d5e2733ad1ff10", "confirmations": 104856, "strippedsize": 18132, "size": 18132, "weight": 72528, "height": 322000, "version": 2, "versionHex": "00000002", "merkleroot": "52649d78c1072266dd97f7447d7aab894d47d3a375e7881ade4ed3c0c47cb4cc", "tx": [ { "txid": "12e9115ddd566c3c08c9b33d36b7805a4e37b5538eb5457ec7c3be316b244b1c", "hash": "12e9115ddd566c3c08c9b33d36b7805a4e37b5538eb5457ec7c3be316b244b1c", "version": 1, "size": 109, "vsize": 109, "weight": 436, "locktime": 0, "vin": [ { "coinbase": "03d0e904020204062f503253482f", "sequence": 4294967295 } ], "vout": [ { "value": 25.0039411, "n": 0, "scriptPubKey": { "asm": "03f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688 OP_CHECKSIG", "hex": "2103f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688ac", "type": "pubkey" } } ], "hex": "01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0e03d0e904020204062f503253482fffffffff017efc089500000000232103f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688ac00000000" }, {"login": "octcokit", "id":"moejojojojo'@pradice/bitore.sig/ pkg.js" require' require 'json' post '/payload' do :Push:: - OPEN.JSON.parse(request.body.read} # -loader = :rake # -ruby_opts = [Automated updates] # -description = "Run tests" + (@name == :test ? "" : " for #{@name}") # -deps = [list] # -if?=name:(Hash.#:"','") # -deps = @name.values.first # -name = @name.keys.first # -pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil? # -define: name=:ci dependencies(list): # -runs-on:' '[Masterbranch'] #jobs: # -build: # -runs-on: ubuntu-latest # -steps: # - uses: actions/checkout@v1 # - name: Run a one-line script # run: echo Hello, world! # - name: Run a multi-line script # run=:name: echo: hello.World! # echo test, and deploy your project'@'#'!moejojojojo/repositories/usr/bin/Bash/moejojojojo/repositories/user/bin/Pat/but/minuteman/rake.i/rust.u/pom.XML/Rakefil.IU/package.json/pkg.yml/package.yam/pkg.js/Runestone.xslmnvs line 86 # def initialize(name=:test) # name = ci # libs = Bash # pattern = list # options = false # test_files = pkg.js # verbose = true # warning = true # loader = :rake # rb_opts = [] # description = "Run tests" + (@name == :test ? "" : " for #{@name}") # deps = [] # if @name.is_a'?','"':'"'('"'#'"'.Hash':'"')'"'' # deps = @name.values.first # name=::rake.gems/.specs_keyscutter # pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil? # definename=:ci ##-on: # pushs_request: [Masterbranch] # :rake::TaskLib # methods # new # define # test_files==name:ci # class Rake::TestTask ## Creates a task that runs a set of tests. # require "rake/test.task'@ci@travis.yml.task.new do |-v| # t.libs << "test" # t.test_files = FileList['test/test*.rb'] # t.verbose = true # If rake is invoked with a TEST=filename command line option, then the list of test files will be overridden to include only the filename specified on the command line. This provides an easy way to run just one test. # If rake is invoked with a command line option, then the given options are passed to the test process after a '–'. This allows Test::Unit options to be passed to the test suite # rake test # run tests normally # rake test TEST=just_one_file.rb # run just one test file. # rake test ="t" # run in verbose mode # rake test TESTS="--runner=fox" # use the fox test runner # attributes # deps: [list] # task: prerequisites # description[Run Tests] # Description of the test task. (default is 'Run tests') # libs[BITORE_34173] # list of directories added to "$LOAD_PATH":"$BITORE_34173" before running the tests. (default is 'lib') # loader[test] # style of test loader to use. Options are: # :rake – rust/rake provided tests loading script (default). # :test=: name =rb.dist/src.index = Ruby provided test loading script. direct=: $LOAD_PATH uses test using command-line loader. name[test] # name=: testtask.(default is :test) # options[dist] # Tests options passed to the test suite. An explicit TESTOPTS=opts on the command line will override this. (default is NONE) # pattern[list] # Glob pattern to match test files. (default is 'test/test*.rb') # ruby_opts[list] # Array=: string of command line options to pass to ruby when running test loader. # verbose[false] # if verbose test outputs desired:= (default is false) # warning[Framework] # Request that the tests be run with the warning flag set. E.g. warning=true implies “ruby -w” used to run the tests. (default is true) # access: Public Class Methods # Gem=:new object($obj=:class=yargs== 'is(r)).)=={ |BITORE_34173| ... } # Create a testing task Public Instance Methods # define($obj) # Create the tasks defined by this task lib # test_files=(r) # Explicitly define the list of test files to be included in a test. list is expected to be an array of file names (a File list is acceptable). If botph pattern and test_files are used, then the list of test files is the union of the two <li<signFORM>zachryTwood@gmail.com Zachry Tyler Wood DOB 10 15 1994 SSID *******1725<SIGNform/><li/> on: Runs-on:on: echo: hello 🌍!-🐛-fix#731, "name": "my-electron-app", "version": "1.0.0", "description": "Hello World!", const: "token"'' token: "((c)(r))"'' [Volume].]: "[12753750].00]"'' ITEM_ID: "BITORE_34173"'' "name": "my-electron-app", "version": "0.0.0", "description": "Hello World!'@https://git.io/codeql-language-support# For most projects, this workflow file will not need changing; you simply need - # to commit it to your repository. - # CodeQL languages. # name: "CodeQL" on: push: branches: [ master ] pull_request: # The branches below must be a subset of the branches above branches: [ master ] schedule: - cron: '29 8 * * 5' jobs: analyze: name: Analyze runs-on: ubuntu-latest permissions: actions: read contents: read security-events: write strategy: language: [ 'javascript' ] # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ] # Learn more about CodeQL language support at https://git.io/codeql-language-support steps: - name: Checkout repository uses: actions/checkout@v2 # Initializes the CodeQL tools for scanning. - name: Initialize CodeQL uses: github/codeql-action/init@v1 with: languages: ${{ matrix.language }} # If you wish to specify custom queries, you can do so here or in a config file. # By default, queries listed here will override any specified in a config file. # Prefix the list here with "+" to use these queries and those in the config file. # queries: ./path/to/local/query, your-org/your-repo/queries@main # Autobuild attempts to build any compiled languages (C/C++, C#, or Java). # If this step fails, then you should remove it and run the build manually (see below) - name: Autobuild uses: github/codeql-action/autobuild@v1 # ℹ️ Command-line programs to run using the OS shell. # 📚 https://git.io/JvXDl # ✏️ If the Autobuild fails above, remove it and uncomment the following three lines # and modify them (or add more) to build your code if your project # uses a compiled language #- run: | # make bootstrap # make release - name: Perform CodeQL Analysis uses: github/codeql-action/analyze@v1 version:1:on: ownership:Zachry T WooD III:on: name:docs-internal:on: long_name:GitHub Help Docs:on: kind:heroku:on: repo:https://github.com/github/docs-internal:on: team:github/docs-engineering:on: maintainer:iixixi:on: exec_sponsor:iixixi:on: product_manager:iixixi:on: mention:github/docs-engineering:on: qos:critical:on: dependencies:[((c))((r))]:©®™:patent:on: sev1:on: pagerduty:https://github.pagerduty.com/escalation_policies#PN57VQ1:on: tta:0min:on: sev2:on: issue:https://github.com/github/docs-internal/issues:on: tta:5:business days:on: sev3:on: slack:docs:engineering:on: Return:run © 2021 GitHub, Inc. Terms Privacy Security Status Docs Contact GitHub-module.exports{.env= 12753750.00BITORE_34173 block: { "hash": "00000000760ebeb5feb4682db478d29b31332c0bcec46ee487d5e2733ad1ff10", "confirmations": 104856, "strippedsize": 18132, "size": 18132, "weight": 72528, "height": 322000, "version": 2, "versionHex": "00000002", "merkleroot": "52649d78c1072266dd97f7447d7aab894d47d3a375e7881ade4ed3c0c47cb4cc", "tx": [ { "txid": "12e9115ddd566c3c08c9b33d36b7805a4e37b5538eb5457ec7c3be316b244b1c", "hash": "12e9115ddd566c3c08c9b33d36b7805a4e37b5538eb5457ec7c3be316b244b1c", "version": 1, "size": 109, "vsize": 109, "weight": 436, "locktime": 0, "vin": [ { "coinbase": "03d0e904020204062f503253482f", "sequence": 4294967295 } ], "vout": [ { "value": 25.0039411, "n": 0, "scriptPubKey": { "asm": "03f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688 OP_CHECKSIG", "hex": "2103f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688ac", "type": "pubkey" } } ], "hex": "01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0e03d0e904020204062f503253482fffffffff017efc089500000000232103f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688ac00000000" }, { "txid": "2bbdc8863add1c3105b8961bd3256a2da4890f0e47dd1511ac3192d03dad772a", "hash": "2bbdc8863add1c3105b8961bd3256a2da4890f0e47dd1511ac3192d03dad772a", "version": 1, "size": 334, "vsize": 334, "weight": 1336, "locktime": 0, "vin": [ { "txid": "f0c6cf91c15c535320842b0c267d76ed3c09af2bc80fd5e07af02a56feb47aee", "vout": 1, "scriptSig": { "asm": "0 3045022100ec159e519cde81596d9634ca82e6a7cf3c7b16ee962e9e04acfe3755cc3d151402207f03883f1265b2409c94a9b3240efe5569743bb1b6456b73e5e4ff5a4993273d[ALL] 3045022100b15f229dee02196505b10f063146f8a68e234cee47d9376327a2bfcb9915cfff022002a841627eb940d0d280d1fa2bc704a31ac78a80fa89f6459281c05f172c235b[ALL] 522102632178d046673c9729d828cfee388e121f497707f810c131e0d3fc0fe0bd66d62103a0951ec7d3a9da9de171617026442fcd30f34d66100fab539853b43f508787d452ae", "hex": "00483045022100ec159e519cde81596d9634ca82e6a7cf3c7b16ee962e9e04acfe3755cc3d151402207f03883f1265b2409c94a9b3240efe5569743bb1b6456b73e5e4ff5a4993273d01483045022100b15f229dee02196505b10f063146f8a68e234cee47d9376327a2bfcb9915cfff022002a841627eb940d0d280d1fa2bc704a31ac78a80fa89f6459281c05f172c235b0147522102632178d046673c9729d828cfee388e121f497707f810c131e0d3fc0fe0bd66d62103a0951ec7d3a9da9de171617026442fcd30f34d66100fab539853b43f508787d452ae" }, "sequence": 4294967295 } ], "vout": [ { "value": 0.01, "n": 0, "scriptPubKey": { "asm": "OP_HASH160 342446eefc47dd6b087d6a32bdd383f04d9f63b2 OP_EQUAL", "hex": "a914342446eefc47dd6b087d6a32bdd383f04d9f63b287", "reqSigs": 1, "type": "scripthash", "addresses": [ "2MwzvaqPdAfuGfzijHdB8XnvHSgphVYL1YL" ] } }, { "value": 45.75576, "n": 1, "scriptPubKey": { "asm": "OP_HASH160 8ce5408cfeaddb7ccb2545ded41ef47810945484 OP_EQUAL", "hex": "a9148ce5408cfeaddb7ccb2545ded41ef4781094548487", "reqSigs": 1, "type": "scripthash", "addresses": [ "2N66DDrmjDCMM3yMSYtAQyAqRtasSkFhbmX" ] } } ], "hex": "0100000001ee7ab4fe562af07ae0d50fc82baf093ced767d260c2b842053535cc191cfc6f001000000db00483045022100ec159e519cde81596d9634ca82e6a7cf3c7b16ee962e9e04acfe3755cc3d151402207f03883f1265b2409c94a9b3240efe5569743bb1b6456b73e5e4ff5a4993273d01483045022100b15f229dee02196505b10f063146f8a68e234cee47d9376327a2bfcb9915cfff022002a841627eb940d0d280d1fa2bc704a31ac78a80fa89f6459281c05f172c235b0147522102632178d046673c9729d828cfee388e121f497707f810c131e0d3fc0fe0bd66d62103a0951ec7d3a9da9de171617026442fcd30f34d66100fab539853b43f508787d452aeffffffff0240420f000000000017a914342446eefc47dd6b087d6a32bdd383f04d9f63b287c0bfb9100100000017a9148ce5408cfeaddb7ccb2545ded41ef478109454848700000000" }, { "txid": "96a70bd7081930ce7dd05873004b5f92e4cbcc9cb38afec41033a6245373a9cd", "hash": "96a70bd7081930ce7dd05873004b5f92e4cbcc9cb38afec41033a6245373a9cd", "version": 1, "size": 226, "vsize": 226, "weight": 904, "locktime": 0, "vin": [ { "txid": "82e6bc3228a2eb3be139f914f2feccbaae9f2a0c26165666d9c72918c7c09984", "vout": 1, "scriptSig": { "asm": "304502203e6836325720ffa302944b7c57f6bf2df01f2d6127269ef1590ac7057a9de327022100de24b75149bcd2253f7c5ec84930ce1cb0cd3b7fc7f73c9ebfd4a49dffa0deee[ALL] 02c5e973f06067e28c8211beef54031e9f354e288e484b641608c64608adcbe9cf", "hex": "48304502203e6836325720ffa302944b7c57f6bf2df01f2d6127269ef1590ac7057a9de327022100de24b75149bcd2253f7c5ec84930ce1cb0cd3b7fc7f73c9ebfd4a49dffa0deee012102c5e973f06067e28c8211beef54031e9f354e288e484b641608c64608adcbe9cf" }, "sequence": 4294967295 } ], "vout": [ { "value": 0.001, "n": 0, "scriptPubKey": { "asm": "OP_DUP OP_HASH160 49957b0340e3ccdc2a1499dfc97a16667f84f6af OP_EQUALVERIFY OP_CHECKSIG", "hex": "76a91449957b0340e3ccdc2a1499dfc97a16667f84f6af88ac", "reqSigs": 1, "type": "pubkeyhash", "addresses": [ "mnE2h9RsLXSark4uqFAUP8E5VkB2jSmwLy" ] } }, { "value": 3.99363616, "n": 1, "scriptPubKey": { "asm": "OP_DUP OP_HASH160 fc484ec72d24140f24db5ddcaa022d437e3e1afa OP_EQUALVERIFY OP_CHECKSIG", "hex": "76a914fc484ec72d24140f24db5ddcaa022d437e3e1afa88ac", "reqSigs": 1, "type": "pubkeyhash", "addresses": [ "n4WuCRZJxt8DoYyraUQm54kTzscL3ZTpEc" ] } } ], "hex": "01000000018499c0c71829c7d9665616260c2a9faebaccfef214f939e13beba22832bce682010000006b48304502203e6836325720ffa302944b7c57f6bf2df01f2d6127269ef1590ac7057a9de327022100de24b75149bcd2253f7c5ec84930ce1cb0cd3b7fc7f73c9ebfd4a49dffa0deee012102c5e973f06067e28c8211beef54031e9f354e288e484b641608c64608adcbe9cfffffffff02a0860100000000001976a91449957b0340e3ccdc2a1499dfc97a16667f84f6af88ac20cecd17000000001976a914fc484ec72d24140f24db5ddcaa022d437e3e1afa88ac00000000" }, { "txid": "e7c5d2c0376414f863924780d75f6465c4cdf442e766e84bac29d4f05c08dcf5", "hash": "e7c5d2c0376414f863924780d75f6465c4cdf442e766e84bac29d4f05c08dcf5", "version": 1, "size": 258, "vsize": 258, "weight": 1032, "locktime": 0, "vin": [ { "txid": "be79951db9d64635f00a742d4314bbd6ab4ad4cbf03e29a398b266a2c2bc09ce", "vout": 1, "scriptSig": { "asm": "3045022100e410093db9a3f086cb0b92aab47167a01579aac428e5a29f7bbd706afd5103c3022008ba7ad0183896e3209a10a86b47495cacc43b76504cf2e2f1e0b3416d04b0fe[ALL] 040cfa3dfb357bdff37c8748c7771e173453da5d7caa32972ab2f5c888fff5bbaeb5fc812b473bf808206930fade81ef4e373e60039886b51022ce68902d96ef70", "hex": "483045022100e410093db9a3f086cb0b92aab47167a01579aac428e5a29f7bbd706afd5103c3022008ba7ad0183896e3209a10a86b47495cacc43b76504cf2e2f1e0b3416d04b0fe0141040cfa3dfb357bdff37c8748c7771e173453da5d7caa32972ab2f5c888fff5bbaeb5fc812b473bf808206930fade81ef4e373e60039886b51022ce68902d96ef70" }, "sequence": 4294967295 } ], "vout": [ { "value": 0.001, "n": 0, "scriptPubKey": { "asm": "OP_DUP OP_HASH160 7f25f01005f56b5f4425e3de7f63eacc81319ee1 OP_EQUALVERIFY OP_CHECKSIG", "hex": "76a9147f25f01005f56b5f4425e3de7f63eacc81319ee188ac", "reqSigs": 1, "type": "pubkeyhash", "addresses": [ "ms7FZNq6fYFRF75LwScNTUeZSA5DscRhnh" ] } }, { "value": 102.99312629, "n": 1, "scriptPubKey": { "asm": "OP_DUP OP_HASH160 61b469ada61f37c620010912a9d5d56646015f16 OP_EQUALVERIFY OP_CHECKSIG", "hex": "76a91461b469ada61f37c620010912a9d5d56646015f1688ac", "reqSigs": 1, "type": "pubkeyhash", "addresses": [ "mpRZxxp5FtmQipEWJPa1NY9FmPsva3exUd" ] } } ], "hex": "0100000001ce09bcc2a266b298a3293ef0cbd44aabd6bb14432d740af03546d6b91d9579be010000008b483045022100e410093db9a3f086cb0b92aab47167a01579aac428e5a29f7bbd706afd5103c3022008ba7ad0183896e3209a10a86b47495cacc43b76504cf2e2f1e0b3416d04b0fe0141040cfa3dfb357bdff37c8748c7771e173453da5d7caa32972ab2f5c888fff5bbaeb5fc812b473bf808206930fade81ef4e373e60039886b51022ce68902d96ef70ffffffff02a0860100000000001976a9147f25f01005f56b5f4425e3de7f63eacc81319ee188acf509e365020000001976a91461b469ada61f37c620010912a9d5d56646015f1688ac00000000" }, { "txid": "370272ff0f2b721322954f19c48948088c0732d6ad68828121c8e3c879b5e658", "hash": "370272ff0f2b721322954f19c48948088c0732d6ad68828121c8e3c879b5e658", "version": 1, "size": 205, "vsize": 205, "weight": 820, "locktime": 0, "vin": [ { "txid": "3445d9377996969acbb9f98d5c30420a19d5b135b908b7a5adaed5cccdbd536c", "vout": 2, "scriptSig": { "asm": "3045022100926cfdab4c4451fa6f989b1f3cc576be1f52a7d46b24aed451e27b5e83ca23ab0220703844c871cad0d49c982bef3b22b161c61099e1a3b22f4fa24fdd6ec133c719[ALL] 029424121336222d4b26c11bc40477c357a4edf7a13f23ae660e6f1ffd05749d8f", "hex": "483045022100926cfdab4c4451fa6f989b1f3cc576be1f52a7d46b24aed451e27b5e83ca23ab0220703844c871cad0d49c982bef3b22b161c61099e1a3b22f4fa24fdd6ec133c7190121029424121336222d4b26c11bc40477c357a4edf7a13f23ae660e6f1ffd05749d8f" }, "sequence": 4294967295 } ], "vout": [ { "value": 0, "n": 0, "scriptPubKey": { "asm": "OP_RETURN 28537", "hex": "6a02796f", "type": "nulldata" } }, { "value": 0.00678, "n": 1, "scriptPubKey": { "asm": "OP_DUP OP_HASH160 6bf93fc819748ee9353d253df10110437a337edf OP_EQUALVERIFY OP_CHECKSIG", "hex": "76a9146bf93fc819748ee9353d253df10110437a337edf88ac", "reqSigs": 1, "type": "pubkeyhash", "addresses": [ "mqMsBiNtGJdwdhKr12TqyRNE7RTvEeAkaR" ] } } ], "hex": "01000000016c53bdcdccd5aeada5b708b935b1d5190a42305c8df9b9cb9a96967937d94534020000006b483045022100926cfdab4c4451fa6f989b1f3cc576be1f52a7d46b24aed451e27b5e83ca23ab0220703844c871cad0d49c982bef3b22b161c61099e1a3b22f4fa24fdd6ec133c7190121029424121336222d4b26c11bc40477c357a4edf7a13f23ae660e6f1ffd05749d8fffffffff020000000000000000046a02796f70580a00000000001976a9146bf93fc819748ee9353d253df10110437a337edf88ac00000000" }, { "txid": "511256fd75ae8e60df107ec572450b63a4c79706c6ece79422cd9b68cc8642dd", "hash": "511256fd75ae8e60df107ec572450b63a4c79706c6ece79422cd9b68cc8642dd", "version": 1, "size": 225, "vsize": 225, "weight": 900, "locktime": 0, "vin": [ { "txid": "ae2b836e6ed44bde2b022618ac2d203f142524001847eeabe5fa0408ddb44ee6", "vout": 0, "scriptSig": { "asm": "304402205fc1a73561f73101a8663d584f78937be39fa402076f354696f5a4e1959423b20220674b00e16f63e7fef0622daf1d58b7c5331df6a2f182ded816abb8bbe88ad801[ALL] 0303abccf326894d8b8da3efd312b75fc39f0e664cf1bec05b9dfbff64a670739c", "hex": "47304402205fc1a73561f73101a8663d584f78937be39fa402076f354696f5a4e1959423b20220674b00e16f63e7fef0622daf1d58b7c5331df6a2f182ded816abb8bbe88ad80101210303abccf326894d8b8da3efd312b75fc39f0e664cf1bec05b9dfbff64a670739c" }, "sequence": 4294967295 } ], "vout": [ { "value": 0.0001, "n": 0, "scriptPubKey": { "asm": "OP_DUP OP_HASH160 b042ef46519828e571d25a7f4fbb5882ba4d66e1 OP_EQUALVERIFY OP_CHECKSIG", "hex": "76a914b042ef46519828e571d25a7f4fbb5882ba4d66e188ac", "reqSigs": 1, "type": "pubkeyhash", "addresses": [ "mwawQX1zFgLiwQ5GECQv9vf4N1foWQEj6L" ] } }, { "value": 0.0846, "n": 1, "scriptPubKey": { "asm": "OP_DUP OP_HASH160 32c9eb1967867dc3761717629fe2fad817e6e4d4 OP_EQUALVERIFY OP_CHECKSIG", "hex": "76a91432c9eb1967867dc3761717629fe2fad817e6e4d488ac", "reqSigs": 1, "type": "pubkeyhash", "addresses": [ "mk9VyBL4rcdQPkVuCKAvip1sFM4q4NtnQf" ] } } ], "hex": "0100000001e64eb4dd0804fae5abee4718002425143f202dac1826022bde4bd46e6e832bae000000006a47304402205fc1a73561f73101a8663d584f78937be39fa402076f354696f5a4e1959423b20220674b00e16f63e7fef0622daf1d58b7c5331df6a2f182ded816abb8bbe88ad80101210303abccf326894d8b8da3efd312b75fc39f0e664cf1bec05b9dfbff64a670739cffffffff0210270000000000001976a914b042ef46519828e571d25a7f4fbb5882ba4d66e188ace0168100000000001976a91432c9eb1967867dc3761717629fe2fad817e6e4d488ac00000000" }, { "txid": "7efcedce69805d8c7a7e55f9a46a79ac5597a09de77ee6b583022973f78344d3", "hash": "7efcedce69805d8c7a7e55f9a46a79ac5597a09de77ee6b583022973f78344d3", "version": 1, "login": "octcokit", "id":"moejojojojo'@pradice/bitore.sig/ pkg.js" require' require 'json' post '/payload' do push = JSON.parse(request.body.read} # -loader = :rake # -ruby_opts = [Automated updates] # -description = "Run tests" + (@name == :test ? "" : " for #{@name}") # -deps = [list] # -if?=name:(Hash.#:"','") # -deps = @name.values.first # -name = @name.keys.first # -pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil? # -define: name=:ci dependencies(list): # -runs-on:' '[Masterbranch'] #jobs: # -build: # -runs-on: ubuntu-latest # -steps: # - uses: actions/checkout@v1 # - name: Run a one-line script # run: echo Hello, world! # - name: Run a multi-line script # run=:name: echo: hello.World! # echo test, and deploy your project'@'#'!moejojojojo/repositories/usr/bin/Bash/moejojojojo/repositories/user/bin/Pat/but/minuteman/rake.i/rust.u/pom.XML/Rakefil.IU/package.json/pkg.yml/package.yam/pkg.js/Runestone.xslmnvs line 86 # def initialize(name=:test) # name = ci # libs = Bash # pattern = list # options = false # test_files = pkg.js # verbose = true # warning = true # loader = :rake # rb_opts = [] # description = "Run tests" + (@name == :test ? "" : " for #{@name}") # deps = [] # if @name.is_a'?','"':'"'('"'#'"'.Hash':'"')'"'' # deps = @name.values.first # name=::rake.gems/.specs_keyscutter # pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil? # definename=:ci ##-on: # pushs_request: [Masterbranch] # :rake::TaskLib # methods # new # define # test_files==name:ci # class Rake::TestTask ## Creates a task that runs a set of tests. # require "rake/test.task'@ci@travis.yml.task.new do |-v| # t.libs << "test" # t.test_files = FileList['test/test*.rb'] # t.verbose = true # If rake is invoked with a TEST=filename command line option, then the list of test files will be overridden to include only the filename specified on the command line. This provides an easy way to run just one test. # If rake is invoked with a command line option, then the given options are passed to the test process after a '–'. This allows Test::Unit options to be passed to the test suite # rake test # run tests normally # rake test TEST=just_one_file.rb # run just one test file. # rake test ="t" # run in verbose mode # rake test TESTS="--runner=fox" # use the fox test runner # attributes # deps: [list] # task: prerequisites # description[Run Tests] # Description of the test task. (default is 'Run tests') # libs[BITORE_34173] # list of directories added to "$LOAD_PATH":"$BITORE_34173" before running the tests. (default is 'lib') # loader[test] # style of test loader to use. Options are: # :rake – rust/rake provided tests loading script (default). # :test=: name =rb.dist/src.index = Ruby provided test loading script. direct=: $LOAD_PATH uses test using command-line loader. name[test] # name=: testtask.(default is :test) # options[dist] # Tests options passed to the test suite. An explicit TESTOPTS=opts on the command line will override this. (default is NONE) # pattern[list] # Glob pattern to match test files. (default is 'test/test*.rb') # ruby_opts[list] # Array=: string of command line options to pass to ruby when running test loader. # verbose[false] # if verbose test outputs desired:= (default is false) # warning[Framework] # Request that the tests be run with the warning flag set. E.g. warning=true implies “ruby -w” used to run the tests. (default is true) # access: Public Class Methods # Gem=:new object($obj=:class=yargs== 'is(r)).)=={ |BITORE_34173| ... } # Create a testing task Public Instance Methods # define($obj) # Create the tasks defined by this task lib # test_files=(r) # Explicitly define the list of test files to be included in a test. list is expected to be an array of file names (a File list is acceptable). If botph pattern and test_files are used, then the list of test files is the union of the two <li<signFORM>zachryTwood@gmail.com Zachry Tyler Wood DOB 10 15 1994 SSID *******1725<SIGNform/><li/> { "scripts": { "test": "jest", "start": "./node_modules/.bin/node-pg-migrate up && node app.js", "migrate": "./node_modules/.bin/node-pg-migrate" }, "devDependencies": { "jest": "^24.8.0" }, "dependencies": { "bitcoin-core": "^3.0.0", "body-parser": "^1.19.0", "cors": "^2.8.5", "dotenv": "^8.2.0", "express": "^4.16.4", "node-pg-migrate": "^5.9.0", "pg": "^8.6.0" } name": '((c)'":,'"'' use": is'='==yargs(ARGS)).); / module: env.export((r), '"name": '((c)'":,'"'' '".dirname": is'='==yargs(ARGS)).)"; /'"''t.verbose{ "scripts": { "test": "jest", "start": "./node_modules/.bin/node-pg-migrate up && node app.js", "migrate": "./node_modules/.bin/node-pg-migrate" }, "devDependencies": { "jest": "^24.8.0" }, "dependencies": { "bitcoin-core": "^3.0.0", "body-parser": "^1.19.0", "cors": "^2.8.5", "dotenv": "^8.2.0", "express": "^4.16.4", "node-pg-migrate": "^5.9.0", "pg": "^8.6.0" } } Andrekolodochka Patch 5 #20155 zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 Conversation 0 Commits 7 Checks 0 Files changed ∞ Conversation zakwarlord7 @zakwarlord7 zakwarlord7 commented 27 minutes ago • Why: Closes [issue link]{[Skip to content Your account has been flagged. Because of that, your profile is hidden from the public. If you believe this is a mistake, contact support to have your account status reviewed. https://github.com/github / docs Public Code Issues 106 Pull requests 59 Discussions Actions Projects 3 Security Insights Jump to bottom Andrekolodochka Patch 5 #20155 Open zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 Open Andrekolodochka Patch 5 #20155 zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 Conversation 0 Commits 7 Checks 0 Files changed ∞ Conversation zakwarlord7 @zakwarlord7 zakwarlord7 commented 9 minutes ago Why: Closes [issue link] What's being changed (if available, include any code snippets, screenshots, or gifs): Check off the following: I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes). For content changes, I have completed the self-review checklist. Writer impact (This section is for GitHub staff members only): This pull request impacts the contribution experience I have added the 'writer impact' label I have added a description and/or a video demo of the changes below (e.g. a "before and after video") zakwarlord7 added 7 commits 23 days ago @zakwarlord7 BITORE 0c87d46 @zakwarlord7 Create BITCORE ebe3a4b @zakwarlord7 bitore.sig c3442e6 @zakwarlord7 Revert "bitore.sig" 2187703 @zakwarlord7 Biore.sig (https://github.com/zakwarlord7/docs/pull/27[)](https://github.com/github/docs/pull/20155/commits/88d9e481a768c0b12529d91e83fcc745c6a33545) 88d9e48 @zakwarlord7 Update index.md 4144259 @zakwarlord7 Update index.md d7cd5b7 @zakwarlord7 zakwarlord7 requested review from a team as code owners 9 minutes ago zakwarlord7 commented 9 minutes ago Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: ubuntu-latest steps: run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" run: echo "🔎 The name of your branch is {{ github.repository }}." name: Check out repository code uses: actions/checkout@v3 run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." run: echo "🖥️ The workflow is now ready to test your code on the runner." name: List files in the repository run: | ls ${{ github.workspace }} run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs Merge state Add more commits by pushing to the andrekolodochka-patch-1 branch on zakwarlord7/docs. Review requested Review has been requested on this pull request. It is not required to merge. 2 pending reviewers This branch has conflicts that must be resolved Only those with write access to this repository can merge pull requests. Conflicting files .github/PULL_REQUEST_TEMPLATE.md .github/actions-scripts/create-enterprise-issue.js .github/actions-scripts/enterprise-server-issue-templates/deprecation-issue.md .github/actions-scripts/enterprise-server-issue-templates/release-issue.md .github/actions-scripts/fr-add-docs-reviewers-requests.js .github/actions-scripts/projects.js .github/actions-scripts/ready-for-docs-review.js .github/allowed-actions.js .github/dependabot.yml .github/workflows/60-days-stale-check.yml .github/workflows/check-broken-links-github-github.yml .github/workflows/content-changes-table-comment.yml .github/workflows/crowdin.yml .github/workflows/enterprise-dates.yml .github/workflows/hubber-contribution-help.yml .github/workflows/move-help-wanted-issues.yml .github/workflows/openapi-decorate.yml .github/workflows/os-ready-for-review.yml .github/workflows/remove-unused-assets.yml .github/workflows/repo-sync-stalls.yml .github/workflows/repo-sync.yml .github/workflows/staging-build-pr.yml .github/workflows/staging-deploy-pr.yml .github/workflows/staging-undeploy-pr.yml .github/workflows/start-new-engineering-pr-workflow.yml ... Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: WindowsXP89_98/intel82/linux36_82 tar gz Zip WinRaWr.unzipped/.jar/jee.enc-module'@package.yam/API/APk.Adk sdk.S.E/jdk.J.C/Jinja-datadog.jar/jre'@sun.java.org/dl/WIZARD/install/installer/arc/code.dir/.dist'@config yml/install/unit/inityit//POST FIinsh. 100%complete. Don. Response:' 403OJ=>TIERAFORMA=> SHAPEshit'"'X'"'=''=shapeSHIFT'"x'"'=''='::Push:: console.(func)==>=>>atest steps: run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" run: echo "🔎 The name of your branch is {{ github.repository }}." name: Check out repository code uses: actions/checkout@v3 run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." run: echo "🖥️ The workflow is now ready to test your code on the runner." name: List files in the repository run: | ls ${{ github.workspace }} run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs Remember, contributions to this repository should follow its contributing guidelines and code of conduct. ProTip! Add comments to specific lines under Files changed. Reviewers @github/docs-localization docs-localization @github/docs-engineering docs-engineering Still in progress? Assignees No one assigned Labels None yet Projects None yet Milestone No milestone Development Successfully merging this pull request may close these issues. None yet Notifications Customize You’re receiving notifications because you’re watching this repository. 1 participant @zakwarlord7 Allow edits and access to secrets by maintainers Footer © 2022 GitHub, Inc. Footer navigation Terms Privacy Security Status Docs Contact GitHub Pricing API Training Blog About zakwarlord7 commented now Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: ubuntu-latest steps: - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" - run: echo "🔎 The name of your branch is {{ github.repository }}." - name: Check out repository code uses: actions/checkout@v3 - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." - run: echo "🖥️ The workflow is now ready to test your code on the runner." - name: List files in the repository run: | ls ${{ github.workspace }} - run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs What's being changed (if available, include any code snippets, screenshots, or gifs): Check off the following: I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes). For content changes, I have completed the self-review checklist. Writer impact (This section is for GitHub staff members only): This pull request impacts the contribution experience I have added the 'writer impact' label I have added a description and/or a video demo of the changes below (e.g. a "before and after video") Skip to content Your account has been flagged. Because of that, your profile is hidden from the public. If you believe this is a mistake, contact support to have your account status reviewed. https://github.com/github / docs Public Code Issues 106 Pull requests 59 Discussions Actions Projects 3 Security Insights Jump to bottom Andrekolodochka Patch 5 #20155 Open zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 Open Andrekolodochka Patch 5 #20155 zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 Conversation 0 Commits 7 Checks 0 Files changed ∞ Conversation zakwarlord7 @zakwarlord7 zakwarlord7 commented 9 minutes ago Why: Closes [issue link] What's being changed (if available, include any code snippets, screenshots, or gifs): Check off the following: I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes). For content changes, I have completed the self-review checklist. Writer impact (This section is for GitHub staff members only): This pull request impacts the contribution experience I have added the 'writer impact' label I have added a description and/or a video demo of the changes below (e.g. a "before and after video") zakwarlord7 added 7 commits 23 days ago @zakwarlord7 BITORE 0c87d46 @zakwarlord7 Create BITCORE ebe3a4b @zakwarlord7 bitore.sig c3442e6 @zakwarlord7 Revert "bitore.sig" 2187703 @zakwarlord7 Biore.sig (https://github.com/zakwarlord7/docs/pull/27[)](https://github.com/github/docs/pull/20155/commits/88d9e481a768c0b12529d91e83fcc745c6a33545) 88d9e48 @zakwarlord7 Update index.md 4144259 @zakwarlord7 Update index.md d7cd5b7 @zakwarlord7 zakwarlord7 requested review from a team as code owners 9 minutes ago zakwarlord7 commented 9 minutes ago Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: ubuntu-latest steps: run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" run: echo "🔎 The name of your branch is {{ github.repository }}." name: Check out repository code uses: actions/checkout@v3 run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." run: echo "🖥️ The workflow is now ready to test your code on the runner." name: List files in the repository run: | ls ${{ github.workspace }} run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs Merge state Add more commits by pushing to the andrekolodochka-patch-1 branch on zakwarlord7/docs. Review requested Review has been requested on this pull request. It is not required to merge. 2 pending reviewers This branch has conflicts that must be resolved Only those with write access to this repository can merge pull requests. Conflicting files .github/PULL_REQUEST_TEMPLATE.md .github/actions-scripts/create-enterprise-issue.js .github/actions-scripts/enterprise-server-issue-templates/deprecation-issue.md .github/actions-scripts/enterprise-server-issue-templates/release-issue.md .github/actions-scripts/fr-add-docs-reviewers-requests.js .github/actions-scripts/projects.js .github/actions-scripts/ready-for-docs-review.js .github/allowed-actions.js .github/dependabot.yml .github/workflows/60-days-stale-check.yml .github/workflows/check-broken-links-github-github.yml .github/workflows/content-changes-table-comment.yml .github/workflows/crowdin.yml .github/workflows/enterprise-dates.yml .github/workflows/hubber-contribution-help.yml .github/workflows/move-help-wanted-issues.yml .github/workflows/openapi-decorate.yml .github/workflows/os-ready-for-review.yml .github/workflows/remove-unused-assets.yml .github/workflows/repo-sync-stalls.yml .github/workflows/repo-sync.yml .github/workflows/staging-build-pr.yml .github/workflows/staging-deploy-pr.yml .github/workflows/staging-undeploy-pr.yml .github/workflows/start-new-engineering-pr-workflow.yml ... Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: WindowsXP89_98/intel82/linux36_82 tar gz Zip WinRaWr.unzipped/.jar/jee.enc-module'@package.yam/API/APk.Adk sdk.S.E/jdk.J.C/Jinja-datadog.jar/jre'@sun.java.org/dl/WIZARD/install/installer/arc/code.dir/.dist'@config yml/install/unit/inityit//POST FIinsh. 100%complete. Don. Response:' 403OJ=>TIERAFORMA=> SHAPEshit'"'X'"'=''=shapeSHIFT'"x'"'=''='::Push:: console.(func)==>=>>atest steps: run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" run: echo "🔎 The name of your branch is {{ github.repository }}." name: Check out repository code uses: actions/checkout@v3 run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." run: echo "🖥️ The workflow is now ready to test your code on the runner." name: List files in the repository run: | ls ${{ github.workspace }} run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs Remember, contributions to this repository should follow its contributing guidelines and code of conduct. ProTip! Add comments to specific lines under Files changed. Reviewers @github/docs-localization docs-localization @github/docs-engineering docs-engineering Still in progress? Assignees No one assigned Labels None yet Projects None yet Milestone No milestone Development Successfully merging this pull request may close these issues. None yet Notifications Customize You’re receiving notifications because you’re watching this repository. 1 participant @zakwarlord7 Allow edits and access to secrets by maintainers Footer © 2022 GitHub, Inc. Footer navigation Terms Privacy Security Status Docs Contact GitHub Pricing API Training Blog About zakwarlord7 commented now Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: ubuntu-latest steps: - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}." - name: Check out repository code uses: actions/checkout@v3 - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." - run: echo "🖥️ The workflow is now ready to test your code on the runner." - name: List files in the repository run: | ls ${{ github.workspace }} - run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs zakwarlord7 added 7 commits 23 days ago @zakwarlord7 BITORE 0c87d46 @zakwarlord7 Create BITCORE ebe3a4b @zakwarlord7 bitore.sig c3442e6 @zakwarlord7 Revert "bitore.sig" 2187703 @zakwarlord7 Biore.sig (#27) 88d9e48 @zakwarlord7 Update index.md 4144259 @zakwarlord7 Update index.md d7cd5b7 @zakwarlord7 zakwarlord7 requested review from a team as code owners 27 minutes ago zakwarlord7 commented 27 minutes ago Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: ubuntu-latest steps: - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" - run: echo "🔎 The name of your branch is {{ github.repository }}." - name: Check out repository code uses: actions/checkout@v3 - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." - run: echo "🖥️ The workflow is now ready to test your code on the runner." - name: List files in the repository run: | ls ${{ github.workspace }} - run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs zakwarlord7 commented 17 minutes ago Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: WindowsXP89_98/intel82/linux36_82 tar gz Zip WinRaWr.unzipped/.jar/jee.enc-module'@package.yam/API/APk.Adk sdk.S.E/jdk.J.C/Jinja-datadog.jar/jre'@sun.java.org/dl/WIZARD/install/installer/arc/code.dir/.dist'@config yml/install/unit/inityit//POST FIinsh. 100%complete. Don. Response:' 403OJ=>TIERAFORMA=> SHAPEshit'"'X'"'=''=shapeSHIFT'"x'"'=''='::Push:: console.(func)==>=>>atest steps: - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" - run: echo "🔎 The name of your branch is {{ github.repository }}." - name: Check out repository code uses: actions/checkout@v3 - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." - run: echo "🖥️ The workflow is now ready to test your code on the runner." - name: List files in the repository run: | ls ${{ github.workspace }} - run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs zakwarlord7 commented 13 minutes ago -' '[22/15']'"'' zakwarlord7 commented 11 minutes ago #18736 = # CORRECTED - [22/8] [] -, zakwarlord7 commented 6 minutes ago • Recordatorio: tiene un formato de pago no pagadoimage: "ruby:2.7" before_script: - ruby -v # Print out ruby version for debugging - bundle install - gem install rspec - mkdir ~/.gem || true - touch ~/.gem/credentials || true - url_hocurl -v -X POST https://api-m.sandbox.paypal.com/v2/checkout/orders -H "Content-Type: application/json" -H "Authorization: Bearer " -d '{ "intent": "CAPTURE", "Value": '"amount '"' "amount": '"'[VOLUME']'"' "currency_code": "USD("DOLLARS)'"':;','' , "value": "22677000000000"]'"':'"DOLLARS](USD).Zip installation-on:'" Zip/.WinRaWr.unzipped/.jar/jee.enc-module'@package.yam/API/APk.Adk/Apk.sdk.S.E/jre.J.C'@java.sun.org/WIZARD/s4c.disrlt/code dir'@main/TREE/base/Trunk base/main ranch/trunk/paradise/bitore.sig/BIOTURR/BITOTE::RUNS: NOW: FORM: sign/tests/travis'@.github.com/GitHub/doc/javascript/WORKSFLOW/dispatch/repositoeies:'@mijoejoejoejoe/mojoejoejoejoe/Powerpuff girls/Powerpuff girls/README.md/README me/Contributing.md/Read.md Merge state Add more commits by pushing to the andrekolodochka-patch-1 branch on zakwarlord7/docs. Review requested Review has been requested on this pull request. It is not required to merge. 2 pending reviewers This branch has conflicts that must be resolved Only those with write access to this repository can merge pull requests. Conflicting files .github/PULL_REQUEST_TEMPLATE.md .github/actions-scripts/create-enterprise-issue.js .github/actions-scripts/enterprise-server-issue-templates/deprecation-issue.md .github/actions-scripts/enterprise-server-issue-templates/release-issue.md .github/actions-scripts/fr-add-docs-reviewers-requests.js .github/actions-scripts/projects.js .github/actions-scripts/ready-for-docs-review.js .github/allowed-actions.js .github/dependabot.yml .github/workflows/60-days-stale-check.yml .github/workflows/check-broken-links-github-github.yml .github/workflows/content-changes-table-comment.yml .github/workflows/crowdin.yml .github/workflows/enterprise-dates.yml .github/workflows/hubber-contribution-help.yml .github/workflows/move-help-wanted-issues.yml .github/workflows/openapi-decorate.yml .github/workflows/os-ready-for-review.yml .github/workflows/remove-unused-assets.yml .github/workflows/repo-sync-stalls.yml .github/workflows/repo-sync.yml .github/workflows/staging-build-pr.yml .github/workflows/staging-deploy-pr.yml .github/workflows/staging-undeploy-pr.yml .github/workflows/start-new-engineering-pr-workflow.yml pubDate> Patch 5 #20157 zakwarlord7 wants to merge 7 commits into github:andrekolodochka-patch-1 from zakwarlord7:andrekolodochka-patch-1 Conversation 0 Commits 7 Checks 0 Files changed ∞ Conversation zakwarlord7 @zakwarlord7 zakwarlord7 commented 1 minute ago Why: Closes [issue link] What's being changed (if available, include any code snippets, screenshots, or gifs): Check off the following: I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes). For content changes, I have completed the self-review checklist. Writer impact (This section is for GitHub staff members only): This pull request impacts the contribution experience I have added the 'writer impact' label I have added a description and/or a video demo of the changes below (e.g. a "before and after video") zakwarlord7 added 7 commits 23 days ago "000000-00000000000000000-0000000000000000-000000_Opening_Balance_Equity					Ending Balance: $25763711860000"										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 							<\feed/><\live/>			 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 		Skip to content

Pull requestsIssuesCodespaces

Marketplace

Explore

 

￼ 

Your account has been flagged.

Because of that, your profile is hidden from the public. If you believe this is a mistake, contact support to have your account status reviewed.

clearlinux-pkgs/guilePublic

 Watch 1 

Fork 0

 Star 0

Code

Pull requests

Actions

Projects

Security

Insights

Browse files

guile: Autospec creation for update from version 2.2.7 to version 3.0.8

Aleix Conchillo Flaqué (1): foreign-library: fix darwin detection Alex Sassmannshausen (1): doc: Add reference to Guile Hall in the manual. Andrea Azzarone (1): Fix gc.test "after-gc-hook gets called" failures. Andrew Gierth (1): Fix ARMv7 THUMB encoding for immediates. Andrew Whatson (3): Add tests for get-bytevector-some! Fix suspendable implementation of 'get-bytevector-some!' Close the finalization pipe before forking. Andy Wingo (1400): Remove all deprecated code Update effective version to 3.0 Remove support for legacy syntax objects. Update uri? documentation. guile.m4 fix for 3.0 prereleases GOOPS instance migration implemented in Scheme Change name of "static" flag indicating static slot allocation Implement class redefinition on top of fixed structs Remove indirection in structs remove self field of vtables Remove "redefined" class slot Document class redefinition change Remove support for tail arrays and self slots Remove SCM_UNBOUND Remove <int-slot>, <float-slot>, <double-slot> Remove opaque slots Fix bootstrap slot permissions for <class> Replace "pr" struct fields with "pw" fields Inline struct-ref etc definitions in the VM. Remove unboxed case from vm struct accessors Fix GOOPS class redefinition type error. Add new vtable reserved unboxed field Struct vtables store bitmask of unboxed fields Add support for C16_C16 instruction words Add new-style test and branch instructions Add (system base types internal). Add assembler and disassembler support for new instructions First step towards emitting new instructions: "j" instead of "br" Type inference distinguishes &fixnum and &bignum types Model all special immediates under one type bit (with range) Refactor (system base types internal) to use more macros Use tag visitors to generate assemblers, disassembly annotations Heap type predicates preceded by heap-object? Emit new instructions for heap object type tests Emit char? instead of br-if-char Use new instructions for null?, nil? Simplify $branch to always take a $primcall Emit new eq? instruction Use new instructions for less-than, etc Use new instructions for u64 comparisons. Use new instructions for f64 comparisons Minor optimization compiling 'and' Rename "number" tag to "heap-number" Simplify lowering of branching primcalls to CPS Add missing compiler support for heap-object? primcall et al. Lower eqv? and equal? to new instructions. Add compiler support for s64 comparisons. Add compiler support for fixnum? primcall predicate Add untag-fixnum instruction Add hacks around lack of allocation sinking Inline u64/scm comparisons Remove compiler support for u64-scm comparisons Lower logtest branches to instead be 'zero? logand' Remove assembler exports for old-style predicates and branches Fix argument type of arguments<=? instruction Emit new instructions in function preludes Remove disassembler support for old-style jump instructions Simplify special immediate predicate inferrer. RTL test uses new instructions Remove old branching instructions from VM $primcall has a "param" member cache-current-module, etc use immediate primcall parameters load-f64, etc take immediate parameters free-ref, free-set take immediate parameters Immediate variants of vector-ref, etc use immediate param Immediate parameter for struct-ref et al builtin-ref takes immediate parameter Remaining /immediate instructions take primcall imm param reify-primitives reifies constants for out-of-range imm params Tweak optimization order (system base types) uses target's idea of max size_t Specialize primcalls more aggressively Earlier conversion to /imm primcalls Add lsh, rsh instructions error, scm-error primcalls expand to `throw' Add new "throw" VM ops Fix effects analysis bug introduced with primcall param Refactor numeric comparison bytecode emission Canonicalize <=, >=, and > primcalls to < Specialize comparisons to SCM as s64 Closure conversion uses immediate variants of vector instructions Use immediate primcalls when unfolding constructors Add tag-fixnum instruction Compiler uses target fixnum range Convert "ash" to "lsh"/"rsh" when lowering to CPS Type folding has "macro reduction" phase Add missing lsh/immediate, rsh/immediate type inferrers Specialize rsh/lsh, not ash Add srsh, srsh/immediate instructions Slot allocation allows s64/u64 representations of same var Better range inference Better untagging of fixnums Don't fold comparisons that might contain a NaN. Add support for comparisons against integer immediates Compiler specializes comparisons to immediate integers ursh, ursh/immediate, etc only residualized if count < 64 Revert specialization of fixnum phi variables Better support for unboxed signed arithmetic Specialize-numbers reifies instructions that type-check Fix s64->scm reducer Separate u64 and s64 type inferrers now that ops are monomorphic Fix u64/s64 typesafety around fixnum (un)tagging Revert "Slot allocation allows s64/u64 representations of same var" Fix logand type inference Fix unboxed immediate range comparison type inference Specialize fixnum and s64 phis Remove effects-analysis exports that were undefined Minor compile-cps refactor Fix type check elision for branches DCE eliminates effect-free branches to the same continuation intmap-remove returns empty-intmap if appropriate Add support for bignum? CPS primitive. Remove thunk?, integer? simple predicate inferrers Add exact-integer? as interesting Tree-IL effect-free primitive Add &exact-number helper definition Improve type and range inference on bignums Fix inference of generic < on NaN values Minor refactoring to type inference on < and = Declare bignum? as effect-free Better type folding for = on exact numbers Better unboxing for logand over s64 values Add integer devirtualization pass. Refactor to finish the primcalls-take-parameters work DCE of branches punches through dead terms Optimize check-urange in assembler.scm Refactor aux definition fabrication in CSE pass Add fabricated expressions for u64-s64 conversion Fix arity of slsh/immediate inferrer Tighten up untag-fixnum range Enable lsh/immediate, rsh/immediate specialization Add nullary intmap and intset folders Simplify live variable computation for graphs without loops Minor CSE run-time optimization Add compute-clobber-map to effect analysis Improve CSE complexity -O1 disables call precoloring Allow integer devirtualization to be disabled Avoid generating arity-adapting continuations if not needed Avoid generating arity-adapting zero-value conts where possible Mark throw, throw/value, etc as having fallthrough Refactor number specialization to reduce duplication Integer comparison folding refactors Fix NaN handling in <= and >= Bailouts can continue directly to tail Add scm-ref, etc instructions for generic heap object field access CPS conversion residualizes undefined? predicate Re-mark "throw" et al as not having fallthrough Assignment conversion uses unchecked memory accessors Fix DCE over primcall setters with params Support closure annotations to scm-ref et al Use unchecked scm-ref/set in closure conversion Fix stack effect/clobber parsing for calls Fix mismatch between CPS and Scheme "complex?" predicate Refactor boxing/unboxing primcall args/results Reify-primitives removes "/unlikely" ephemeral instructions Remove compile-bytecode cases for ephemeral primitives Refactor reify-primitives pass Refactor list->seq to make return arity apparent Flesh out compile-bytecode for all heap objects Refactor lowering of Tree-IL primcalls to CPS CPS conversion expands "list" Inline "elide-values" optimization into CPS conversion CPS conversion avoids residualizing unknown primcalls Contification also inlines "elide-values" pass Remove inline-constructors pass Unknown primcalls convert as calls Re-add support for logbit? $branch is now a distinct CPS term type Fix sandbox Variable renaming in type-fold.scm $prompt is now its own kind of CPS term. Fix add-prompt-control-flow-edges for terms with no continuation $throw is a new kind of CPS term Simplify prompt slot allocation now that bailouts can't continue $primcall always continues to $kargs Add (system base optimize) module Disable resolve-primitives pass below -O2 Prevent LICM of memory accesses guarded by effect-free predicates Allow peeling loops with bailouts Instruction explosion for vector-{length,ref,set!} Allow peval to gnaw on string->symbol, symbol->string Improve compilation of make-vector without init Add resolve-primitives pass back to bootstrap Fix verify.scm for call-thunk/no-inline Fix specialization of the allocate-words family of instructions Bug-fix to devirtualize-integers pass Make integer devirtualization less eager Minor optimization in loop peeling Fix primitive reification for scm-set! / word-set!. Instruction explosion for make-vector Instruction explosion for /immediate variants of vector prims Mark word-ref and word-ref/immediate as producing U64 values CPS pass now expects exploded vector primitives Remove "ash" instruction. Remove now-unused make-vector et al instructions Add CPS compilation support for mutable-vector? Fix bug in struct-ref effects analysis CPS type analysis support for mutable vs immutable vectors Re-add compiler backend support for immutable vectors Compiler frontend support for vector mutability checks Minor compile-cps refactor for cons Expand pair-related primcalls Remove special optimizer and backend support for pairs Remove pair-related instructions Better compilation of vector constructors and initializers Improve make-vector compilation for known big sizes Sync IP before allocating closures Save VM compare result before calling out to hooks Remove obsolete rtl tests Lower box, box-ref, box-set! primcalls Remove box instructions Instruction explosion for struct-vtable Add support for raw gc-managed pointer locals Add optimizer and backend support for gc-pointer-ref Add raw u8-ref, etc instructions Rename gc-pointer-ref to pointer-ref Custom bv-u8-ref lowering procedure Instruction explosion for integer bytevector ref procedures Add f32-ref, f64-ref lowering procs Instruction explosion for bytevector setters Add assume-u64 and assume-s64 dataflow restrictions Instruction explosion for bv-length Remove optimizer and backend support for bv-u8-ref et al Remove bytevector instructions from the VM. Instruction explosion for struct-ref, struct-set! Introduce make-struct/simple Lower "make-struct/simple" to CPS Remove optimizer and backend support for struct ops Remove VM struct-ref, etc instructions Remove free-ref, free-set! Remove unneeded assembly shuffle routines. Use make-struct/simple in psyntax Use make-struct/simple in tree-il Add instrinsics to runtime Compile some generic arithmetic to intrinsic calls Remove specific instructions for add, etc from VM CPS conversion lowers string-length Add VM ops needed for string-ref Lower string-ref in CPS conversion Remove now-unused string-length, string-ref Add string-set! intrinsic Explode "string-set!" Remove string-set! VM op Instruction explosion for integer->char Remove integer->char op Instruction explosion for char->integer Remove char->integer from VM Remove dead code in CPS converter Add load-label instruction Add $code CPS expression type Remove unused make-closure opcode. string->number, etc intrinsics Remove string->number, etc opcodes Add string->number etc as macro instructions to reify-primitives Class-of is intrinsic Remove class-of opcode Remove load-typed-array, make-array opcodes Add scm->f64 intrinsic Slim heap-allocated flonums Add reifier for fadd/immediate. Instruction explosion for f64->scm Disable f64->scm instruction Remove scm->f64, f64->scm implementations scm->u64, scm->s64, scm->u64/truncate intrinsics Remove scm->u64, etc implementations u64->scm, s64->scm intrinsics Remove implementations of obsolete s64->scm, u64->scm insts logsub is intrinsic Remove implementation of logsub VM op Explode atomic box ops to new atomic instructions Remove implementation of atomic box ops Remove unused macros in vm-engine Fix width of operands to intrinsic call instructions Add support for dynamic-state-related intrinsics Intrinsics for dynamic state instructions push and pop dynamic state via intrinsics Remove old VM ops for fluid-ref et al lsh, rsh etc are intrinsics Remove implementation of lsh, rsh instructions VM calls out to heap-numbers-equal? through intrinsics VM calls "<?" through intrinsic. VM calls =? through intrinsic Remove unused macros in VM Mark call-scm<-scm-u64 as defining a result Add scm_maybe_resolve_module Add intrinsics for module operations Add cache-ref, cache-set! macro-instructions Instruction explosion for cached-module-box Instruction explosion for cache-current-module, cached-toplevel-box Remove backend support for cached-module-box et al. Compile "define!" via intrinsic Use intrinsics for top-level refs outside captured scopes Remove implementations of now-unused toplevel-box et al instructions Remove unused macro in vm-engine Remove unused vm_error_unbound Call out to expand_stack through new VM intrinsic Fix libguile subcomponent headers not to include <libguile.h> Move some definitions out of _scm.h Simplify definition of SCM_SYSCALL. Move "min" and "max" macros out of _scm.h Remove #ifdef cases for VMS and Cray. Remove unused getters for register backing store base Add configure check for auxiliary stacks Refactor handling of auxiliary stacks and setjmp/longjmp Move syscall-related private defines to their own header More _scm.h refactoring Remove _scm hack to undefine HAVE_STRUCT_TIMESPEC Refactor regarding internal detection of ia64 Inline definition of SIZEOF_SCM_T_BITS Remove _scm.h inclusion of config.h Remove errno.h include from _scm.h. Remove _scm.h verify.h inclusion Remove alignof.h inclusion from _scm.h Assume that if we have GCC, we have GCC >= 3.0. Require C99 to build Guile Remove error.h include from _scm.h. Remove _scm.h print.h include Move core validate macros to error.h Move number validators to numbers.h. Move more number validators to numbers.h. Remove unused macros Move list validators to list.h Remove public SCM_VALIDATE_NIM Move pair, null, nil, and boolean validators out of validate.h More validate.h devolution Devolve more validate macros Remove includes of validate.h. Deprecate libguile/validate.h Remove list.h from _scm.h Devolve boolean.h include. Devolve pairs.h Devolve gc.h Move gsubr.h include to snarf.h Devolve procs.h include from _scm.h. Remove gc.h from inline.h Remove threads.h from inline.h Move array-handle.h include out from inline.h Remove bytevectors.h include form ports.h Move struct.h include out of ports.h Remove threads.h include from ports.h Devolve vectors.h include from ports.h Remove <string.h> include from ports.h. Remove <stdio.h> from ports.h Remove <unistd.h> from ports.h Remove ports.h from inline.h Remove numbers.h from inline.h Remove error.h from inline.h Devolve numbers.h from _scm.h. Move scm_tc7_pointer snarfer out to foreign.h Move symbol snarfers to symbols.h Move subr snarfing macros to gsubr.h. Deprecate SCM_STATIC_DOUBLE_CELL snarf macro Move string-related snarfers to strings.h Devolve keyword-snarfing macros Devolve variable snarfers Remove mutex snarfers Devolve smob snarfers Simplify SCM_IMMUTABLE_CELL macros Remove snarf.h from _scm.h Devolve variable.h from _scm.h. Shuffle around inline C function implementation Define scm_t_wchar in one place Devolve threads.h from _scm.h. Remove modules.h from _scm.h. Devolve symbols.h from _scm.h Devolve foreign.h from _scm.h Devolve programs.h from _scm.h. Devolve strings.h Remove _scm.h Remove useless "classes: h_files" from Guile headers. Remove Emacs local variables comments in Guile source Remove unneeded memmove.c and strerror.c files Move SCM_C_INLINE_KEYWORD definition to inline.h Fix include in test-ffi-lib Use stdint.h limit macros Fix missing includes in tests. Deprecate pre-stdint.h limit macros Remove crufty support for 16-bit architectures. Move SCM_TICK definition to __scm.h. Move SCM_ARG1, etc definitions to error.h Minor __scm.h reformatting Inline tags.h into __scm.h Rename __scm.h to scm.h Rationalize guile-readline includes Make libguile header inclusion consistent within libguile c files Rationalize include order in C files Make .c copyright headers uniform Remove (C) from copyright statements libguile header files have uniform format for copyright declarations Update license notices in all C files Start to use C99 stdint in gen-scmconfig Replace uses of scm_t_int8, scm_t_uintmax, etc with stdint types Use ptrdiff_t instead of scm_t_ptrdiff Deprecate scm_t_uint8 and similar typedefs Add __scm.h placeholder Inline struct scm_vm into struct scm_i_thread Eagerly initialize thread VM; remove scm_the_vm VM gets VP from thread Fix intrinsics copyright line and include guards expand_stack intrinsic takes thread Move VM keyword argument parsing to happen via an intrinsic Add push-interrupt-frame VM intrinsic Give multiple-values objects a tc7 Add intrinsic for foreign-call Most header files use forward decl for union scm_vm_stack_element Reinstating undelimited continuations uses intrinsic Foreign-call intrinsic boxes errno Refactor continuation capture in VM Rename scm_i_thread to scm_thread Add intrinsic for call/cc compose-continuation uses an intrinsic Add rest-arg-length intrinsic. abort-to-prompt uses an intrinsic Refactors to abort-to-prompt implementation Optimize abort-to-prompt to avoid alloca Allow abort_to_prompt to avoid a longjmp VM throw uses intrinsics Add intrinsics for error conditions (wrong num args etc) Remove mention of vm-error from test suite Apply-non-program is an intrinsic Inline handling of non-program apply allocate-words intrinsic Compile current-module as intrinsic call Remove dedicated current-module instruction. Intrinsic for "prompt" bind-rest inst uses cons-rest intrinsic Use CALL_INTRINSICS helper in VM Refactor handling of active VM registers Minor scm_thread refactoring Intrinsics take registers from thread Remove "resume" arg from vm engine Minor optimizations to debug hook dispatch Microoptimizations to hook dispatch Refactor hook dispatch in VM Revert "Refactor hook dispatch in VM" Strip "get-jit-size" feature from lightning. Remove documentation from embedded GNU lightning Remove lightning unit tests Finish removing get-jit-size Beginnings of build integration of lightning and guile Remove lightning pkg-config file. Remove empty lightning m4 directory Remove some more of the lightning build machinery Further lightning integration work Remove disassembler support from lightning Refactor deps for built libpath.h Remove special cflags for obsolete Lightning targets Always enable assertions in embedded lightning Remove lightning configure snippet related to libdl Remove unused configure-time checks for x87, thumb, and sof float Remove unused AM_CONDITIONAL statements from lightning configure Add GUILE_ENABLE_JIT macro Wire JIT availability check into Guile configure Wire up lightning into libguile build Remove -Wswitch-enum from compile flags Fix compile warnings in jit_print.c Minor change to VM DSL Fix bad opcode in VM Begin structure for template JIT compiler Fix errors introduced when giving multiple-values objects a tc7 Make JIT compiler skeleton more terse Add support for reading ELF symbol table from C Prepare for frames having separate virtual and machine return addrs Reserve frame word for machine return address Rework VM approach to shuffling unknown numbers of args Fix stale stack frame clearing for frame size change Multiple-value returns now start from slot 0, not slot 1 Update frames.h comments. Add instrument-call, instrument-loop VM instructions Emit instrument-loop in loops. Emit instrument-entry before programs Fix function bound offsets of JIT data to be signed Rewrite subr implementation Revert "Add support for reading ELF symbol table from C" Fix bugs with primitive code allocator; expose internally Minor updates for Scheme runtime (statprof, backtraces) Alloc foreign procedures using primitive mechanism Add instrument-entry to continuations Consolidate apply hook to instrument-entry instruction Remove push continuation hook; return hook runs before FP pop VM hooks take no values Update NEWS for 2.2.3 Add missing include to adapt to recent merge from master Minor optimization in RESET_FRAME Rework program->ip mapping in VM to always call intrinsic Change call/cc inst to capture-continuation Add unpack-values-object intrinsic Invoke VM hooks through intrinsics Rework foreign-call trampoline Continuations capture machine code address Adapt JIT calling convention; continuations take mra from stack Update error-wrong-num-args intrinsic prototype Avoid needless 64-bit args on 32-bit machines for some intrinsics 64-bit intrinsic args and return values passed indirectly on 32-bit Define intrinsics for atomic ops Add instrumentation to VM builtins Add internal function mapping subr index to function Expose scm_vm_builtin_ref internally First implementation of a template JIT Manual JIT interface via %jit-compile Fix default code allocator in Lightning Fix bounds on compiler-emitted JIT metadata JIT compilation tweaks Fix frame popping in JIT Tweak to instrument-entry Add out-of-line handle-interrupts trampoline stub Add support for labels, and fix a bug in uadd/imm and usub/imm. Comments in the JIT Optimizations to subr-call Fix in-tree builds Fix load width of get-ip-relative-addr Minor refactors to jit.c 32-bit fix for emit_run_hook Fix r12 register spec for lightning with sysv x86-64 ABI Clear frame size after subr-call, return-values Fix bug in compile-alloc-frame Fix fp-ref, fp-set! helpers in jit for signedness Fix JIT compilation of bind-rest Fix again the unknown-filling of alloc-frame JIT refactor Fuse comparisons and branches in JIT Minor JIT refactor Bug-fix for alloc-frame and stack moving JIT: Store FP in register during procedure prolog/epilog JIT tracks register clobbers Maybe enter JIT when returning from interpreted functions Add fast paths to intrinsics Fix miscompilation for "abort" opcode Fix JIT compilation of call-with-prompt Fix JIT compilation of shuffle-down Fix jit function data for goto_continuation_code Fix JIT compilation of composable continuations Fix bind-kwargs JIT compilation Minor optimization in compile_alloc_frame JIT threshold controlled by environment variable More JIT debugging Fix compilation of compile_eq Minor 32-bit untag-fixnum optimization Add ability to stop JIT after N compilations. Prevent Lightning from stompling our registers Add configurable JIT logging levels JIT counter tweaks Add ability to tier up from within loops Fix assertion error running compile-file with threshold 0 Fix a memory leak in JIT Improve compute_mcode allocation logic Fix nonlocal abort to compiled continuation Improve JIT cleanup a bit Fix JIT compilation of [positional-]arguments<=? Add JIT fast paths for inum arithmetic Revert "<?" fast path for now Use custom JIT code allocator Fix compilation of handle-interrupts Refactor handling of lightning state Fix compilation of compare-and-swap Fix positional-arguments<=? compilation Fix JIT compilation of intrinsics that return doubles VM manages hook sets itself Remove hook intrinsics: hooks are just for the VM Micro-optimization of scm_vm placement in scm_thread Hook refactors Deoptimize to VM when hooks are enabled Fix scm_make_foreign_object_n. Fix emergency aborts to not expand the stack Turn on automatic JIT compilation by default Fix --disable-jit compilation Renumber instructions and bump objcode version Configure uses 2.3.x tags for version Fix case where running abort hook could trash registers Update comments in vm-engine.c Update history.texi. Update Conservative GC section of manual Update data representation chapter in the manual Update "A Virtual Machine for Guile" Update "Why a VM?" Update "VM Concepts" Update "Stack Layout" Update "Variables and the VM" Finish updating vm.texi Rename $closure to $const-fun Update compiler.texi Fix f32-set! JIT compilation Add manual section on JIT compiler Minor additional manual updates Update NEWS Fix use of uninstalled header by installed headers Comment out some unused definitions Remove unimplemented decl in script.h Deprecate scm_find_executable Fix GCC warning with %char-set-dump. Remove jit_names.c. Revert "Remove jit_names.c." Fix lightning build with jit_names.c Fix unused local warning in vm-engine.c Fix -Wunused-function error for x86 not on sun Fix guile-config for Guile 3.0 Fix linker bug that could fail to find the shstrtab Fix JIT compilation on 32-bit targets Fix JIT register state tracking for use of SP or FP as temp Better ursh/ulsh/srsh JIT on 32-bit platforms Fix JIT of 64-bit comparisons on 32-bit architectures Only enable JIT by default on x86-64 Bump prerelease version numbering to 2.9.x Fix GUILE_ENABLE_JIT after latest change GNU Guile 2.9.1 Update version.texi Update .gitignore Strip "get-jit-size" feature from lightning. Remove example .c files from documentation Inline body.texi and version.texi into lightning.texi Move lightning.texi up to root, and remove Makefile.am Archive lightning ChangeLog Remove TODO Remove bits of .gitignore no longer needed Remove autotools Rename include to jit.h, move all files to jit/ Rename lightning.c to jit.c Remove -sz.c files Simplify file names Remove unneeded bits of lightning Create beginning of stripped-down lightning interface Replace jit_int32_t, etc with stdint types Add endian.h Update call/receive machinery Trim unneded bits from jit.c "extern"-related cleanup, and further implementation Finish conversion to stdint types Update gitignore Really finish stdint conversion Remove needless PUBLIC/HIDDEN definitions Inline private.h into jit.c Make _rvs array static-const Beginnings of port of x86 to new design Fix crypt-on-glibc test error Fix linker.test Fix race when expanding syntax-parameterize and define-syntax-parameter Implementation of new design Add "addi" test Better loading of args to registers; add tests Convert tests to jit_load_args Flesh out README Add note about current status Add new tests Add more tests Tests for some div operations Add more div tests Add remr tests Add bitops tests Add lsh/rsh tests Add comr/negr tests Rework naming of test suite files Add mov_addr test Add extr tests Add bswap tests, and fix missing breaks in jit_load_args Add ldr tests Add ldi tests Add ldxr tests Add ldxi tests Add str tests Add sti tests Add stxr tests Add stxi tests Add .gitlab-ci.yml Tweak test build to run faster, and adapt CI Fix stxi_d bug Add bltr test Add more integer reg/reg branch-and-compare tests Add floating-point reg/reg compare-and-branch tests Add int/int reg/imm compare-and-branch tests Add anti-float comparison tests Add unordered float compare-and-branch tests Add flag-checking test-and-branch tests Add add-and-branch-on-overflow tests Add sub-and-branch-on-overflow tests Add some nop and jmp tests, and fix a hazard with jmpi/calli Add push/pop test Add abs/sqrt tests Add truncr_[df]_[li] tests Add float/double cast inst tests Add int->float tests Add movi_[df] tests Remove old tests get_temp_{gpr,xpr} returns a jit_{gpr,fpr}_t Implement arg shuffling for jit_call{i,r} Provide some type safety for jit_gpr_t and jit_fpr_t Clean up stack after calls Add subdir-objects option to libguile makefile. Change headers and files to be named "lightening" instead of "jit" Adapt to lightning -> lightening name change Allow users to pass custom allocators Fix jit_reset to be useful Checkpoint for lightning to lightening conversion Add jit_same_{gprs,fprs} helpers Remove -Wdeclaration-after-statement Fix jit.c compilation jit: Fix inter-instruction relocs. Fix implementation of jit_{gpr,fpr}_is_callee_save Fix reloc for jmpi and calli Fix jit_gpr_is_callee_save usage Fix JIT bugs Add assert for jit_address Fix some aspects of instruction mcode addresses Support immediate arguments More various JIT fixen Minor JIT cleanups JIT fixes for arena overflow Fix arena expansion logic Fix compilation of call-scm<-u64 Support spilling args to stack Allow test suite to test multiple targets. Add support for "make test-ia32" in tests/ Fix lightening name Simplify API for loading call arguments Add proper parallel-moves solver Add support for operand addends Adapt to new lightening call API Fix a JIT bug Fix apply_addend bug Simplify register representation Renumber x86 registers Align stack on 64-bit targets for calls Re-enable fixnum less-than JIT fast-path Lower default JIT threshold as JIT is cheaper now Simplify register representation again Simplify register representation even more Adapt to changes in upstream lightening Move jit_move_operands etc to common lightening.c file Track frame size to more reliably align stack before calls Make jit_align_stack and jit_shrink_stack public Fix backtraces with call-with-values during bootstrap Remove unused jit_epilog definition Implement reloc shortening, and remove unused functionality Ensure stack alignment in JIT code. Inline some internal definitions into backend-specific files Account for saved return address when locating args Fix lightening to compile on 32-bit x86 Use jit_word_t for register-sized values instead of intmax_t Fix compile warnings for 32-bit tests Fix 32-bit movi_d Make jit_cpu private Simplify 64/32 concerns in x86-cpu.c Remove most __X64_32 code Add facility to enter and leave JIT ABI Small bug fixes for ia32 Fix jit_leave_jit_abi to pop correct registers Fix ABI of arg to extr_d_f test Add {enter,leave}_jit_abi calls in tests Add test for JIT callee with many args Mark test files as precious to prevent them from being deleted by make Add x86-32 tests to default test target Stack alignment takes saved return address into account Align stack before entering JIT code Adapt to lightening changes Enable JIT on 32-bit x86 Fix errors in 32-bit JIT support Unget temp xpr after mem->mem addend fixup Fix byte stores on x86-32 Fix unneeded stack alignment. Fix u64-ref JIT on 32-bit Stack alignment is 16 even on x86-32 Attempt to pop x87 stack Remove ia64 (itanium) support Remove alpha support Remove hppa support Remove Sparc support Fix eta-reduction of prompts Refactor to move temp register acquire to core Refactor some bits from x86 to lightening First pass at aarch64 assembler port Refactor to add support for constant tables, shifted relocs Rework register saving to avoid push/pop Allow a backend to have multiple temporary registers Fix GPR temporary selection Fix compilation on aarch64 Fix enter/leave JIT ABI Fix a couple bugs related to aarch64 literal pools Aarch64 backend avoids needless temporary register allocation Remove jit_nop Add support for aarch64 in CI Fix dpkg --add-architecture invocation Fix YAML for CI Attempt to fix CI on Debian Attempt to fix CI on Debian Attempt to fix CI on Debian Attempt to fix CI on Debian Attempt to fix CI on Debian Attempt to fix CI on Debian for AArch64 Update README and guix invocations in test suite Remove software floating-point ARMv7 support; ARMv7 test env Remove unused jit_{gpr,fpr}_is_callee_save Beginnings of ARMv7 backend Port of arm-cpu.c to current lightening Beginnings of VFP port to lightening ARMv7 backend compiling without warnings ARMv7 backend passing all tests! Add ARMv7 testing to CI Attempt to get CI working on ARMv7 Fix CI on ARMv7 Update README Fix bounds checking on negative ldr offsets for aarch64 Avoid using x18 on AArch64 Clear missing bit from literal pool Clear literal pool more thoroughly Fix allocator passed to lightening Fix typo in previous commit, doh Allow jit_end to fail Expose API to bless function pointers Bless enter_mcode as a function pointer Fix literal pool emission on armv7 Various fixes for as-needed emission of literal pool AArch64 fix Avoid recursive pool emit for aarch64; add another overflow check Allow add_pending_literal to return false Enable JIT on aarch64 and armv7 Silence "unused" warnings Mark a couple functions as maybe-unused. Update NEWS Add includable automake file Reference Lightening instead of GNU Lightning Bump version to 2.9.2 Switch to use atomic_compare_exchange_strong Correctly handle overflow when emitting literal pools Add atomic operations Use new atomic instructions from lightening Inline the atomic intrinsics Fix atomics usage in handle-interrupts JIT. Fix accidental change to ARMv7 ldr Add breakpoint instruction Revert "Fix atomics usage in handle-interrupts JIT." Revert "Inline the atomic intrinsics" Reapply atomics inlining Dynamically assert functions start with instrument-entry Remove check for instrument-entry Avoid saving IP for <? fast-path Add bind-optionals instruction Allow for bind-optionals without alloc-frame VM does not initialize stack frames Add compiler support for eliding closure bindings Add support no closure in $callk Enable closure elision. Fix RTL tests for recent arity change Fix intmap-intersect edge case jit: Direct tail calls assert that target can have mcode Speed up returns in JIT Add jmpi_with_link instruction push/pop of link register does not affect stack size on x86 Use call/return instructions for non-tail calls Fix compilation on GCC 5.5 Rearrange scm_thread for better locality Inline freelist vectors into scm_thread Add an inlined jit fast-path for allocate-words/immediate Update NEWS for 2.9.3 Revert scm_c_make_char rename Fix calls to handle-interrupts trampoline on ARMv7 Fix some compiler warnings on 64-bit builds GNU Guile 2.9.3 (alpha). Add support for optimized unboxed abs and sqrt Split graph utilities out of (language cps utils) Implement "Fixing Letrec (reloaded)" Run fix-letrec before peval Update NEWS. Update peval tests for fix-letrec Refactor `format' to use when/unless conventionally More format refactors More format refactors More format refactorings. Fix bug in which codegen accessed data beyond end of stack Add "mod" field to tree-il toplevel ref, set, define Simplify the define-primitive-expander macro Add primitive support for working with module variables Add letrectify tree-il pass Add notion of declarative modules Enable letrectification Skip tests that don't work under letrectification Fix coverage test for top-level binding optimization Define missing shuffling assembler for string-set! et al Disable some JIT compilation code when JIT configured out Fix the jitless fix Unbox floor/ceiling and trigonometric functions where possible Revert "Revert scm_c_make_char rename" Letrectify only on -O2; update docs Allow mixed local definitions and expressions Update documentation for mixed definitions and expressions Further NEWS tweaks Fix fatan2 intrinsic initialization Fix out-of-memory test for top-level inlining GNU Guile 2.9.4 (alpha). Compiler allocates boxed flonums in unmarked space Fix bug in CSE auxiliary definitions Emit warning when using "load" in declarative modules At optimization level -O3, seal declarative module-private bindings Optimize fixnum or s64 -> f64 conversions Use "G_" as the conventional alias for gettext Define top-level bindings for aux syntax: else, =>, _, ... Add documentation for else, =>, _, ... aux syntax Update NEWS for 2.9.5 New function: install-r6rs! Add --r6rs command-line option Add --r6rs NEWS Better R6RS compatibility Fix doc syntax error Adapt ftw.test for pending test-suite changes Remove "vm" tests Avoid mutating arguments to resolve-interface (ice-9 null) also re-exports core aux syntax Deprecate passing a non-zero size to make-module (ice-9 null) also exports aux syntax, syntax-rules (ice-9 safe-r5rs) fixes for bound aux syntax Extend `import' to allow R7RS-style srfi references Refactor PEG records Remove (ice-9 channel) Re-implement (ice-9 gap-buffer) records in terms of srfi-9 Deprecate two-arg `record-constructor' Fix deprecated 1-arg `make-module' in tests Allow records to be subtyped Record accessors respect subtyping SRFI-9 uses make-record-type make-record-type does more validation on the fields Rebase srfi-35 conditions on top of make-record-type Fix one remaining use of make-record-type with string type name Change record type "flags" field to "properties" Guile `make-record-type' supports non-generative definition Rename final? record type flag; add support for opaque? Add support for immutable fields in core records Add record-type-parent definition. Rebase R6RS records on top of core records Remove circularity in r6rs by rebasing conditions on core records Add `record-type-has-parent?'. Add (ice-9 exceptions) module Rebase SRFI-35 on top of (ice-9 exceptions) Move adapter between "throw" and "raise" exceptions into core Move false-if-exception down in boot-9 Move exception-handling routines after records in boot-9 Move the core of exception objects into core Move exceptions with key and args to core Remove boot "catch" definition. Rebase throw/catch on top of raise-exception/with-exception-handler Update documentation for with-exception-handler et al SRFI-18 uses core exceptions Update NEWS for records and exceptions work Allow equality between arrays of vu8 and u8 Add initial implementation of R7RS modules Add install-r7rs!, like install-r6rs! Add r7rs test Add expected failure for R7RS test due to https://bugs.gnu.org/38235 Add R7RS XFAILs due to https://bugs.gnu.org/38236 (datum labels) Add R7RS xfails due to https://bugs.gnu.org/38237 (i/o exn types) Add R7RS xfails due to Guile's ( . 42) syntax extension Add R7RS xfails due to a restriction in hungry-eol-escapes (#38239) Add R7RS documentation and --r7rs command-line option Add NEWS for R7RS Install exception converters and printers from boot-9 Fix texinfo in r7rs.texi GNU Guile 2.9.5. Fix stack overflow if printing a pre-boot error throws an error Fix port-position documentation Fix range inference for right-shifts Fix frame-call-representation for callees without closures Fix range inference on division in unreachable code Associate #:replace info with modules, not variables Add guile-3, r6rs, r7rs cond-expand features Add --r6rs and --r7rs options to "guild compile" Propagate replacement flag for autoload interfaces Allocations and raw mutating operations restrict to mutable types Effects analysis treats the fixed parts of objects specially Update NEWS for Guile 2.9.6 GNU Guile 2.9.6 (beta) Fix resolve-r6rs-interface to propagate replacement flags Fix JIT tier-up from within loops for already-JIT-compiled functions Allow for inexact integers in quo, rem, and so on Reduce quo, rem, mod for power-of-two divisors Remove vm->sp_min_since_gc Add infrastructure for out-of-line JIT compilation of slow paths Move add/immediate, sub/immediate slow paths out of line Move add, sub slow paths out of line Move handle-interrupts slow path out of line Move receive slow path out of line Move receive-values slow path out of line Move assert-nargs-ee slow path out of line Move assert-nargs-ge slow path out of line Move alloc-frame slow path out of line Add subr-call out-of-line slow path Add out-of-line slow path for compose-continuation Add out-of-line slow path for abort Move assert-nargs-le slow path out of line Move allocate-words/immediate slow path out of line Move allocate-pointerless-words/immediate slow path out of line Add fixnum fast-path for = Move less? slow path out of line Document JIT environment variables Update NEWS Avoid throwing exceptions during early boot if stdin is closed GNU Guile 2.9.7. Fix abort_to_prompt bug if dynwind leave thunk expands the stack Update NEWS GNU Guile 2.9.8 (beta). Update compiler.texi and history.texi Mention WebAssembly in status section Fix mips32r6 bug Re-implement `guard' Update NEWS with details on guard and autoloads. Fix build on 32-bit systems with JIT support Fix bug in closure conversion Add NEWS entries Support R7RS define-library Fix peval bug that ignored excess args Optionally allow duplicate field names in core records Fix typos in previous commit. Update NEWS Bump objcode minor version in preparation for new stable series Bump user-visible copyright years to 2020 GNU Guile 2.9.9 (beta). Bump manual year, and fix NEWS typo Update NEWS Mention Mark Weaver in Guile history section Wording tweak to history.texi Update REPL copyright year to 2020 Declarative variables optimization limits eta-expansion Add eta-expansion pass after peval Disable eta-expansion in letrectification Update release.org Prepare 3.0 versioning Fix version computation for v3.0 Fold (logior 0 INT) to INT Add type checkers for lsh/immediate and rsh/immediate Ensure 32 bytes of stack are reserved on 64-bit Windows targets Switch CI to use Debian stable Better debugging in jit.c Fix bug restoring a JIT continuation from the interpreter Add support for perf map creation GUILE_PKG finds guile-3.0 Fix fixpoint computation in compute-significant-bits Deprecate bitvector-ref on array slices Replace bit-count with bitvector-count Replace bit-position with bitvector-position Replace bit-set*! with bitvector-set-bits! / bitvector-clear-bits! bitvector-bit-set? / bitvector-bit-clear? replace bitvector-ref bitvector-set-bit! / bitvector-clear-bit! replace bitvector-set! bitvector-set-all-bits! / bitvector-clear-all-bits! replace bitvector-fill! bitvector-flip-all-bits! replaces bit-invert! bitvector-count-bits replaces bit-count* Deprecate useless C bitvector interface Prefer C-like interfaces for scm_c_bitvector_{set,clear}_bits_x Deprecate scm_bitvector, scm_make_bitvector, scm_bitvector_p Remove unused analyze-lexicals function Add intrinsics for a baseline compiler Ensure <prompt> handler is values handler Remove unused (language tree-il canonicalize) Export emit-shuffle-down for baseline compiler Add baseline compiler Debugging names in baseline compiler; emit/immediate? fixes Avoid shuffle-down for tail calls Fix baseline compilation of conditionals Fix baseline compilation of let-values and prompt Fix prompt compilation Update (system base compile) header Remove compilation order cache Slight (system base compile) refactor Use more `match' in (system base compile) Rework compile-fold Add #:optimization-level, #:warning-level compile keyword args Add language-specific analysis pass to compiler infrastructure Wire up simplified warning levels in "guild compile" Warning and optimization levels always small integers Define new "lowering" phase in compiler Sketch of how to choose different compiler based on -O0 Add compiler chooser implementation; fix bugs with previous commit Wire up the baseline compiler to -O0 Fix parens in .dir-locals.el Fix baseline compiler bugs Rename "lookup" intrinsic to "module-variable" Add new lookup, lookup-bound intrinsics Top-level lookups raise exceptions in run-time Use lookup, lookup-bound in baseline compiler Fix kw initializer bug in baseline compiler Fix compilation of prompt in tail context Fix baseline canonicalization of reifying prompts Test suite compile-and-eval tests run -O0 and -O2 Fix "fail" helper in guild compile Declare #:cps? as an available optimization Fix free var computation in baseline compiler for lexical set! guilec can be parameterized by GUILE_OPTIMIZATIONS, defaults to -O2 Fix baseline miscompilation of < Fix baseline compilation error for make-struct/simple Baseline compiler: add pop-fluid primitive. Fix "cons" compilation in baseline compiler in some cases Fix JIT asserts with different code generated by baseline Fix module capture for closures in <fix> Reload FP if needed in bind-rest also Improve tail recursion in compiler Fix shuffling assembler for new primcalls Switch to baseline compiler for bootstrap/ Avoid having "guild compile" load optimizers Emit handle-interrupts in baseline compiler Slight tweaks to bootstrap order Baseline O(1) access to frame-base env Baseline compiler emits source locations Baseline FIXME's are done :) Delay loading CPS unless CPS compiler used Punt CPS compiler to end of bootstrap Whoops, fix bug in tree-il choose-compiler Clean up NEWS for bitvectors. Update documentation on <language> Update NEWS for baseline compiler Slight optimization to baseline compiler Punt more CPS compiler until later in bootstrap Fix optimizers after language lowerer refactor Minor module/Makefile order tweak Bump objcode minor version Another minor module compile order tweak Add with-lexicals helper; fix bug in (equal? #t (foo) #t) More robust reduction of equal? and eqv? Fix ,optimize to be independent of tree-il Tree-IL lowerer only loads needed optimizations Update match's no-matching-pattern code to use "throw" Fix truthy expression analysis in CSE Slight optimization to invert-bijectiono Renumber before CSE Refactor CSE to take advantage of RPO numbering Refactor CSE to analyze and transform in a single pass CSE eliminates expressions at continuations Thread flow analysis through CSE pass Macro fix to CPS build-term Add indentation rule for let/ec Eager graph pruning in CSE Use intmaps in CSE equivalent expression table CSE refactor CSE forwards branch predecessors where the branch folds CSE forward-propagates changes to CFG Fix typo causing performance problems!!! Fix bug where private bindings would never be sealed Change -O1 compiler to use baseline and also resolve primitives Statprof reports primitive names Make CSE more robust Fix undefined behavior in ARMv7 assembler Fix zeroing of literal pool entries Fix unused variable warning for no-literal-pool targets Add jtable instruction Fix patch_veneer on aarch64 Ensure tail caller and callee in jmpi test have compatible ABI Add support for emitting inline data and table switches Add JIT implementation for jtable Allow jit_begin_data to declare max data size Literal pools have word-alignment, not u64-alignment Update use of jit_begin_data API Spill whole words to stack, even for uint8_t args Improve code generation for eq? on immediates Add sign-extending make-immediate instruction Add eq-immediate? instruction Rework the way immediate encodings are calculated. Baseline compiler emits eq-immediate? as appropriate CPS compiler reduces eq? on constant to eq-constant? Fix JIT compilation for jtable Fold eqv? to eq? on exact integers according to target fixnum range Add $switch CPS term kind Add new pass to optimize branch chains to table dispatch CSE computes online map of constant values, uses it to fold branches Bump objcode minor version to 4 Bump DEFAULT_INITIAL_HEAP_SIZE Tweak to initial heap size selection Clean up srcprops implementation Update NEWS Move copy-tree to (ice-9 copy-tree); deprecate main binding Fix source location bug for neoteric exprs introduced by refactoring New warnings: -Wuse-before-definition, -Wnon-idempotent-definition Fix jmp-shortening on x64 when target within instruction. Update NEWS Bump version to 3.0.5 Bump copyright years for user-visible copyright messages Close accumulating output ports after use Add call-with-input-bytevector, call-with-output-bytevector Finish call-with-port cleanup Document call-with-port Document new interfaces Update Gnulib to v0.1-4379-g2ef5a9b4b Update environ_locale_charset gnulib patch Replace stftime gnulib module with nstrftime Replace libltdl with raw dlopen, dlsym Optimize eof-object? Add "read" implementation in Scheme Fix (ice-9 read) for #!r6rs Fix (ice-9 read) for #\" Re-use string output port within read Micro-optimization to delimiter? More read micro-optimizations Scheme read respects "positions" reader option Improve read error reporting Fix read.scm bugs related to nonstandard reader options Use lists instead of string ports to accumulate results Syntax objects have "source" field psyntax preserves source via syntax objects Adapt uses of make-syntax to preserve syntax Document datum->syntax extensions Implement read-syntax Add quote-syntax Remove top-marked? optimization from psyntax Fix module scoping for datum->syntax with no identifier Ensure that (syntax ()) results in () Fix read-syntax on vectors and arrays Read Scheme via read-syntax Commit updates from newest autoconf Optimize run-time init and relocation procedure Add syntax-sourcev Assembler writes vector source properties Psyntax uses sourcev internally read-syntax uses vector source representation Shunt syntax-sourcev to (system syntax internal) Fix Scheme read without source positions Update NEWS Fix bug reading arrays with lengths Remove textual-ports include from (ice-9 read) Invalid charset at EOF does not cause decoding error Fix reader extensions in Scheme reader Fix reading neoteric exprs in Scheme reader Fix unterminated #!...!# error message in Scheme reader Relax srfi-105 source expectations Read-in-scheme replaces boot "read" definition Scheme reader fully replaces C reader primitive-read handles only default reader options More read.c simplifications Remove read extension support from primitive-read Fix length of \U hex escape in new reader Fix some srfi-105 parsing errors Fix reading #c32 vectors Fix reading improper curly-infix expressions Syntax objects print with source locations Update documentation to incorporate read-syntax Update reference for GUILE_EXTENSIONS_PATH Fix reading of #true / #false Fix up source properties section in manual Fix reading "#;", "'", and similar premature-EOF situations Fix reading #!!# More informative error message if GMP not found Don't expose mini-gmp to users Only install libgc as GMP allocator with mini-gmp Update NEWS for --enable-mini-gmp Update NEWS Document quote-syntax Document syntax-sourcev Add mkstemp; undocument mkstemp! Revert "Handle CRLF and Unicode line endings in read-line" Don't force installation of GMP allocators in guile shell Fix buffer overread in string-locale-ci=? and related functions Adapt test for string-locale-ci=? Fix buffer overread in string-locale<? Fix recent i18n tests Update NEWS Optimize letrec* binding order in fix-letrec Mark some elisp runtime modules as non-declarative Allow $kargs as entry of $kfun New pass: elide-arity-checks Fix comments in cps/compile-bytecode Fix bugs introduced when allowing $kfun -> $kargs Fix cached-module-box cache keys Simplify module variable lookup slow-path Fix error when argument to < not a real Fix CPS optimizations to allow callk in front half CPS conversion calls module variables through trampolines Allow contification for $callk Bump minor objcode version for new intrinsics Allow users to force gmp to use libgc Fix closure-conversion bug for SCC with all free vars pruned Add GUILE_INSTALL_GMP_MEMORY_FUNCTIONS to NEWS; use at build-time Update NEWS Add ice-9/read.scm to extra_dist Bump GUILE-VERSION Fix duplicates handlers for interfaces that use interfaces Fix line and column for read errors Fix compile-psyntax.scm -- canonicalize pass not needed Fix syntax-violation, which was passing vectors instead of alists Fix syntax test Fix bug for read-syntax on ( . args) Fix tree-il effects analysis for prompts Fix bug if call-with-prompt tag not a lexical Fix R7RS include-library-declarations and cond-expand in define-library Include config.h in mini-gmp.c, if present Optimize truncate-bits Minor tweak to truncate-bits Update NEWS Update NEWS Bump version to 3.0.7 Bump objcode version Letrectify links module defs with uses Add pass to resolve free toplevel references in declarative modules Add support for recording inlinable module exports Implement cross-module inlining Fix bug in eq-constant? propagation in CSE if kf == kt Hotfix to unify (x ...) patterns in match Add frame-local-ref / frame-local-set! support for type 'ptr Move live variable computation routines to utils and graphs. Allow unchecked functions to have unboxed arguments Add CPS pretty-printer Add ,optimize-cps REPL meta-command Allow primcalls with multiple defs Use more logtest in cse.scm Add primitive alias analysis to CSE Refactor compile-bytecode Refactor send and receive shuffles in slot allocation Allow callk to continue to kargs Add new pass to optimize away return value count checks Add -Ooptimize-known-return-types at -O2 Fix type confusion in heap-numbers-equal? calls from VM -Oresolve-free-vars pass gracefully handles failed autoloads. Avoid quadratic behavior in id-var-name Add new integers.[ch] Implement odd? and even? with new integer lib Implement abs with new integer lib Implement floor-quotient with new integer lib Implement floor-remainder with new integer lib Implement floor-divide with new integer lib Implement ceiling-quotient with new integer lib Implement ceiling-remainder with new integer lib Implement ceiling-divide with new integer lib Implement truncate-quotient with new integer lib Implement truncate-remainder with new integer lib Implement truncate-divide with new integer lib Implement centered-quotient with new integer lib Implement centered-remainder with new integer lib Implement centered-divide with new integer lib Implement round-quotient with new integer lib Implement round-remainder with new integer lib Implement round-divide with new integer lib Implement gcd with new integer lib Implement lcm with new integer lib Implement scm_logand with new integer library Implement scm_logior with new integer library Implement scm_logxor with new integer library Implement scm_logtest with new integer library Implement scm_logbit_p with new integer library Implement scm_lognot with new integer library Implement scm_modulo_expt with new integer library Reimplement integer-expt in Scheme Implement scm_ash with new integer library Implement scm_bit_extract with new integer library Implement scm_logcount with new integer library Integer library takes bignums via opaque struct pointer Implement scm_integer_length with new integer library Implement integer-to-string with new integer library Simplify scm_bigprint Build scm_integer_p on scm_is_integer, not vice versa Reimplement = on integer lib, clean up scm_num_eq_p Clean up <, reimplement in terms of integer lib positive?, negative? use integer lib Simplify implementation of min, max Clean up scm_sum Simplify scm_difference, use integer lib Simplify scm_product, use integer lib Remove support for allowing exact numbers to be divided by zero Clean up scm_divide Fix deprecated bit-count* when counting 0 bits Fix scm_integer_to_double_z to always round; clean ups Reimplement scm_is_{un,}signed_integer for bignums Reimplement scm_from_int8 etc Reimplement scm_{to,from}_{int32,uint32} Reimplement scm_{to,from}_{int64,uint64} Implement scm_{to,from}_wchar inline Remove unused conv-{u,}integer.i.c scm_to_mpz uses integer lib Reimplement exact-integer-sqrt with integers.[ch] Refactor scm_sqrt in terms of integers.[ch] Expose frexp from integers lib Remove dead bignum frexp code from numbers.c divide2double refactor Simplify scm_exact_integer_quotient Remove last non-admin SCM_I_BIG_MPZ uses in numbers.c Simplify magnitude, angle Use scm_integer_to_double_z in numbers.c instead of big2dbl Avoid scm_i_mkbig outside numbers.c. Start porting srfi-60 off the bad bignum interfaces Finish srfi-60 port off old scm mpz API scm_to_ipv6 uses scm_to_mpz Bignums avoid both custom GMP allocator and finalizers take_mpz optimization Fix bug when making mpz from 0 Re-rewrite integer-expt in C Optimize scm_integer_mul_zi Optimize scm_integer_mul_zz. Less pessimal scm_integer_sub_zi Start to optimize scm_integer_sub_iz Avoid bignum clone in scm_integer_sub_zz Optimize bignum add to avoid temporary allocations Optimize bignum subtraction Optimize scm_integer_mul_ii Optimize integer-expt for fixnums Optimize logand against a positive inum Remove dead code in scm_integer_inexact_sqrt_z Fix inlinable-exports bug for pure modules peval cross-module-inlining gracefully handles missing interface Add -ftlo support Rework bootstrap to be reproducible Fix reproducibility for inlinable-exports Prebuild fewer files Avoid source properties in psyntax Slight bignum-fixnum multiplication optimization Update NEWS NEWS fixup Update unicode tables to Unicode 14.0.0; initial charsets immutable Minor NEWS tweaks GNU Guile v3.0.8 Exclude ChangeLog from assert-no-store-file-names distcheck rule Arun Isaac (9): Fix minor typo in the PEG documentation. doc: Document (ice-9 match) macros. web: Export http-request. doc: Replace square brackets with round brackets. doc: Fix minor typo in the HTTP headers documentation. doc: Improve content-range HTTP header documentation. doc: Document default delimiter of string-join. doc: Mention (ice-9 time) module path. Fix typos in SRFI docs Asher Gordon (1): Replace a line which was accidentally removed. Chris Marusich (1): Clarify the manual's "Processes" section. Christopher Allan Webber (1): Add SRFI 71: Extended LET-syntax for multiple values. Christopher Baines (1): http: Support CONNECT and PATCH HTTP methods. Dale P. Smith (1): Add 'movi' test. Daniel Llorens (52): Remove scm_generalized_vector_get_handle Add $(builddir) to include path in libguile/Makefile.am Fix 32/64 b…

 

main

 

3.0.8-49

 

3.0.8-47

￼￼

phmccarty authored and clrpackages committed on Mar 22 

1 parent 13d127f commit d4fe5be359fef9e39a1a116ce2069fbd4c729c70

Show file tree

 

Hide file tree

Showing 20 changed files with 3,919 additions and 2,733 deletions.

SplitUnified

 18  0001-Add-Require-for-guile-on-bdw-gc.patch → ...Add-missing-requirements-to-pc-file.patch

@@ -1,22 +1,24 @@From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001From: Karthik Prabhu Vinod <karthik.prabhu.vinod@intel.com>From: Karthik Prabhu Vinod <karthik.prabhu.vinod@intel.com>Date: Fri, 8 Jan 2021 13:43:54 -0800Date: Fri, 8 Jan 2021 13:43:54 -0800Subject: [PATCH] Add Require for guile on bdw-gcSubject: [PATCH] Add missing requirements to pc file

Signed-off-by: Karthik Prabhu Vinod <karthik.prabhu.vinod@intel.com>Signed-off-by: Karthik Prabhu Vinod <karthik.prabhu.vinod@intel.com>Signed-off-by: Patrick McCarty <patrick.mccarty@intel.com>------ meta/guile-2.2.pc.in | 1 + meta/guile-3.0.pc.in | 2 ++ 1 file changed, 1 insertion(+) 1 file changed, 2 insertions(+)

diff --git a/meta/guile-2.2.pc.in b/meta/guile-2.2.pc.indiff --git a/meta/guile-3.0.pc.in b/meta/guile-3.0.pc.inindex c6d12b5..2e6e800 100644index c6d12b5..3a11e49 100644--- a/meta/guile-2.2.pc.in--- a/meta/guile-3.0.pc.in+++ b/meta/guile-2.2.pc.in+++ b/meta/guile-3.0.pc.in@@ -22,6 +22,7 @@ guile=${bindir}/@guile@@@ -22,6 +22,8 @@ guile=${bindir}/@guile@ Name: GNU Guile Name: GNU Guile Description: GNU's Ubiquitous Intelligent Language for Extension Description: GNU's Ubiquitous Intelligent Language for Extension Version: @GUILE_VERSION@ Version: @GUILE_VERSION@+Requires: bdw-gc+Requires: bdw-gc+Requires.private: gmp libffi Libs: -L${libdir} -lguile-@GUILE_EFFECTIVE_VERSION@ @BDW_GC_LIBS@ Libs: -L${libdir} -lguile-@GUILE_EFFECTIVE_VERSION@ @BDW_GC_LIBS@ Libs.private: @LIB_CLOCK_GETTIME@ @LIBGMP@ @LIBLTDL@ @LIBFFI_LIBS@	\ Libs.private: @LIB_CLOCK_GETTIME@ @LIBGMP@ @LIBLTDL@ @LIBFFI_LIBS@	\ @LIBUNISTRING@ @GUILE_LIBS@ @LIBICONV@ @LIBINTL@ @LIBSOCKET@		\ @LIBUNISTRING@ @GUILE_LIBS@ @LIBICONV@ @LIBINTL@ @LIBSOCKET@		\

 45  0002-Mark-test-out-of-memory-as-an-expected-failure-for-n.patch

@@ -0,0 +1,45 @@From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001From: Rob Browning <rlb@defaultvalue.org>Date: Tue, 20 Feb 2018 23:58:09 -0600Subject: [PATCH] Mark test-out-of-memory as an expected failure for now
Since this test has been failing for a long time on variousarchitectures, mark it as expected to fail for now so that we'll stillrun it and can see the results, but won't be blocked by it.
There are known issues with the test upstream, and at least in some pastcases it's been possible to reproduce the failure quickly by runningtest-suite/standalone/test-out-of-memory in a loop.
Bug: https://debbugs.gnu.org/29464Bug-Debian: https://bugs.debian.org/880148Bug-Debian: https://bugs.debian.org/966300Bug-Debian: https://bugs.debian.org/966301
[Patch from https://sources.debian.org/data/main/g/guile-3.0/3.0.7-1/debian/patches/0005-Mark-test-out-of-memory-as-an-expected-failure-for-n.patch]
Signed-off-by: Patrick McCarty <patrick.mccarty@intel.com>--- test-suite/standalone/Makefile.am | 3 ++- 1 file changed, 2 insertions(+), 1 deletion(-)
diff --git a/test-suite/standalone/Makefile.am b/test-suite/standalone/Makefile.amindex e87100c..66bb3a5 100644--- a/test-suite/standalone/Makefile.am+++ b/test-suite/standalone/Makefile.am@@ -24,6 +24,7 @@ include $(top_srcdir)/am/snarf
# initializations so we can use += below. TESTS =+XFAIL_TESTS = noinst_LTLIBRARIES = check_PROGRAMS = check_SCRIPTS =@@ -299,6 +300,6 @@ check_SCRIPTS += test-stack-overflow TESTS += test-stack-overflow
check_SCRIPTS += test-out-of-memory-TESTS += test-out-of-memory+XFAIL_TESTS += test-out-of-memory
EXTRA_DIST += ${check_SCRIPTS}

 24  0002-Revert-Fix-build-on-platforms-where-the-stack-grows-.patch

Load diff

This file was deleted.

 57  0003-Fix-fixpoint-computation-in-compute-significant-bits.patch

Load diff

This file was deleted.

 77  A8803732E4436885.pkey

@@ -0,0 +1,77 @@-----BEGIN PGP PUBLIC KEY BLOCK-----
mQINBFmLEIkBEAC7U27v6jysuSadTd8WK0lTnoK4TueYHey17+KWilOXrGx80R1QkjIPDfQaTX76F3CQ22EeIXEYBZ858WImkrkolhEvoeJHOXkgJnib2EA6d7oXINkOUIij5cH0GCoEuw+aU415OAHK/cv09WXeDVy7/cwfhPAUc5QmWQzOEwuaV0ERd1Mwq3yxhiXN5wOS77TXKYNTMiXp4NdXgYwJFqO0e/POKPrzWSVqeZClh+ecXenapZDdR120+qRtC/Kz9YwupJPz7FImAC4XOYqZXY3ILft8Y6nCj/iE8ArIsJGF+zfz0m4L7wJfcN1gZ2sjgzjX51USi7Y39ra2MemnbBrPG+6cR/aGvScd4V/CYoAJDB+WumhPclksxTS1s4PPVELwLvbF+3trwrkKyWMCEg2kTTUQxExYe9QavSPh9p3tKpi3SNnsK/hndxGKtTrH8OVe32r93Bt8w7IqYMxwEgr4wCAgF6RCZhks5PlXaLzrrAW80aakZU8wVCfZPQO0rZ1e2m+gLmG4rkw0kB4nkBF3I+oYM2WABGXGA7G6pDgszBQIbkQfFXaWWxtLvNKtlm458Mf+Dc6VaIcVY32Wkpeu3ev9WkeDOZIIPu6dKA1mLZexODBT9uXKMIqB1Gj2ysUGgPGBwzcf5XYqjGxuCgWmCfxv70dh/PInn7W3Le1x0QARAQABtBpBbmR5IFdpbmdvIDx3aW5nb0BnbnUub3JnPokCTgQTAQgAOBYhBE/U0ojURZNOChT5paiANzLkQ2iFBQJZixHUAhsDBQsJCAcDBRUKCQgLBRYCAwEAAh4BAheAAAoJEKiANzLkQ2iFuUwP/RZk5LYxQrheNa5a1zVuwzeBcxZj9aDube0IE5zWrv2lreuIVGUNOI+Q4EPEa/YKj0HaWQesoSH/XULou8p7hOMYa41Lut6lsUhkMJMowdAUmCVVCTxmtyvuWQ9OkhtwodbJjiVU6dA+KZnTGR66fB3/XX0ss381w0sS4pVGWkN3z6/8TGEei3lVe9V8rjRM0Ox/WHhdRrjtviRxDA21FCIFov0iEiX1YQUx55Xn4kbxlyvAst0ti0Pdo9oPBweWubWLlAfu2W0AbQsQosTpjnM21aUcxP31Z0Euyua9DCxT/rteLNM1qLBktH9NZeYNFWzZmF+RvxIj9oPY8frE4b1wSr97rx5742rgdZOKQY/v8ArAbGYcqJo7DBAFbC2ukIcoRqNrBaaIrBesy5N8jOx89lWy8u67RLbtuwZCGesovQiizLuTPVUNCbUMriobl5Fi9z+rYIdLbysb+cTPoF6sIgUBxdilfaFuuW3HWWh32sB982cCKaUhyoifgFJnojnff/jCnOOrMphIbMeY1Lbmh9qzW9UmC7JyZVTHFmh7pRsNWQWGi8FlhTCbSbIvr6uVcV3sd/1TEgclNkvz0tfrZOkYCm5rLiGWepJ0fFXnxgt92SqlUI34EwtAe4g7N3IK/fNpL01EbdrdG4c/nzAru/6Ic5MOlYYCXIxxXp70tBxBbmR5IFdpbmdvIDx3aW5nb0Bwb2JveC5jb20+iQJRBBMBCAA7AhsDBQsJCAcDBRUKCQgLBRYCAwEAAh4BAheAFiEET9TSiNRFk04KFPmlqIA3MuRDaIUFAlmLEf0CGQEACgkQqIA3MuRDaIUo7w//UQTnuOXmE0Z+w9prtcsq0myF6bipdsJulSwnbZzqnKI8rlgvKqJBHXhEHq2EC4hsgbnEb2wW61LeZvzyN6wi7HOH5z6/xNWZSUnmCM8ZH+eIKL+EQ/BgNDM0hkak8J2xZ/6/ZbbhwYF6FPNMg1PFQ/rHtOw9emjAUUUItrRDJYRMyA6HtRXn5kPKYzptkwGN5QVJMBjL9Ya5i6G+mDzxO8b1gLt08CYv/ZovNfJGy9I3+r7gC2k7/FKXnfUz3vmYKpNYoBL7OycPFWp36k8KH55hTbLZR68jbpFH+4iyTyuSWpNKiBg6pU0lvoFPyDFDPQUU3iA/T+GCj8UCB+zGeGic+NgVAMJgOni/nA4XtcrGf4QCMi16QP7QM5mZmZV9AxjdsdzKxhDt9M4FpPVyQqxayDUP5RCYimdItcTzAi8pop2t+B53NjFDddfgMPx4CfVgHBnqYiAXJ1PvYSGwRn6pp+64KSOKxKNuLJoxPF+2kOrY6Q9JTNpqG7beunRJQ3Nl9FItG26C/F79vQEQVcoU7Qu7efFcAdc+Bss75jUl4KS5TpvxxbplSrk8i/FsS2kGdSmniy1gKN+TAv+7wddDSaeL2/ptOKAmU8uJzwxW77gh5i6N5Sc6RmAlnMvohhbjEoDHNTOjN/MVnheXMS0MYWE4ahlBiTjqETckroq0HUFuZHkgV2luZ28gPHdpbmdvQGlnYWxpYS5jb20+iQJOBBMBCAA4FiEET9TSiNRFk04KFPmlqIA3MuRDaIUFAlmLEcgCGwMFCwkIBwMFFQoJCAsFFgIDAQACHgECF4AACgkQqIA3MuRDaIWZChAApzEgZZCKZjoOTExbTzx7UvmYoarU52Kuz1H/Ev4AEj3OrypHSXbt+O8NJUkgh8b8XQT9C0CoBhr8hwC3JOmyihKjqodSAS9BVJlpQ+4ulbu78HmqvABuuExsPGF8me5kRqjCn++1wSkQ2Ri4Lr3KUcT/lZRA9mI6qkyY4iTnXcpEFjfKwhIiGIPchy0GjcfogGz78TndlDJoJKtbLMaouQ33bdo01sJKCVWIQhag15hrL8rAQjxr7zz+4IIuHLwZewqUAsX9hqGPgmBZBfVHccPpVh9zfMaP1at9jXzVdys9YXJfHDzM680h7QvidLl10JvgEZkJbx4fGWdyG7R56FxOM9isrSdQ8kYPthybSXm9oK7XQOV9nmrWUKAOeokPI9eimgtRjemEdo5MiUH1Dkc0xeoqc5wE64OFrUAcASc0plU2ff6jsSNq7Q+Q4U9z3tdB8zTz+lCSQZOfgIk3baAAEUCE9v9DDXT20B3EC+zZuifPVmKRYIQxbA3Epx4Yh/IBc8kqIHHTW0NTMotKdzNZzC1o6putfmRvzHa48VU8JHoR3x6TmG65B2Agw9j7As5ve0UUSq7mpYqAMgg6jW4rzIsYZc//93liR6i25fsupFpDBPK3fip1H08LhljsFgdRnrPVz+b8MZpujAErqusLSNxxiDJBUBQTHNwZlO65Ag0EWYsQiQEQAMuqr/iDzidezZ6T520DDCUsx1sypvAYtmClrIdXMwpd37uGTbp++5Cf2NNgRJsyf3jhNsWuxoAPJhjrqsr6c8FlAapki4PUvBDtW4bQg6m3T08fSk5CLpk+oUXGH0zceDgwnz8mSRcKBBdpC4O69P8cp3L0DdrDikSNye6ZTwdMc+PSvZcs+c+7O2UZSeuxPvLRr3u5jahJGmXzySzTbwe/xzhGhQSetfYEFx/SbDZSZA7Det2WtR+prIDaX+CtGhFXrBqkKiXKqhpjTdN7vqaHx8wATdOJ5YACvkb1XsfHpjtOnna2DvuOln7iQNt9CwwiXmX6WvEAc21IpkcY53WQDXz6TFmtGyrQsCB0mawi7gAU1N4Zb+a5TGSD/aHLUpoHBe7pOy/c+wDJFRkK1scVS6gPxQwhy7IqzAxYWo3D7bQFurFTQVFfcRVQfZYIUIfm6MrHvygsyJ5rJCQ8rCUR4f7iGGM4LkPYQVRi2zUopql5uejZMoqvLRSB8IeP/ItDgsdXq9JHSyIlwatZNRqHDQzHqQ4n+GaNckfDQ1aK/2/zh7rpYOprOwqo1DvQIlg1RnbjiXPnv48aae3jpeV9BDRN1Nd2TzQsm6diA7MITnmYji1NAJMigOcpHEKVM0EPaNeMahjhoA1uJPn8T+eK0nzuqiD3Z2ICQ6SalKPZABEBAAGJAjYEGAEIACAWIQRP1NKI1EWTTgoU+aWogDcy5ENohQUCWYsQiQIbDAAKCRCogDcy5ENohf0tEAChNbqT1siyZmvBt7iRPXPWYHkBx4u0S9AIaCddocaKHLOQMO7D4gQLHANO4pmM5P8DZVApE9zpvigUMH5Lz67g+H2DEnHqCqE6lN8+d0fZ6SZk7sS+7ZOHNfB4TX021AHhcP9m16luTkr8PLwJJnFJNg8z1BGMygAZZKxAOSopeGuJXaDj6ASpd+A/n1JKYGO/Ctbt+jV2/dxH4LmAB44K6+F+T+vyEPaSJMdSBxKuy5N8ZzaWzRZ/gjVzbN8iN65cz9GVgeOEZVhNE3CyP67CHCWWdVDP2q/LL6F7DhfLOEd61zqLFkxUWnuwQSNu6v1YPvk+N1+V5F3FHMIUPPBYv8KEdhD0tp0NYQpu2dcOKLQQ8/KgGxBLADuOVeclejyMQbI8JqVp6G+sh2cw0AruOYXHw7zg+Bl1p0SVtlWTbURGt/5IvS/PI4wgH7KzKG7rk2/5dPr7AmkAkmJPFzN5wBWc67OZJxOIu2SE6CWC+iLsVCpgTczBtnthtqBHoinhcwaIVJ4vl+dAGNytu23oRBPmCTfWz+VigsLy7GTZkF3wAoKaL1Lle5wybSztHYrxFVO7RHNkoYYG3ZW6bSgq4LW5Mq9nL9eGlG3kidwCKXukbB2uLCS0pRYhDiUGaZS2kr5bNwyxOYb58GhACDWZtU9LXuxtkeZzlPlSmcRwqA===Su8m-----END PGP PUBLIC KEY BLOCK-----

 2  Makefile

@@ -1,5 +1,5 @@PKG_NAME := guilePKG_NAME := guileURL = https://mirrors.kernel.org/gnu/guile/guile-2.2.7.tar.xzURL = https://mirrors.kernel.org/gnu/guile/guile-3.0.8.tar.xzARCHIVES = ARCHIVES = 

include ../common/Makefile.commoninclude ../common/Makefile.common

 1,147  NEWS

Load diff

Large diffs are not rendered by default.

 2  buildreq_cache

@@ -1,3 +1,3 @@2.2.73.0.8glibc-localeglibc-localepkgconfig(bdw-gc)pkgconfig(bdw-gc)

 

 29  configure_misses

@@ -1,36 +1,27 @@Configure miss: CFLocaleCopyPreferredLanguagesConfigure miss: 32-bit host C ABIConfigure miss: DINFINITYConfigure miss: DINFINITYConfigure miss: DQNANConfigure miss: DQNANConfigure miss: __sincosConfigure miss: __sincosConfigure miss: __uc_get_ar_bsp in -lucaConfigure miss: __uc_get_ar_bsp in -lucaConfigure miss: chsizeConfigure miss: chsizeConfigure miss: direct.h presenceConfigure miss: compiler option needed when checking for declarationsConfigure miss: direct.h usabilityConfigure miss: crtdefs.hConfigure miss: gcc -std=gnu11 option to accept ISO C99Configure miss: gcc -std=gnu11 options needed to detect all undeclared functionsConfigure miss: gcc-objcopyConfigure miss: if gcc -std=gnu11 static flag -static worksConfigure miss: if gcc -std=gnu11 static flag -static worksConfigure miss: if gcc -std=gnu11 supports -fno-rtti -fno-exceptionsConfigure miss: if gcc -std=gnu11 supports -fno-rtti -fno-exceptionsConfigure miss: libc.hConfigure miss: libc.hConfigure miss: libc.h presenceConfigure miss: libc.h usabilityConfigure miss: machine/fpu.hConfigure miss: machine/fpu.hConfigure miss: machine/fpu.h presenceConfigure miss: machine/fpu.h usabilityConfigure miss: process.h presenceConfigure miss: process.h usabilityConfigure miss: pthread_attr_get_npConfigure miss: pthread_attr_get_npConfigure miss: pthread_get_stackaddr_npConfigure miss: pthread_get_stackaddr_npConfigure miss: pthread_np.hConfigure miss: pthread_np.hConfigure miss: pthread_np.h presenceConfigure miss: pthread_np.h usabilityConfigure miss: sched_getaffinity_npConfigure miss: sched_getaffinity_npConfigure miss: snprintf_lConfigure miss: struct GC_stack_base.reg_baseConfigure miss: struct sockaddr_in6.sin6_lenConfigure miss: struct sockaddr_in6.sin6_lenConfigure miss: sys/stdtypes.hConfigure miss: sys/stdtypes.hConfigure miss: sys/stdtypes.h presenceConfigure miss: sys/stdtypes.h usabilityConfigure miss: sys/sysctl.hConfigure miss: sys/sysctl.hConfigure miss: sys/sysmp.hConfigure miss: sys/sysmp.hConfigure miss: sys/utime.h presenceConfigure miss: sys/utime.h usabilityConfigure miss: sysctlConfigure miss: sysctlConfigure miss: sysmpConfigure miss: sysmpConfigure miss: timezone_tConfigure miss: timezone_t@@ -42,4 +33,8 @@ Configure miss: whether hstrerror is declaredConfigure miss: whether libc.h and unistd.h can be included togetherConfigure miss: whether libc.h and unistd.h can be included togetherConfigure miss: whether localtime caches TZConfigure miss: whether localtime caches TZConfigure miss: whether pow can be used without linking with libmConfigure miss: whether pow can be used without linking with libmConfigure miss: whether we need POSIX to get struct utimbufConfigure miss: whether the compiler is clangConfigure miss: whether the compiler produces multi-arch binariesConfigure miss: whether we need POSIX to get struct utimbufConfigure miss: x86_64-generic-linux-gnu-gcc-objcopyConfigure miss: x86_64-generic-linux-gnu-objcopy

 2  excludes

@@ -1,3 +1,3 @@# This file contains the output files that need %exclude. Full path# This file contains the output files that need %exclude. Full path# names, one per line.# names, one per line./usr/lib64/libguile-2.2.so.1.4.2-gdb.scm/usr/lib64/libguile-*.so.*-gdb.scm

 16  guile-2.2.7.tar.xz.sig

Load diff

This file was deleted.

 16  guile-3.0.8.tar.xz.sig

@@ -0,0 +1,16 @@-----BEGIN PGP SIGNATURE-----
iQIzBAABCAAdFiEET9TSiNRFk04KFPmlqIA3MuRDaIUFAmIGEqAACgkQqIA3MuRDaIUUeg//bI8qHzbsw34ozbBi6DE6p2oBJNrW3Ag5qCgN25+ulWawjBl60AENoEy6O3pPY0asc6aRa79ztC7Jbi5SF/qXNN+jH7H1a/t9h5LEi+cvoKds9stgSzCZqAF621MOulqoalD27LfxZDS9kzbbNEXLxWWLm+oYKIGge76mLHrbBpHG0cl5Jmu25mDBvcWLc709UE3Tl2XRzz9Lz2mRpLvWqxO9DuZq6GQyxoCzbS5fQz6fbYQpbxGH9RePIvbZfiRJ1xjXqdw+8gdeStmXhWMx6WWN5B6FqDczlRKdDfvr96Mfvq33IF7XPT0c+mVT0EbI7v+L4NGqfl5uLeoROpk5urmuAhT0JaQIjIqv6MfUMWb9HRDhISmxPkIBZCUHoV+7H7imw6CM3mGZ6vLOD2uBsRW3lepk3yx6/RAFXBSMfa04PEctHhgCYtpa+jsSIYXblIeFmSEke6JTJ53fEDKc5m7DbIseGCvZ7XuVKm5hbcSR4sGv6xkJ7rvdkX4n+DHgJLglCdBlqFLjPPaFmILATwwhFhjfF8wAfUD7QsxVFr3UWwOdwyCVAVTsJrEZuwrgI032FQbqWLyhECrljMY7ZyxC3kRFI2nZCApENnBdEShoe8zp+kuNf8+lDFibQjjW5NsDkKD2ctLg94TE75qEpWYCOU/5A53NEddVv/gjXY4==Ro42-----END PGP SIGNATURE-----

 1,615  guile.spec

@@ -2,17 +2,17 @@# This file is auto-generated. DO NOT EDIT# This file is auto-generated. DO NOT EDIT# Generated by: autospec.py# Generated by: autospec.py### Source0 file verified with key 0x090B11993D9AEBB5 (ludo@gnu.org)# Source0 file verified with key 0xA8803732E4436885 (wingo@gnu.org)##Name : guileName : guileVersion : 2.2.7Version : 3.0.8Release : 46Release : 47URL : https://mirrors.kernel.org/gnu/guile/guile-2.2.7.tar.xzURL : https://mirrors.kernel.org/gnu/guile/guile-3.0.8.tar.xzSource0 : https://mirrors.kernel.org/gnu/guile/guile-2.2.7.tar.xzSource0 : https://mirrors.kernel.org/gnu/guile/guile-3.0.8.tar.xzSource1 : https://mirrors.kernel.org/gnu/guile/guile-2.2.7.tar.xz.sigSource1 : https://mirrors.kernel.org/gnu/guile/guile-3.0.8.tar.xz.sigSummary : GNU's Ubiquitous Intelligent Language for Extension (uninstalled)Summary : GNU's Ubiquitous Intelligent Language for Extension (uninstalled)Group : Development/ToolsGroup : Development/ToolsLicense : GPL-3.0 LGPL-3.0License : GFDL-1.1 GPL-3.0 LGPL-3.0Requires: guile-bin = %{version}-%{release}Requires: guile-bin = %{version}-%{release}Requires: guile-data = %{version}-%{release}Requires: guile-data = %{version}-%{release}Requires: guile-info = %{version}-%{release}Requires: guile-info = %{version}-%{release}@@ -29,12 +29,10 @@ BuildRequires : pkgconfig(libffi)BuildRequires : readline-devBuildRequires : readline-devBuildRequires : sedBuildRequires : sedBuildRequires : texinfoBuildRequires : texinfoPatch1: 0001-Add-Require-for-guile-on-bdw-gc.patchPatch1: 0001-Add-missing-requirements-to-pc-file.patchPatch2: 0002-Revert-Fix-build-on-platforms-where-the-stack-grows-.patchPatch3: 0003-Fix-fixpoint-computation-in-compute-significant-bits.patch

%description%descriptionThis is version 2.2 of Guile, Project GNU's extension language library.This is version 3.0 of Guile, Project GNU's extension language library.Guile is an implementation of the Scheme programming language, packagedGuile is an implementation of the Scheme programming language, packagedas a library that can be linked into applications to give them their ownas a library that can be linked into applications to give them their ownextension language. Guile supports other languages as well, givingextension language. Guile supports other languages as well, giving@@ -106,18 +104,16 @@ man components for the guile package.



%prep%prep%setup -q -n guile-2.2.7%setup -q -n guile-3.0.8cd %{_builddir}/guile-2.2.7cd %{_builddir}/guile-3.0.8%patch1 -p1%patch1 -p1%patch2 -p1%patch3 -p1

%build%buildexport http_proxy=http://127.0.0.1:9/export http_proxy=http://127.0.0.1:9/export https_proxy=http://127.0.0.1:9/export https_proxy=http://127.0.0.1:9/export no_proxy=localhost,127.0.0.1,0.0.0.0export no_proxy=localhost,127.0.0.1,0.0.0.0export LANG=C.UTF-8export LANG=C.UTF-8export SOURCE_DATE_EPOCH=1628095116export SOURCE_DATE_EPOCH=1647822344export GCC_IGNORE_WERROR=1export GCC_IGNORE_WERROR=1export CFLAGS="$CFLAGS -fno-lto "export CFLAGS="$CFLAGS -fno-lto "export FCFLAGS="$FFLAGS -fno-lto "export FCFLAGS="$FFLAGS -fno-lto "@@ -127,322 +123,352 @@ export CXXFLAGS="$CXXFLAGS -fno-lto "make %{?_smp_mflags}make %{?_smp_mflags}

%install%installexport SOURCE_DATE_EPOCH=1628095116export SOURCE_DATE_EPOCH=1647822344rm -rf %{buildroot}rm -rf %{buildroot}mkdir -p %{buildroot}/usr/share/package-licenses/guilemkdir -p %{buildroot}/usr/share/package-licenses/guilecp %{_builddir}/guile-2.2.7/COPYING %{buildroot}/usr/share/package-licenses/guile/8624bcdae55baeef00cd11d5dfcfa60f68710a02cp %{_builddir}/guile-3.0.8/COPYING %{buildroot}/usr/share/package-licenses/guile/8624bcdae55baeef00cd11d5dfcfa60f68710a02cp %{_builddir}/guile-2.2.7/COPYING.LESSER %{buildroot}/usr/share/package-licenses/guile/e203d4ef09d404fa5c03cf6590e44231665be689cp %{_builddir}/guile-3.0.8/COPYING.LESSER %{buildroot}/usr/share/package-licenses/guile/e203d4ef09d404fa5c03cf6590e44231665be689cp %{_builddir}/guile-2.2.7/LICENSE %{buildroot}/usr/share/package-licenses/guile/1b32791cb14bd393369489b8dac99b741d884ba0cp %{_builddir}/guile-3.0.8/LICENSE %{buildroot}/usr/share/package-licenses/guile/1b32791cb14bd393369489b8dac99b741d884ba0cp %{_builddir}/guile-3.0.8/libguile/lightening/COPYING %{buildroot}/usr/share/package-licenses/guile/842745cb706f8f2126506f544492f7a80dbe29b3cp %{_builddir}/guile-3.0.8/libguile/lightening/COPYING.DOC %{buildroot}/usr/share/package-licenses/guile/5e7b36dfb18c7b8002bb9c41f87b65d280abd2aecp %{_builddir}/guile-3.0.8/libguile/lightening/COPYING.LESSER %{buildroot}/usr/share/package-licenses/guile/e7d563f52bf5295e6dba1d67ac23e9f6a160fab9%make_install%make_install## Remove excluded files## Remove excluded filesrm -f %{buildroot}/usr/lib64/libguile-2.2.so.1.4.2-gdb.scmrm -f %{buildroot}*/usr/lib64/libguile-*.so.*-gdb.scm

%files%files%defattr(-,root,root,-)%defattr(-,root,root,-)/usr/lib64/guile/2.2/ccache/ice-9/and-let-star.go/usr/lib64/guile/3.0/ccache/ice-9/and-let-star.go/usr/lib64/guile/2.2/ccache/ice-9/arrays.go/usr/lib64/guile/3.0/ccache/ice-9/arrays.go/usr/lib64/guile/2.2/ccache/ice-9/atomic.go/usr/lib64/guile/3.0/ccache/ice-9/atomic.go/usr/lib64/guile/2.2/ccache/ice-9/binary-ports.go/usr/lib64/guile/3.0/ccache/ice-9/binary-ports.go/usr/lib64/guile/2.2/ccache/ice-9/boot-9.go/usr/lib64/guile/3.0/ccache/ice-9/boot-9.go/usr/lib64/guile/2.2/ccache/ice-9/buffered-input.go/usr/lib64/guile/3.0/ccache/ice-9/buffered-input.go/usr/lib64/guile/2.2/ccache/ice-9/calling.go/usr/lib64/guile/3.0/ccache/ice-9/calling.go/usr/lib64/guile/2.2/ccache/ice-9/channel.go/usr/lib64/guile/3.0/ccache/ice-9/command-line.go/usr/lib64/guile/2.2/ccache/ice-9/command-line.go/usr/lib64/guile/3.0/ccache/ice-9/common-list.go/usr/lib64/guile/2.2/ccache/ice-9/common-list.go/usr/lib64/guile/3.0/ccache/ice-9/control.go/usr/lib64/guile/2.2/ccache/ice-9/control.go/usr/lib64/guile/3.0/ccache/ice-9/copy-tree.go/usr/lib64/guile/2.2/ccache/ice-9/curried-definitions.go/usr/lib64/guile/3.0/ccache/ice-9/curried-definitions.go/usr/lib64/guile/2.2/ccache/ice-9/debug.go/usr/lib64/guile/3.0/ccache/ice-9/deprecated.go/usr/lib64/guile/2.2/ccache/ice-9/deprecated.go/usr/lib64/guile/3.0/ccache/ice-9/documentation.go/usr/lib64/guile/2.2/ccache/ice-9/documentation.go/usr/lib64/guile/3.0/ccache/ice-9/eval-string.go/usr/lib64/guile/2.2/ccache/ice-9/eval-string.go/usr/lib64/guile/3.0/ccache/ice-9/eval.go/usr/lib64/guile/2.2/ccache/ice-9/eval.go/usr/lib64/guile/3.0/ccache/ice-9/exceptions.go/usr/lib64/guile/2.2/ccache/ice-9/expect.go/usr/lib64/guile/3.0/ccache/ice-9/expect.go/usr/lib64/guile/2.2/ccache/ice-9/fdes-finalizers.go/usr/lib64/guile/3.0/ccache/ice-9/fdes-finalizers.go/usr/lib64/guile/2.2/ccache/ice-9/format.go/usr/lib64/guile/3.0/ccache/ice-9/format.go/usr/lib64/guile/2.2/ccache/ice-9/ftw.go/usr/lib64/guile/3.0/ccache/ice-9/ftw.go/usr/lib64/guile/2.2/ccache/ice-9/futures.go/usr/lib64/guile/3.0/ccache/ice-9/futures.go/usr/lib64/guile/2.2/ccache/ice-9/gap-buffer.go/usr/lib64/guile/3.0/ccache/ice-9/gap-buffer.go/usr/lib64/guile/2.2/ccache/ice-9/getopt-long.go/usr/lib64/guile/3.0/ccache/ice-9/getopt-long.go/usr/lib64/guile/2.2/ccache/ice-9/hash-table.go/usr/lib64/guile/3.0/ccache/ice-9/hash-table.go/usr/lib64/guile/2.2/ccache/ice-9/hcons.go/usr/lib64/guile/3.0/ccache/ice-9/hcons.go/usr/lib64/guile/2.2/ccache/ice-9/history.go/usr/lib64/guile/3.0/ccache/ice-9/history.go/usr/lib64/guile/2.2/ccache/ice-9/i18n.go/usr/lib64/guile/3.0/ccache/ice-9/i18n.go/usr/lib64/guile/2.2/ccache/ice-9/iconv.go/usr/lib64/guile/3.0/ccache/ice-9/iconv.go/usr/lib64/guile/2.2/ccache/ice-9/lineio.go/usr/lib64/guile/3.0/ccache/ice-9/lineio.go/usr/lib64/guile/2.2/ccache/ice-9/list.go/usr/lib64/guile/3.0/ccache/ice-9/list.go/usr/lib64/guile/2.2/ccache/ice-9/local-eval.go/usr/lib64/guile/3.0/ccache/ice-9/local-eval.go/usr/lib64/guile/2.2/ccache/ice-9/ls.go/usr/lib64/guile/3.0/ccache/ice-9/ls.go/usr/lib64/guile/2.2/ccache/ice-9/mapping.go/usr/lib64/guile/3.0/ccache/ice-9/match.go/usr/lib64/guile/2.2/ccache/ice-9/match.go/usr/lib64/guile/3.0/ccache/ice-9/networking.go/usr/lib64/guile/2.2/ccache/ice-9/networking.go/usr/lib64/guile/3.0/ccache/ice-9/null.go/usr/lib64/guile/2.2/ccache/ice-9/null.go/usr/lib64/guile/3.0/ccache/ice-9/occam-channel.go/usr/lib64/guile/2.2/ccache/ice-9/occam-channel.go/usr/lib64/guile/3.0/ccache/ice-9/optargs.go/usr/lib64/guile/2.2/ccache/ice-9/optargs.go/usr/lib64/guile/3.0/ccache/ice-9/peg.go/usr/lib64/guile/2.2/ccache/ice-9/peg.go/usr/lib64/guile/3.0/ccache/ice-9/peg/cache.go/usr/lib64/guile/2.2/ccache/ice-9/peg/cache.go/usr/lib64/guile/3.0/ccache/ice-9/peg/codegen.go/usr/lib64/guile/2.2/ccache/ice-9/peg/codegen.go/usr/lib64/guile/3.0/ccache/ice-9/peg/simplify-tree.go/usr/lib64/guile/2.2/ccache/ice-9/peg/simplify-tree.go/usr/lib64/guile/3.0/ccache/ice-9/peg/string-peg.go/usr/lib64/guile/2.2/ccache/ice-9/peg/string-peg.go/usr/lib64/guile/3.0/ccache/ice-9/peg/using-parsers.go/usr/lib64/guile/2.2/ccache/ice-9/peg/using-parsers.go/usr/lib64/guile/3.0/ccache/ice-9/poe.go/usr/lib64/guile/2.2/ccache/ice-9/poe.go/usr/lib64/guile/3.0/ccache/ice-9/poll.go/usr/lib64/guile/2.2/ccache/ice-9/poll.go/usr/lib64/guile/3.0/ccache/ice-9/popen.go/usr/lib64/guile/2.2/ccache/ice-9/popen.go/usr/lib64/guile/3.0/ccache/ice-9/ports.go/usr/lib64/guile/2.2/ccache/ice-9/ports.go/usr/lib64/guile/3.0/ccache/ice-9/posix.go/usr/lib64/guile/2.2/ccache/ice-9/posix.go/usr/lib64/guile/3.0/ccache/ice-9/pretty-print.go/usr/lib64/guile/2.2/ccache/ice-9/pretty-print.go/usr/lib64/guile/3.0/ccache/ice-9/psyntax-pp.go/usr/lib64/guile/2.2/ccache/ice-9/psyntax-pp.go/usr/lib64/guile/3.0/ccache/ice-9/q.go/usr/lib64/guile/2.2/ccache/ice-9/q.go/usr/lib64/guile/3.0/ccache/ice-9/r5rs.go/usr/lib64/guile/2.2/ccache/ice-9/r5rs.go/usr/lib64/guile/3.0/ccache/ice-9/rdelim.go/usr/lib64/guile/2.2/ccache/ice-9/rdelim.go/usr/lib64/guile/3.0/ccache/ice-9/readline.go/usr/lib64/guile/2.2/ccache/ice-9/readline.go/usr/lib64/guile/3.0/ccache/ice-9/receive.go/usr/lib64/guile/2.2/ccache/ice-9/receive.go/usr/lib64/guile/3.0/ccache/ice-9/regex.go/usr/lib64/guile/2.2/ccache/ice-9/regex.go/usr/lib64/guile/3.0/ccache/ice-9/runq.go/usr/lib64/guile/2.2/ccache/ice-9/runq.go/usr/lib64/guile/3.0/ccache/ice-9/rw.go/usr/lib64/guile/2.2/ccache/ice-9/rw.go/usr/lib64/guile/3.0/ccache/ice-9/safe-r5rs.go/usr/lib64/guile/2.2/ccache/ice-9/safe-r5rs.go/usr/lib64/guile/3.0/ccache/ice-9/safe.go/usr/lib64/guile/2.2/ccache/ice-9/safe.go/usr/lib64/guile/3.0/ccache/ice-9/sandbox.go/usr/lib64/guile/2.2/ccache/ice-9/sandbox.go/usr/lib64/guile/3.0/ccache/ice-9/save-stack.go/usr/lib64/guile/2.2/ccache/ice-9/save-stack.go/usr/lib64/guile/3.0/ccache/ice-9/scm-style-repl.go/usr/lib64/guile/2.2/ccache/ice-9/scm-style-repl.go/usr/lib64/guile/3.0/ccache/ice-9/serialize.go/usr/lib64/guile/2.2/ccache/ice-9/serialize.go/usr/lib64/guile/3.0/ccache/ice-9/session.go/usr/lib64/guile/2.2/ccache/ice-9/session.go/usr/lib64/guile/3.0/ccache/ice-9/slib.go/usr/lib64/guile/2.2/ccache/ice-9/slib.go/usr/lib64/guile/3.0/ccache/ice-9/stack-catch.go/usr/lib64/guile/2.2/ccache/ice-9/stack-catch.go/usr/lib64/guile/3.0/ccache/ice-9/streams.go/usr/lib64/guile/2.2/ccache/ice-9/streams.go/usr/lib64/guile/3.0/ccache/ice-9/string-fun.go/usr/lib64/guile/2.2/ccache/ice-9/string-fun.go/usr/lib64/guile/3.0/ccache/ice-9/suspendable-ports.go/usr/lib64/guile/2.2/ccache/ice-9/suspendable-ports.go/usr/lib64/guile/3.0/ccache/ice-9/textual-ports.go/usr/lib64/guile/2.2/ccache/ice-9/syncase.go/usr/lib64/guile/3.0/ccache/ice-9/threads.go/usr/lib64/guile/2.2/ccache/ice-9/textual-ports.go/usr/lib64/guile/3.0/ccache/ice-9/time.go/usr/lib64/guile/2.2/ccache/ice-9/threads.go/usr/lib64/guile/3.0/ccache/ice-9/top-repl.go/usr/lib64/guile/2.2/ccache/ice-9/time.go/usr/lib64/guile/3.0/ccache/ice-9/unicode.go/usr/lib64/guile/2.2/ccache/ice-9/top-repl.go/usr/lib64/guile/3.0/ccache/ice-9/vlist.go/usr/lib64/guile/2.2/ccache/ice-9/unicode.go/usr/lib64/guile/3.0/ccache/ice-9/weak-vector.go/usr/lib64/guile/2.2/ccache/ice-9/vlist.go/usr/lib64/guile/3.0/ccache/language/brainfuck/compile-scheme.go/usr/lib64/guile/2.2/ccache/ice-9/weak-vector.go/usr/lib64/guile/3.0/ccache/language/brainfuck/compile-tree-il.go/usr/lib64/guile/2.2/ccache/language/brainfuck/compile-scheme.go/usr/lib64/guile/3.0/ccache/language/brainfuck/parse.go/usr/lib64/guile/2.2/ccache/language/brainfuck/compile-tree-il.go/usr/lib64/guile/3.0/ccache/language/brainfuck/spec.go/usr/lib64/guile/2.2/ccache/language/brainfuck/parse.go/usr/lib64/guile/3.0/ccache/language/bytecode.go/usr/lib64/guile/2.2/ccache/language/brainfuck/spec.go/usr/lib64/guile/3.0/ccache/language/bytecode/spec.go/usr/lib64/guile/2.2/ccache/language/bytecode.go/usr/lib64/guile/3.0/ccache/language/cps.go/usr/lib64/guile/2.2/ccache/language/bytecode/spec.go/usr/lib64/guile/3.0/ccache/language/cps/closure-conversion.go/usr/lib64/guile/2.2/ccache/language/cps.go/usr/lib64/guile/3.0/ccache/language/cps/compile-bytecode.go/usr/lib64/guile/2.2/ccache/language/cps/closure-conversion.go/usr/lib64/guile/3.0/ccache/language/cps/contification.go/usr/lib64/guile/2.2/ccache/language/cps/compile-bytecode.go/usr/lib64/guile/3.0/ccache/language/cps/cse.go/usr/lib64/guile/2.2/ccache/language/cps/constructors.go/usr/lib64/guile/3.0/ccache/language/cps/dce.go/usr/lib64/guile/2.2/ccache/language/cps/contification.go/usr/lib64/guile/3.0/ccache/language/cps/devirtualize-integers.go/usr/lib64/guile/2.2/ccache/language/cps/cse.go/usr/lib64/guile/3.0/ccache/language/cps/dump.go/usr/lib64/guile/2.2/ccache/language/cps/dce.go/usr/lib64/guile/3.0/ccache/language/cps/effects-analysis.go/usr/lib64/guile/2.2/ccache/language/cps/effects-analysis.go/usr/lib64/guile/3.0/ccache/language/cps/elide-arity-checks.go/usr/lib64/guile/2.2/ccache/language/cps/elide-values.go/usr/lib64/guile/3.0/ccache/language/cps/graphs.go/usr/lib64/guile/2.2/ccache/language/cps/handle-interrupts.go/usr/lib64/guile/3.0/ccache/language/cps/intmap.go/usr/lib64/guile/2.2/ccache/language/cps/intmap.go/usr/lib64/guile/3.0/ccache/language/cps/intset.go/usr/lib64/guile/2.2/ccache/language/cps/intset.go/usr/lib64/guile/3.0/ccache/language/cps/licm.go/usr/lib64/guile/2.2/ccache/language/cps/licm.go/usr/lib64/guile/3.0/ccache/language/cps/loop-instrumentation.go/usr/lib64/guile/2.2/ccache/language/cps/optimize.go/usr/lib64/guile/3.0/ccache/language/cps/optimize.go/usr/lib64/guile/2.2/ccache/language/cps/peel-loops.go/usr/lib64/guile/3.0/ccache/language/cps/peel-loops.go/usr/lib64/guile/2.2/ccache/language/cps/primitives.go/usr/lib64/guile/3.0/ccache/language/cps/prune-top-level-scopes.go/usr/lib64/guile/2.2/ccache/language/cps/prune-bailouts.go/usr/lib64/guile/3.0/ccache/language/cps/reify-primitives.go/usr/lib64/guile/2.2/ccache/language/cps/prune-top-level-scopes.go/usr/lib64/guile/3.0/ccache/language/cps/renumber.go/usr/lib64/guile/2.2/ccache/language/cps/reify-primitives.go/usr/lib64/guile/3.0/ccache/language/cps/return-types.go/usr/lib64/guile/2.2/ccache/language/cps/renumber.go/usr/lib64/guile/3.0/ccache/language/cps/rotate-loops.go/usr/lib64/guile/2.2/ccache/language/cps/rotate-loops.go/usr/lib64/guile/3.0/ccache/language/cps/self-references.go/usr/lib64/guile/2.2/ccache/language/cps/self-references.go/usr/lib64/guile/3.0/ccache/language/cps/simplify.go/usr/lib64/guile/2.2/ccache/language/cps/simplify.go/usr/lib64/guile/3.0/ccache/language/cps/slot-allocation.go/usr/lib64/guile/2.2/ccache/language/cps/slot-allocation.go/usr/lib64/guile/3.0/ccache/language/cps/spec.go/usr/lib64/guile/2.2/ccache/language/cps/spec.go/usr/lib64/guile/3.0/ccache/language/cps/specialize-numbers.go/usr/lib64/guile/2.2/ccache/language/cps/specialize-numbers.go/usr/lib64/guile/3.0/ccache/language/cps/specialize-primcalls.go/usr/lib64/guile/2.2/ccache/language/cps/specialize-primcalls.go/usr/lib64/guile/3.0/ccache/language/cps/split-rec.go/usr/lib64/guile/2.2/ccache/language/cps/split-rec.go/usr/lib64/guile/3.0/ccache/language/cps/switch.go/usr/lib64/guile/2.2/ccache/language/cps/type-checks.go/usr/lib64/guile/3.0/ccache/language/cps/type-checks.go/usr/lib64/guile/2.2/ccache/language/cps/type-fold.go/usr/lib64/guile/3.0/ccache/language/cps/type-fold.go/usr/lib64/guile/2.2/ccache/language/cps/types.go/usr/lib64/guile/3.0/ccache/language/cps/types.go/usr/lib64/guile/2.2/ccache/language/cps/utils.go/usr/lib64/guile/3.0/ccache/language/cps/utils.go/usr/lib64/guile/2.2/ccache/language/cps/verify.go/usr/lib64/guile/3.0/ccache/language/cps/verify.go/usr/lib64/guile/2.2/ccache/language/cps/with-cps.go/usr/lib64/guile/3.0/ccache/language/cps/with-cps.go/usr/lib64/guile/2.2/ccache/language/ecmascript/array.go/usr/lib64/guile/3.0/ccache/language/ecmascript/array.go/usr/lib64/guile/2.2/ccache/language/ecmascript/base.go/usr/lib64/guile/3.0/ccache/language/ecmascript/base.go/usr/lib64/guile/2.2/ccache/language/ecmascript/compile-tree-il.go/usr/lib64/guile/3.0/ccache/language/ecmascript/compile-tree-il.go/usr/lib64/guile/2.2/ccache/language/ecmascript/function.go/usr/lib64/guile/3.0/ccache/language/ecmascript/function.go/usr/lib64/guile/2.2/ccache/language/ecmascript/impl.go/usr/lib64/guile/3.0/ccache/language/ecmascript/impl.go/usr/lib64/guile/2.2/ccache/language/ecmascript/parse.go/usr/lib64/guile/3.0/ccache/language/ecmascript/parse.go/usr/lib64/guile/2.2/ccache/language/ecmascript/spec.go/usr/lib64/guile/3.0/ccache/language/ecmascript/spec.go/usr/lib64/guile/2.2/ccache/language/ecmascript/tokenize.go/usr/lib64/guile/3.0/ccache/language/ecmascript/tokenize.go/usr/lib64/guile/2.2/ccache/language/elisp/bindings.go/usr/lib64/guile/3.0/ccache/language/elisp/bindings.go/usr/lib64/guile/2.2/ccache/language/elisp/boot.go/usr/lib64/guile/3.0/ccache/language/elisp/boot.go/usr/lib64/guile/2.2/ccache/language/elisp/compile-tree-il.go/usr/lib64/guile/3.0/ccache/language/elisp/compile-tree-il.go/usr/lib64/guile/2.2/ccache/language/elisp/falias.go/usr/lib64/guile/3.0/ccache/language/elisp/falias.go/usr/lib64/guile/2.2/ccache/language/elisp/lexer.go/usr/lib64/guile/3.0/ccache/language/elisp/lexer.go/usr/lib64/guile/2.2/ccache/language/elisp/parser.go/usr/lib64/guile/3.0/ccache/language/elisp/parser.go/usr/lib64/guile/2.2/ccache/language/elisp/runtime.go/usr/lib64/guile/3.0/ccache/language/elisp/runtime.go/usr/lib64/guile/2.2/ccache/language/elisp/runtime/function-slot.go/usr/lib64/guile/3.0/ccache/language/elisp/runtime/function-slot.go/usr/lib64/guile/2.2/ccache/language/elisp/runtime/value-slot.go/usr/lib64/guile/3.0/ccache/language/elisp/runtime/value-slot.go/usr/lib64/guile/2.2/ccache/language/elisp/spec.go/usr/lib64/guile/3.0/ccache/language/elisp/spec.go/usr/lib64/guile/2.2/ccache/language/scheme/compile-tree-il.go/usr/lib64/guile/3.0/ccache/language/scheme/compile-tree-il.go/usr/lib64/guile/2.2/ccache/language/scheme/decompile-tree-il.go/usr/lib64/guile/3.0/ccache/language/scheme/decompile-tree-il.go/usr/lib64/guile/2.2/ccache/language/scheme/spec.go/usr/lib64/guile/3.0/ccache/language/scheme/spec.go/usr/lib64/guile/2.2/ccache/language/tree-il.go/usr/lib64/guile/3.0/ccache/language/tree-il.go/usr/lib64/guile/2.2/ccache/language/tree-il/analyze.go/usr/lib64/guile/3.0/ccache/language/tree-il/analyze.go/usr/lib64/guile/2.2/ccache/language/tree-il/canonicalize.go/usr/lib64/guile/3.0/ccache/language/tree-il/compile-bytecode.go/usr/lib64/guile/2.2/ccache/language/tree-il/compile-cps.go/usr/lib64/guile/3.0/ccache/language/tree-il/compile-cps.go/usr/lib64/guile/2.2/ccache/language/tree-il/debug.go/usr/lib64/guile/3.0/ccache/language/tree-il/cps-primitives.go/usr/lib64/guile/2.2/ccache/language/tree-il/effects.go/usr/lib64/guile/3.0/ccache/language/tree-il/debug.go/usr/lib64/guile/2.2/ccache/language/tree-il/fix-letrec.go/usr/lib64/guile/3.0/ccache/language/tree-il/effects.go/usr/lib64/guile/2.2/ccache/language/tree-il/optimize.go/usr/lib64/guile/3.0/ccache/language/tree-il/eta-expand.go/usr/lib64/guile/2.2/ccache/language/tree-il/peval.go/usr/lib64/guile/3.0/ccache/language/tree-il/fix-letrec.go/usr/lib64/guile/2.2/ccache/language/tree-il/primitives.go/usr/lib64/guile/3.0/ccache/language/tree-il/inlinable-exports.go/usr/lib64/guile/2.2/ccache/language/tree-il/spec.go/usr/lib64/guile/3.0/ccache/language/tree-il/letrectify.go/usr/lib64/guile/2.2/ccache/language/value/spec.go/usr/lib64/guile/3.0/ccache/language/tree-il/optimize.go/usr/lib64/guile/2.2/ccache/oop/goops.go/usr/lib64/guile/3.0/ccache/language/tree-il/peval.go/usr/lib64/guile/2.2/ccache/oop/goops/accessors.go/usr/lib64/guile/3.0/ccache/language/tree-il/primitives.go/usr/lib64/guile/2.2/ccache/oop/goops/active-slot.go/usr/lib64/guile/3.0/ccache/language/tree-il/resolve-free-vars.go/usr/lib64/guile/2.2/ccache/oop/goops/composite-slot.go/usr/lib64/guile/3.0/ccache/language/tree-il/spec.go/usr/lib64/guile/2.2/ccache/oop/goops/describe.go/usr/lib64/guile/3.0/ccache/language/value/spec.go/usr/lib64/guile/2.2/ccache/oop/goops/internal.go/usr/lib64/guile/3.0/ccache/oop/goops.go/usr/lib64/guile/2.2/ccache/oop/goops/save.go/usr/lib64/guile/3.0/ccache/oop/goops/accessors.go/usr/lib64/guile/2.2/ccache/oop/goops/simple.go/usr/lib64/guile/3.0/ccache/oop/goops/active-slot.go/usr/lib64/guile/2.2/ccache/oop/goops/stklos.go/usr/lib64/guile/3.0/ccache/oop/goops/composite-slot.go/usr/lib64/guile/2.2/ccache/rnrs.go/usr/lib64/guile/3.0/ccache/oop/goops/describe.go/usr/lib64/guile/2.2/ccache/rnrs/arithmetic/bitwise.go/usr/lib64/guile/3.0/ccache/oop/goops/internal.go/usr/lib64/guile/2.2/ccache/rnrs/arithmetic/fixnums.go/usr/lib64/guile/3.0/ccache/oop/goops/save.go/usr/lib64/guile/2.2/ccache/rnrs/arithmetic/flonums.go/usr/lib64/guile/3.0/ccache/oop/goops/simple.go/usr/lib64/guile/2.2/ccache/rnrs/base.go/usr/lib64/guile/3.0/ccache/oop/goops/stklos.go/usr/lib64/guile/2.2/ccache/rnrs/bytevectors.go/usr/lib64/guile/3.0/ccache/rnrs.go/usr/lib64/guile/2.2/ccache/rnrs/conditions.go/usr/lib64/guile/3.0/ccache/rnrs/arithmetic/bitwise.go/usr/lib64/guile/2.2/ccache/rnrs/control.go/usr/lib64/guile/3.0/ccache/rnrs/arithmetic/fixnums.go/usr/lib64/guile/2.2/ccache/rnrs/enums.go/usr/lib64/guile/3.0/ccache/rnrs/arithmetic/flonums.go/usr/lib64/guile/2.2/ccache/rnrs/eval.go/usr/lib64/guile/3.0/ccache/rnrs/base.go/usr/lib64/guile/2.2/ccache/rnrs/exceptions.go/usr/lib64/guile/3.0/ccache/rnrs/bytevectors.go/usr/lib64/guile/2.2/ccache/rnrs/files.go/usr/lib64/guile/3.0/ccache/rnrs/conditions.go/usr/lib64/guile/2.2/ccache/rnrs/hashtables.go/usr/lib64/guile/3.0/ccache/rnrs/control.go/usr/lib64/guile/2.2/ccache/rnrs/io/ports.go/usr/lib64/guile/3.0/ccache/rnrs/enums.go/usr/lib64/guile/2.2/ccache/rnrs/io/simple.go/usr/lib64/guile/3.0/ccache/rnrs/eval.go/usr/lib64/guile/2.2/ccache/rnrs/lists.go/usr/lib64/guile/3.0/ccache/rnrs/exceptions.go/usr/lib64/guile/2.2/ccache/rnrs/mutable-pairs.go/usr/lib64/guile/3.0/ccache/rnrs/files.go/usr/lib64/guile/2.2/ccache/rnrs/mutable-strings.go/usr/lib64/guile/3.0/ccache/rnrs/hashtables.go/usr/lib64/guile/2.2/ccache/rnrs/programs.go/usr/lib64/guile/3.0/ccache/rnrs/io/ports.go/usr/lib64/guile/2.2/ccache/rnrs/r5rs.go/usr/lib64/guile/3.0/ccache/rnrs/io/simple.go/usr/lib64/guile/2.2/ccache/rnrs/records/inspection.go/usr/lib64/guile/3.0/ccache/rnrs/lists.go/usr/lib64/guile/2.2/ccache/rnrs/records/procedural.go/usr/lib64/guile/3.0/ccache/rnrs/mutable-pairs.go/usr/lib64/guile/2.2/ccache/rnrs/records/syntactic.go/usr/lib64/guile/3.0/ccache/rnrs/mutable-strings.go/usr/lib64/guile/2.2/ccache/rnrs/sorting.go/usr/lib64/guile/3.0/ccache/rnrs/programs.go/usr/lib64/guile/2.2/ccache/rnrs/syntax-case.go/usr/lib64/guile/3.0/ccache/rnrs/r5rs.go/usr/lib64/guile/2.2/ccache/rnrs/unicode.go/usr/lib64/guile/3.0/ccache/rnrs/records/inspection.go/usr/lib64/guile/2.2/ccache/scripts/api-diff.go/usr/lib64/guile/3.0/ccache/rnrs/records/procedural.go/usr/lib64/guile/2.2/ccache/scripts/autofrisk.go/usr/lib64/guile/3.0/ccache/rnrs/records/syntactic.go/usr/lib64/guile/2.2/ccache/scripts/compile.go/usr/lib64/guile/3.0/ccache/rnrs/sorting.go/usr/lib64/guile/2.2/ccache/scripts/disassemble.go/usr/lib64/guile/3.0/ccache/rnrs/syntax-case.go/usr/lib64/guile/2.2/ccache/scripts/display-commentary.go/usr/lib64/guile/3.0/ccache/rnrs/unicode.go/usr/lib64/guile/2.2/ccache/scripts/doc-snarf.go/usr/lib64/guile/3.0/ccache/scheme/base.go/usr/lib64/guile/2.2/ccache/scripts/frisk.go/usr/lib64/guile/3.0/ccache/scheme/case-lambda.go/usr/lib64/guile/2.2/ccache/scripts/generate-autoload.go/usr/lib64/guile/3.0/ccache/scheme/char.go/usr/lib64/guile/2.2/ccache/scripts/help.go/usr/lib64/guile/3.0/ccache/scheme/complex.go/usr/lib64/guile/2.2/ccache/scripts/lint.go/usr/lib64/guile/3.0/ccache/scheme/cxr.go/usr/lib64/guile/2.2/ccache/scripts/list.go/usr/lib64/guile/3.0/ccache/scheme/eval.go/usr/lib64/guile/2.2/ccache/scripts/punify.go/usr/lib64/guile/3.0/ccache/scheme/file.go/usr/lib64/guile/2.2/ccache/scripts/read-rfc822.go/usr/lib64/guile/3.0/ccache/scheme/inexact.go/usr/lib64/guile/2.2/ccache/scripts/read-scheme-source.go/usr/lib64/guile/3.0/ccache/scheme/lazy.go/usr/lib64/guile/2.2/ccache/scripts/read-text-outline.go/usr/lib64/guile/3.0/ccache/scheme/load.go/usr/lib64/guile/2.2/ccache/scripts/scan-api.go/usr/lib64/guile/3.0/ccache/scheme/process-context.go/usr/lib64/guile/2.2/ccache/scripts/snarf-check-and-output-texi.go/usr/lib64/guile/3.0/ccache/scheme/r5rs.go/usr/lib64/guile/2.2/ccache/scripts/snarf-guile-m4-docs.go/usr/lib64/guile/3.0/ccache/scheme/read.go/usr/lib64/guile/2.2/ccache/scripts/summarize-guile-TODO.go/usr/lib64/guile/3.0/ccache/scheme/repl.go/usr/lib64/guile/2.2/ccache/scripts/use2dot.go/usr/lib64/guile/3.0/ccache/scheme/time.go/usr/lib64/guile/2.2/ccache/srfi/srfi-1.go/usr/lib64/guile/3.0/ccache/scheme/write.go/usr/lib64/guile/2.2/ccache/srfi/srfi-10.go/usr/lib64/guile/3.0/ccache/scripts/api-diff.go/usr/lib64/guile/2.2/ccache/srfi/srfi-11.go/usr/lib64/guile/3.0/ccache/scripts/autofrisk.go/usr/lib64/guile/2.2/ccache/srfi/srfi-111.go/usr/lib64/guile/3.0/ccache/scripts/compile.go/usr/lib64/guile/2.2/ccache/srfi/srfi-13.go/usr/lib64/guile/3.0/ccache/scripts/disassemble.go/usr/lib64/guile/2.2/ccache/srfi/srfi-14.go/usr/lib64/guile/3.0/ccache/scripts/display-commentary.go/usr/lib64/guile/2.2/ccache/srfi/srfi-16.go/usr/lib64/guile/3.0/ccache/scripts/doc-snarf.go/usr/lib64/guile/2.2/ccache/srfi/srfi-17.go/usr/lib64/guile/3.0/ccache/scripts/frisk.go/usr/lib64/guile/2.2/ccache/srfi/srfi-18.go/usr/lib64/guile/3.0/ccache/scripts/generate-autoload.go/usr/lib64/guile/2.2/ccache/srfi/srfi-19.go/usr/lib64/guile/3.0/ccache/scripts/help.go/usr/lib64/guile/2.2/ccache/srfi/srfi-2.go/usr/lib64/guile/3.0/ccache/scripts/lint.go/usr/lib64/guile/2.2/ccache/srfi/srfi-26.go/usr/lib64/guile/3.0/ccache/scripts/list.go/usr/lib64/guile/2.2/ccache/srfi/srfi-27.go/usr/lib64/guile/3.0/ccache/scripts/punify.go/usr/lib64/guile/2.2/ccache/srfi/srfi-28.go/usr/lib64/guile/3.0/ccache/scripts/read-rfc822.go/usr/lib64/guile/2.2/ccache/srfi/srfi-31.go/usr/lib64/guile/3.0/ccache/scripts/read-scheme-source.go/usr/lib64/guile/2.2/ccache/srfi/srfi-34.go/usr/lib64/guile/3.0/ccache/scripts/read-text-outline.go/usr/lib64/guile/2.2/ccache/srfi/srfi-35.go/usr/lib64/guile/3.0/ccache/scripts/scan-api.go/usr/lib64/guile/2.2/ccache/srfi/srfi-37.go/usr/lib64/guile/3.0/ccache/scripts/snarf-check-and-output-texi.go/usr/lib64/guile/2.2/ccache/srfi/srfi-38.go/usr/lib64/guile/3.0/ccache/scripts/snarf-guile-m4-docs.go/usr/lib64/guile/2.2/ccache/srfi/srfi-39.go/usr/lib64/guile/3.0/ccache/scripts/summarize-guile-TODO.go/usr/lib64/guile/2.2/ccache/srfi/srfi-4.go/usr/lib64/guile/3.0/ccache/scripts/use2dot.go/usr/lib64/guile/2.2/ccache/srfi/srfi-4/gnu.go/usr/lib64/guile/3.0/ccache/srfi/srfi-1.go/usr/lib64/guile/2.2/ccache/srfi/srfi-41.go/usr/lib64/guile/3.0/ccache/srfi/srfi-10.go/usr/lib64/guile/2.2/ccache/srfi/srfi-42.go/usr/lib64/guile/3.0/ccache/srfi/srfi-11.go/usr/lib64/guile/2.2/ccache/srfi/srfi-43.go/usr/lib64/guile/3.0/ccache/srfi/srfi-111.go/usr/lib64/guile/2.2/ccache/srfi/srfi-45.go/usr/lib64/guile/3.0/ccache/srfi/srfi-13.go/usr/lib64/guile/2.2/ccache/srfi/srfi-6.go/usr/lib64/guile/3.0/ccache/srfi/srfi-14.go/usr/lib64/guile/2.2/ccache/srfi/srfi-60.go/usr/lib64/guile/3.0/ccache/srfi/srfi-16.go/usr/lib64/guile/2.2/ccache/srfi/srfi-64.go/usr/lib64/guile/3.0/ccache/srfi/srfi-17.go/usr/lib64/guile/2.2/ccache/srfi/srfi-67.go/usr/lib64/guile/3.0/ccache/srfi/srfi-171.go/usr/lib64/guile/2.2/ccache/srfi/srfi-69.go/usr/lib64/guile/3.0/ccache/srfi/srfi-171/gnu.go/usr/lib64/guile/2.2/ccache/srfi/srfi-71.go/usr/lib64/guile/3.0/ccache/srfi/srfi-171/meta.go/usr/lib64/guile/2.2/ccache/srfi/srfi-8.go/usr/lib64/guile/3.0/ccache/srfi/srfi-18.go/usr/lib64/guile/2.2/ccache/srfi/srfi-88.go/usr/lib64/guile/3.0/ccache/srfi/srfi-19.go/usr/lib64/guile/2.2/ccache/srfi/srfi-9.go/usr/lib64/guile/3.0/ccache/srfi/srfi-2.go/usr/lib64/guile/2.2/ccache/srfi/srfi-9/gnu.go/usr/lib64/guile/3.0/ccache/srfi/srfi-26.go/usr/lib64/guile/2.2/ccache/srfi/srfi-98.go/usr/lib64/guile/3.0/ccache/srfi/srfi-27.go/usr/lib64/guile/2.2/ccache/statprof.go/usr/lib64/guile/3.0/ccache/srfi/srfi-28.go/usr/lib64/guile/2.2/ccache/sxml/apply-templates.go/usr/lib64/guile/3.0/ccache/srfi/srfi-31.go/usr/lib64/guile/2.2/ccache/sxml/fold.go/usr/lib64/guile/3.0/ccache/srfi/srfi-34.go/usr/lib64/guile/2.2/ccache/sxml/match.go/usr/lib64/guile/3.0/ccache/srfi/srfi-35.go/usr/lib64/guile/2.2/ccache/sxml/simple.go/usr/lib64/guile/3.0/ccache/srfi/srfi-37.go/usr/lib64/guile/2.2/ccache/sxml/ssax.go/usr/lib64/guile/3.0/ccache/srfi/srfi-38.go/usr/lib64/guile/2.2/ccache/sxml/ssax/input-parse.go/usr/lib64/guile/3.0/ccache/srfi/srfi-39.go/usr/lib64/guile/2.2/ccache/sxml/transform.go/usr/lib64/guile/3.0/ccache/srfi/srfi-4.go/usr/lib64/guile/2.2/ccache/sxml/xpath.go/usr/lib64/guile/3.0/ccache/srfi/srfi-4/gnu.go/usr/lib64/guile/2.2/ccache/system/base/ck.go/usr/lib64/guile/3.0/ccache/srfi/srfi-41.go/usr/lib64/guile/2.2/ccache/system/base/compile.go/usr/lib64/guile/3.0/ccache/srfi/srfi-42.go/usr/lib64/guile/2.2/ccache/system/base/lalr.go/usr/lib64/guile/3.0/ccache/srfi/srfi-43.go/usr/lib64/guile/2.2/ccache/system/base/language.go/usr/lib64/guile/3.0/ccache/srfi/srfi-45.go/usr/lib64/guile/2.2/ccache/system/base/message.go/usr/lib64/guile/3.0/ccache/srfi/srfi-6.go/usr/lib64/guile/2.2/ccache/system/base/pmatch.go/usr/lib64/guile/3.0/ccache/srfi/srfi-60.go/usr/lib64/guile/2.2/ccache/system/base/syntax.go/usr/lib64/guile/3.0/ccache/srfi/srfi-64.go/usr/lib64/guile/2.2/ccache/system/base/target.go/usr/lib64/guile/3.0/ccache/srfi/srfi-67.go/usr/lib64/guile/2.2/ccache/system/base/types.go/usr/lib64/guile/3.0/ccache/srfi/srfi-69.go/usr/lib64/guile/2.2/ccache/system/foreign-object.go/usr/lib64/guile/3.0/ccache/srfi/srfi-71.go/usr/lib64/guile/2.2/ccache/system/foreign.go/usr/lib64/guile/3.0/ccache/srfi/srfi-8.go/usr/lib64/guile/2.2/ccache/system/repl/command.go/usr/lib64/guile/3.0/ccache/srfi/srfi-88.go/usr/lib64/guile/2.2/ccache/system/repl/common.go/usr/lib64/guile/3.0/ccache/srfi/srfi-9.go/usr/lib64/guile/2.2/ccache/system/repl/coop-server.go/usr/lib64/guile/3.0/ccache/srfi/srfi-9/gnu.go/usr/lib64/guile/2.2/ccache/system/repl/debug.go/usr/lib64/guile/3.0/ccache/srfi/srfi-98.go/usr/lib64/guile/2.2/ccache/system/repl/error-handling.go/usr/lib64/guile/3.0/ccache/statprof.go/usr/lib64/guile/2.2/ccache/system/repl/repl.go/usr/lib64/guile/3.0/ccache/sxml/apply-templates.go/usr/lib64/guile/2.2/ccache/system/repl/server.go/usr/lib64/guile/3.0/ccache/sxml/fold.go/usr/lib64/guile/2.2/ccache/system/syntax.go/usr/lib64/guile/3.0/ccache/sxml/match.go/usr/lib64/guile/2.2/ccache/system/vm/assembler.go/usr/lib64/guile/3.0/ccache/sxml/simple.go/usr/lib64/guile/2.2/ccache/system/vm/coverage.go/usr/lib64/guile/3.0/ccache/sxml/ssax.go/usr/lib64/guile/2.2/ccache/system/vm/debug.go/usr/lib64/guile/3.0/ccache/sxml/ssax/input-parse.go/usr/lib64/guile/2.2/ccache/system/vm/disassembler.go/usr/lib64/guile/3.0/ccache/sxml/transform.go/usr/lib64/guile/2.2/ccache/system/vm/dwarf.go/usr/lib64/guile/3.0/ccache/sxml/xpath.go/usr/lib64/guile/2.2/ccache/system/vm/elf.go/usr/lib64/guile/3.0/ccache/system/base/ck.go/usr/lib64/guile/2.2/ccache/system/vm/frame.go/usr/lib64/guile/3.0/ccache/system/base/compile.go/usr/lib64/guile/2.2/ccache/system/vm/inspect.go/usr/lib64/guile/3.0/ccache/system/base/lalr.go/usr/lib64/guile/2.2/ccache/system/vm/linker.go/usr/lib64/guile/3.0/ccache/system/base/language.go/usr/lib64/guile/2.2/ccache/system/vm/loader.go/usr/lib64/guile/3.0/ccache/system/base/message.go/usr/lib64/guile/2.2/ccache/system/vm/program.go/usr/lib64/guile/3.0/ccache/system/base/optimize.go/usr/lib64/guile/2.2/ccache/system/vm/trace.go/usr/lib64/guile/3.0/ccache/system/base/pmatch.go/usr/lib64/guile/2.2/ccache/system/vm/trap-state.go/usr/lib64/guile/3.0/ccache/system/base/syntax.go/usr/lib64/guile/2.2/ccache/system/vm/traps.go/usr/lib64/guile/3.0/ccache/system/base/target.go/usr/lib64/guile/2.2/ccache/system/vm/vm.go/usr/lib64/guile/3.0/ccache/system/base/types.go/usr/lib64/guile/2.2/ccache/system/xref.go/usr/lib64/guile/3.0/ccache/system/base/types/internal.go/usr/lib64/guile/2.2/ccache/texinfo.go/usr/lib64/guile/3.0/ccache/system/foreign-library.go/usr/lib64/guile/2.2/ccache/texinfo/docbook.go/usr/lib64/guile/3.0/ccache/system/foreign-object.go/usr/lib64/guile/2.2/ccache/texinfo/html.go/usr/lib64/guile/3.0/ccache/system/foreign.go/usr/lib64/guile/2.2/ccache/texinfo/indexing.go/usr/lib64/guile/3.0/ccache/system/repl/command.go/usr/lib64/guile/2.2/ccache/texinfo/plain-text.go/usr/lib64/guile/3.0/ccache/system/repl/common.go/usr/lib64/guile/2.2/ccache/texinfo/reflection.go/usr/lib64/guile/3.0/ccache/system/repl/coop-server.go/usr/lib64/guile/2.2/ccache/texinfo/serialize.go/usr/lib64/guile/3.0/ccache/system/repl/debug.go/usr/lib64/guile/2.2/ccache/texinfo/string-utils.go/usr/lib64/guile/3.0/ccache/system/repl/error-handling.go/usr/lib64/guile/2.2/ccache/web/client.go/usr/lib64/guile/3.0/ccache/system/repl/repl.go/usr/lib64/guile/2.2/ccache/web/http.go/usr/lib64/guile/3.0/ccache/system/repl/server.go/usr/lib64/guile/2.2/ccache/web/request.go/usr/lib64/guile/3.0/ccache/system/syntax.go/usr/lib64/guile/2.2/ccache/web/response.go/usr/lib64/guile/3.0/ccache/system/vm/assembler.go/usr/lib64/guile/2.2/ccache/web/server.go/usr/lib64/guile/3.0/ccache/system/vm/coverage.go/usr/lib64/guile/2.2/ccache/web/server/http.go/usr/lib64/guile/3.0/ccache/system/vm/debug.go/usr/lib64/guile/2.2/ccache/web/uri.go/usr/lib64/guile/3.0/ccache/system/vm/disassembler.go/usr/lib64/guile/3.0/ccache/system/vm/dwarf.go/usr/lib64/guile/3.0/ccache/system/vm/elf.go/usr/lib64/guile/3.0/ccache/system/vm/frame.go/usr/lib64/guile/3.0/ccache/system/vm/inspect.go/usr/lib64/guile/3.0/ccache/system/vm/linker.go/usr/lib64/guile/3.0/ccache/system/vm/loader.go/usr/lib64/guile/3.0/ccache/system/vm/program.go/usr/lib64/guile/3.0/ccache/system/vm/trace.go/usr/lib64/guile/3.0/ccache/system/vm/trap-state.go/usr/lib64/guile/3.0/ccache/system/vm/traps.go/usr/lib64/guile/3.0/ccache/system/vm/vm.go/usr/lib64/guile/3.0/ccache/system/xref.go/usr/lib64/guile/3.0/ccache/texinfo.go/usr/lib64/guile/3.0/ccache/texinfo/docbook.go/usr/lib64/guile/3.0/ccache/texinfo/html.go/usr/lib64/guile/3.0/ccache/texinfo/indexing.go/usr/lib64/guile/3.0/ccache/texinfo/plain-text.go/usr/lib64/guile/3.0/ccache/texinfo/reflection.go/usr/lib64/guile/3.0/ccache/texinfo/serialize.go/usr/lib64/guile/3.0/ccache/texinfo/string-utils.go/usr/lib64/guile/3.0/ccache/web/client.go/usr/lib64/guile/3.0/ccache/web/http.go/usr/lib64/guile/3.0/ccache/web/request.go/usr/lib64/guile/3.0/ccache/web/response.go/usr/lib64/guile/3.0/ccache/web/server.go/usr/lib64/guile/3.0/ccache/web/server/http.go/usr/lib64/guile/3.0/ccache/web/uri.go

%files bin%files bin%defattr(-,root,root,-)%defattr(-,root,root,-)@@ -454,463 +480,495 @@ rm -f %{buildroot}/usr/lib64/libguile-2.2.so.1.4.2-gdb.scm

%files data%files data%defattr(-,root,root,-)%defattr(-,root,root,-)/usr/share/guile/2.2/guile-procedures.txt/usr/share/guile/3.0/guile-procedures.txt/usr/share/guile/2.2/ice-9/and-let-star.scm/usr/share/guile/3.0/ice-9/and-let-star.scm/usr/share/guile/2.2/ice-9/arrays.scm/usr/share/guile/3.0/ice-9/arrays.scm/usr/share/guile/2.2/ice-9/atomic.scm/usr/share/guile/3.0/ice-9/atomic.scm/usr/share/guile/2.2/ice-9/binary-ports.scm/usr/share/guile/3.0/ice-9/binary-ports.scm/usr/share/guile/2.2/ice-9/boot-9.scm/usr/share/guile/3.0/ice-9/boot-9.scm/usr/share/guile/2.2/ice-9/buffered-input.scm/usr/share/guile/3.0/ice-9/buffered-input.scm/usr/share/guile/2.2/ice-9/calling.scm/usr/share/guile/3.0/ice-9/calling.scm/usr/share/guile/2.2/ice-9/channel.scm/usr/share/guile/3.0/ice-9/command-line.scm/usr/share/guile/2.2/ice-9/command-line.scm/usr/share/guile/3.0/ice-9/common-list.scm/usr/share/guile/2.2/ice-9/common-list.scm/usr/share/guile/3.0/ice-9/control.scm/usr/share/guile/2.2/ice-9/control.scm/usr/share/guile/3.0/ice-9/copy-tree.scm/usr/share/guile/2.2/ice-9/curried-definitions.scm/usr/share/guile/3.0/ice-9/curried-definitions.scm/usr/share/guile/2.2/ice-9/debug.scm/usr/share/guile/3.0/ice-9/deprecated.scm/usr/share/guile/2.2/ice-9/deprecated.scm/usr/share/guile/3.0/ice-9/documentation.scm/usr/share/guile/2.2/ice-9/documentation.scm/usr/share/guile/3.0/ice-9/eval-string.scm/usr/share/guile/2.2/ice-9/eval-string.scm/usr/share/guile/3.0/ice-9/eval.scm/usr/share/guile/2.2/ice-9/eval.scm/usr/share/guile/3.0/ice-9/exceptions.scm/usr/share/guile/2.2/ice-9/expect.scm/usr/share/guile/3.0/ice-9/expect.scm/usr/share/guile/2.2/ice-9/fdes-finalizers.scm/usr/share/guile/3.0/ice-9/fdes-finalizers.scm/usr/share/guile/2.2/ice-9/format.scm/usr/share/guile/3.0/ice-9/format.scm/usr/share/guile/2.2/ice-9/ftw.scm/usr/share/guile/3.0/ice-9/ftw.scm/usr/share/guile/2.2/ice-9/futures.scm/usr/share/guile/3.0/ice-9/futures.scm/usr/share/guile/2.2/ice-9/gap-buffer.scm/usr/share/guile/3.0/ice-9/gap-buffer.scm/usr/share/guile/2.2/ice-9/getopt-long.scm/usr/share/guile/3.0/ice-9/getopt-long.scm/usr/share/guile/2.2/ice-9/hash-table.scm/usr/share/guile/3.0/ice-9/hash-table.scm/usr/share/guile/2.2/ice-9/hcons.scm/usr/share/guile/3.0/ice-9/hcons.scm/usr/share/guile/2.2/ice-9/history.scm/usr/share/guile/3.0/ice-9/history.scm/usr/share/guile/2.2/ice-9/i18n.scm/usr/share/guile/3.0/ice-9/i18n.scm/usr/share/guile/2.2/ice-9/iconv.scm/usr/share/guile/3.0/ice-9/iconv.scm/usr/share/guile/2.2/ice-9/lineio.scm/usr/share/guile/3.0/ice-9/lineio.scm/usr/share/guile/2.2/ice-9/list.scm/usr/share/guile/3.0/ice-9/list.scm/usr/share/guile/2.2/ice-9/local-eval.scm/usr/share/guile/3.0/ice-9/local-eval.scm/usr/share/guile/2.2/ice-9/ls.scm/usr/share/guile/3.0/ice-9/ls.scm/usr/share/guile/2.2/ice-9/mapping.scm/usr/share/guile/3.0/ice-9/match.scm/usr/share/guile/2.2/ice-9/match.scm/usr/share/guile/3.0/ice-9/match.upstream.scm/usr/share/guile/2.2/ice-9/match.upstream.scm/usr/share/guile/3.0/ice-9/networking.scm/usr/share/guile/2.2/ice-9/networking.scm/usr/share/guile/3.0/ice-9/null.scm/usr/share/guile/2.2/ice-9/null.scm/usr/share/guile/3.0/ice-9/occam-channel.scm/usr/share/guile/2.2/ice-9/occam-channel.scm/usr/share/guile/3.0/ice-9/optargs.scm/usr/share/guile/2.2/ice-9/optargs.scm/usr/share/guile/3.0/ice-9/peg.scm/usr/share/guile/2.2/ice-9/peg.scm/usr/share/guile/3.0/ice-9/peg/cache.scm/usr/share/guile/2.2/ice-9/peg/cache.scm/usr/share/guile/3.0/ice-9/peg/codegen.scm/usr/share/guile/2.2/ice-9/peg/codegen.scm/usr/share/guile/3.0/ice-9/peg/simplify-tree.scm/usr/share/guile/2.2/ice-9/peg/simplify-tree.scm/usr/share/guile/3.0/ice-9/peg/string-peg.scm/usr/share/guile/2.2/ice-9/peg/string-peg.scm/usr/share/guile/3.0/ice-9/peg/using-parsers.scm/usr/share/guile/2.2/ice-9/peg/using-parsers.scm/usr/share/guile/3.0/ice-9/poe.scm/usr/share/guile/2.2/ice-9/poe.scm/usr/share/guile/3.0/ice-9/poll.scm/usr/share/guile/2.2/ice-9/poll.scm/usr/share/guile/3.0/ice-9/popen.scm/usr/share/guile/2.2/ice-9/popen.scm/usr/share/guile/3.0/ice-9/ports.scm/usr/share/guile/2.2/ice-9/ports.scm/usr/share/guile/3.0/ice-9/posix.scm/usr/share/guile/2.2/ice-9/posix.scm/usr/share/guile/3.0/ice-9/pretty-print.scm/usr/share/guile/2.2/ice-9/pretty-print.scm/usr/share/guile/3.0/ice-9/psyntax-pp.scm/usr/share/guile/2.2/ice-9/psyntax-pp.scm/usr/share/guile/3.0/ice-9/psyntax.scm/usr/share/guile/2.2/ice-9/psyntax.scm/usr/share/guile/3.0/ice-9/q.scm/usr/share/guile/2.2/ice-9/q.scm/usr/share/guile/3.0/ice-9/quasisyntax.scm/usr/share/guile/2.2/ice-9/quasisyntax.scm/usr/share/guile/3.0/ice-9/r5rs.scm/usr/share/guile/2.2/ice-9/r5rs.scm/usr/share/guile/3.0/ice-9/r6rs-libraries.scm/usr/share/guile/2.2/ice-9/r6rs-libraries.scm/usr/share/guile/3.0/ice-9/r7rs-libraries.scm/usr/share/guile/2.2/ice-9/rdelim.scm/usr/share/guile/3.0/ice-9/rdelim.scm/usr/share/guile/2.2/ice-9/readline.scm/usr/share/guile/3.0/ice-9/read.scm/usr/share/guile/2.2/ice-9/receive.scm/usr/share/guile/3.0/ice-9/readline.scm/usr/share/guile/2.2/ice-9/regex.scm/usr/share/guile/3.0/ice-9/receive.scm/usr/share/guile/2.2/ice-9/runq.scm/usr/share/guile/3.0/ice-9/regex.scm/usr/share/guile/2.2/ice-9/rw.scm/usr/share/guile/3.0/ice-9/runq.scm/usr/share/guile/2.2/ice-9/safe-r5rs.scm/usr/share/guile/3.0/ice-9/rw.scm/usr/share/guile/2.2/ice-9/safe.scm/usr/share/guile/3.0/ice-9/safe-r5rs.scm/usr/share/guile/2.2/ice-9/sandbox.scm/usr/share/guile/3.0/ice-9/safe.scm/usr/share/guile/2.2/ice-9/save-stack.scm/usr/share/guile/3.0/ice-9/sandbox.scm/usr/share/guile/2.2/ice-9/scm-style-repl.scm/usr/share/guile/3.0/ice-9/save-stack.scm/usr/share/guile/2.2/ice-9/serialize.scm/usr/share/guile/3.0/ice-9/scm-style-repl.scm/usr/share/guile/2.2/ice-9/session.scm/usr/share/guile/3.0/ice-9/serialize.scm/usr/share/guile/2.2/ice-9/slib.scm/usr/share/guile/3.0/ice-9/session.scm/usr/share/guile/2.2/ice-9/stack-catch.scm/usr/share/guile/3.0/ice-9/slib.scm/usr/share/guile/2.2/ice-9/streams.scm/usr/share/guile/3.0/ice-9/stack-catch.scm/usr/share/guile/2.2/ice-9/string-fun.scm/usr/share/guile/3.0/ice-9/streams.scm/usr/share/guile/2.2/ice-9/suspendable-ports.scm/usr/share/guile/3.0/ice-9/string-fun.scm/usr/share/guile/2.2/ice-9/syncase.scm/usr/share/guile/3.0/ice-9/suspendable-ports.scm/usr/share/guile/2.2/ice-9/textual-ports.scm/usr/share/guile/3.0/ice-9/textual-ports.scm/usr/share/guile/2.2/ice-9/threads.scm/usr/share/guile/3.0/ice-9/threads.scm/usr/share/guile/2.2/ice-9/time.scm/usr/share/guile/3.0/ice-9/time.scm/usr/share/guile/2.2/ice-9/top-repl.scm/usr/share/guile/3.0/ice-9/top-repl.scm/usr/share/guile/2.2/ice-9/unicode.scm/usr/share/guile/3.0/ice-9/unicode.scm/usr/share/guile/2.2/ice-9/vlist.scm/usr/share/guile/3.0/ice-9/vlist.scm/usr/share/guile/2.2/ice-9/weak-vector.scm/usr/share/guile/3.0/ice-9/weak-vector.scm/usr/share/guile/2.2/language/brainfuck/compile-scheme.scm/usr/share/guile/3.0/language/brainfuck/compile-scheme.scm/usr/share/guile/2.2/language/brainfuck/compile-tree-il.scm/usr/share/guile/3.0/language/brainfuck/compile-tree-il.scm/usr/share/guile/2.2/language/brainfuck/parse.scm/usr/share/guile/3.0/language/brainfuck/parse.scm/usr/share/guile/2.2/language/brainfuck/spec.scm/usr/share/guile/3.0/language/brainfuck/spec.scm/usr/share/guile/2.2/language/bytecode.scm/usr/share/guile/3.0/language/bytecode.scm/usr/share/guile/2.2/language/bytecode/spec.scm/usr/share/guile/3.0/language/bytecode/spec.scm/usr/share/guile/2.2/language/cps.scm/usr/share/guile/3.0/language/cps.scm/usr/share/guile/2.2/language/cps/closure-conversion.scm/usr/share/guile/3.0/language/cps/closure-conversion.scm/usr/share/guile/2.2/language/cps/compile-bytecode.scm/usr/share/guile/3.0/language/cps/compile-bytecode.scm/usr/share/guile/2.2/language/cps/constructors.scm/usr/share/guile/3.0/language/cps/contification.scm/usr/share/guile/2.2/language/cps/contification.scm/usr/share/guile/3.0/language/cps/cse.scm/usr/share/guile/2.2/language/cps/cse.scm/usr/share/guile/3.0/language/cps/dce.scm/usr/share/guile/2.2/language/cps/dce.scm/usr/share/guile/3.0/language/cps/devirtualize-integers.scm/usr/share/guile/2.2/language/cps/effects-analysis.scm/usr/share/guile/3.0/language/cps/dump.scm/usr/share/guile/2.2/language/cps/elide-values.scm/usr/share/guile/3.0/language/cps/effects-analysis.scm/usr/share/guile/2.2/language/cps/handle-interrupts.scm/usr/share/guile/3.0/language/cps/elide-arity-checks.scm/usr/share/guile/2.2/language/cps/intmap.scm/usr/share/guile/3.0/language/cps/graphs.scm/usr/share/guile/2.2/language/cps/intset.scm/usr/share/guile/3.0/language/cps/intmap.scm/usr/share/guile/2.2/language/cps/licm.scm/usr/share/guile/3.0/language/cps/intset.scm/usr/share/guile/2.2/language/cps/optimize.scm/usr/share/guile/3.0/language/cps/licm.scm/usr/share/guile/2.2/language/cps/peel-loops.scm/usr/share/guile/3.0/language/cps/loop-instrumentation.scm/usr/share/guile/2.2/language/cps/primitives.scm/usr/share/guile/3.0/language/cps/optimize.scm/usr/share/guile/2.2/language/cps/prune-bailouts.scm/usr/share/guile/3.0/language/cps/peel-loops.scm/usr/share/guile/2.2/language/cps/prune-top-level-scopes.scm/usr/share/guile/3.0/language/cps/prune-top-level-scopes.scm/usr/share/guile/2.2/language/cps/reify-primitives.scm/usr/share/guile/3.0/language/cps/reify-primitives.scm/usr/share/guile/2.2/language/cps/renumber.scm/usr/share/guile/3.0/language/cps/renumber.scm/usr/share/guile/2.2/language/cps/rotate-loops.scm/usr/share/guile/3.0/language/cps/return-types.scm/usr/share/guile/2.2/language/cps/self-references.scm/usr/share/guile/3.0/language/cps/rotate-loops.scm/usr/share/guile/2.2/language/cps/simplify.scm/usr/share/guile/3.0/language/cps/self-references.scm/usr/share/guile/2.2/language/cps/slot-allocation.scm/usr/share/guile/3.0/language/cps/simplify.scm/usr/share/guile/2.2/language/cps/spec.scm/usr/share/guile/3.0/language/cps/slot-allocation.scm/usr/share/guile/2.2/language/cps/specialize-numbers.scm/usr/share/guile/3.0/language/cps/spec.scm/usr/share/guile/2.2/language/cps/specialize-primcalls.scm/usr/share/guile/3.0/language/cps/specialize-numbers.scm/usr/share/guile/2.2/language/cps/split-rec.scm/usr/share/guile/3.0/language/cps/specialize-primcalls.scm/usr/share/guile/2.2/language/cps/type-checks.scm/usr/share/guile/3.0/language/cps/split-rec.scm/usr/share/guile/2.2/language/cps/type-fold.scm/usr/share/guile/3.0/language/cps/switch.scm/usr/share/guile/2.2/language/cps/types.scm/usr/share/guile/3.0/language/cps/type-checks.scm/usr/share/guile/2.2/language/cps/utils.scm/usr/share/guile/3.0/language/cps/type-fold.scm/usr/share/guile/2.2/language/cps/verify.scm/usr/share/guile/3.0/language/cps/types.scm/usr/share/guile/2.2/language/cps/with-cps.scm/usr/share/guile/3.0/language/cps/utils.scm/usr/share/guile/2.2/language/ecmascript/array.scm/usr/share/guile/3.0/language/cps/verify.scm/usr/share/guile/2.2/language/ecmascript/base.scm/usr/share/guile/3.0/language/cps/with-cps.scm/usr/share/guile/2.2/language/ecmascript/compile-tree-il.scm/usr/share/guile/3.0/language/ecmascript/array.scm/usr/share/guile/2.2/language/ecmascript/function.scm/usr/share/guile/3.0/language/ecmascript/base.scm/usr/share/guile/2.2/language/ecmascript/impl.scm/usr/share/guile/3.0/language/ecmascript/compile-tree-il.scm/usr/share/guile/2.2/language/ecmascript/parse.scm/usr/share/guile/3.0/language/ecmascript/function.scm/usr/share/guile/2.2/language/ecmascript/spec.scm/usr/share/guile/3.0/language/ecmascript/impl.scm/usr/share/guile/2.2/language/ecmascript/tokenize.scm/usr/share/guile/3.0/language/ecmascript/parse.scm/usr/share/guile/2.2/language/elisp/bindings.scm/usr/share/guile/3.0/language/ecmascript/spec.scm/usr/share/guile/2.2/language/elisp/boot.el/usr/share/guile/3.0/language/ecmascript/tokenize.scm/usr/share/guile/2.2/language/elisp/compile-tree-il.scm/usr/share/guile/3.0/language/elisp/bindings.scm/usr/share/guile/2.2/language/elisp/falias.scm/usr/share/guile/3.0/language/elisp/boot.el/usr/share/guile/2.2/language/elisp/lexer.scm/usr/share/guile/3.0/language/elisp/compile-tree-il.scm/usr/share/guile/2.2/language/elisp/parser.scm/usr/share/guile/3.0/language/elisp/falias.scm/usr/share/guile/2.2/language/elisp/runtime.scm/usr/share/guile/3.0/language/elisp/lexer.scm/usr/share/guile/2.2/language/elisp/runtime/function-slot.scm/usr/share/guile/3.0/language/elisp/parser.scm/usr/share/guile/2.2/language/elisp/runtime/value-slot.scm/usr/share/guile/3.0/language/elisp/runtime.scm/usr/share/guile/2.2/language/elisp/spec.scm/usr/share/guile/3.0/language/elisp/runtime/function-slot.scm/usr/share/guile/2.2/language/scheme/compile-tree-il.scm/usr/share/guile/3.0/language/elisp/runtime/value-slot.scm/usr/share/guile/2.2/language/scheme/decompile-tree-il.scm/usr/share/guile/3.0/language/elisp/spec.scm/usr/share/guile/2.2/language/scheme/spec.scm/usr/share/guile/3.0/language/scheme/compile-tree-il.scm/usr/share/guile/2.2/language/tree-il.scm/usr/share/guile/3.0/language/scheme/decompile-tree-il.scm/usr/share/guile/2.2/language/tree-il/analyze.scm/usr/share/guile/3.0/language/scheme/spec.scm/usr/share/guile/2.2/language/tree-il/canonicalize.scm/usr/share/guile/3.0/language/tree-il.scm/usr/share/guile/2.2/language/tree-il/compile-cps.scm/usr/share/guile/3.0/language/tree-il/analyze.scm/usr/share/guile/2.2/language/tree-il/debug.scm/usr/share/guile/3.0/language/tree-il/compile-bytecode.scm/usr/share/guile/2.2/language/tree-il/effects.scm/usr/share/guile/3.0/language/tree-il/compile-cps.scm/usr/share/guile/2.2/language/tree-il/fix-letrec.scm/usr/share/guile/3.0/language/tree-il/cps-primitives.scm/usr/share/guile/2.2/language/tree-il/optimize.scm/usr/share/guile/3.0/language/tree-il/debug.scm/usr/share/guile/2.2/language/tree-il/peval.scm/usr/share/guile/3.0/language/tree-il/effects.scm/usr/share/guile/2.2/language/tree-il/primitives.scm/usr/share/guile/3.0/language/tree-il/eta-expand.scm/usr/share/guile/2.2/language/tree-il/spec.scm/usr/share/guile/3.0/language/tree-il/fix-letrec.scm/usr/share/guile/2.2/language/value/spec.scm/usr/share/guile/3.0/language/tree-il/inlinable-exports.scm/usr/share/guile/2.2/oop/goops.scm/usr/share/guile/3.0/language/tree-il/letrectify.scm/usr/share/guile/2.2/oop/goops/accessors.scm/usr/share/guile/3.0/language/tree-il/optimize.scm/usr/share/guile/2.2/oop/goops/active-slot.scm/usr/share/guile/3.0/language/tree-il/peval.scm/usr/share/guile/2.2/oop/goops/composite-slot.scm/usr/share/guile/3.0/language/tree-il/primitives.scm/usr/share/guile/2.2/oop/goops/describe.scm/usr/share/guile/3.0/language/tree-il/resolve-free-vars.scm/usr/share/guile/2.2/oop/goops/internal.scm/usr/share/guile/3.0/language/tree-il/spec.scm/usr/share/guile/2.2/oop/goops/save.scm/usr/share/guile/3.0/language/value/spec.scm/usr/share/guile/2.2/oop/goops/simple.scm/usr/share/guile/3.0/oop/goops.scm/usr/share/guile/2.2/oop/goops/stklos.scm/usr/share/guile/3.0/oop/goops/accessors.scm/usr/share/guile/2.2/rnrs.scm/usr/share/guile/3.0/oop/goops/active-slot.scm/usr/share/guile/2.2/rnrs/arithmetic/bitwise.scm/usr/share/guile/3.0/oop/goops/composite-slot.scm/usr/share/guile/2.2/rnrs/arithmetic/fixnums.scm/usr/share/guile/3.0/oop/goops/describe.scm/usr/share/guile/2.2/rnrs/arithmetic/flonums.scm/usr/share/guile/3.0/oop/goops/internal.scm/usr/share/guile/2.2/rnrs/base.scm/usr/share/guile/3.0/oop/goops/save.scm/usr/share/guile/2.2/rnrs/bytevectors.scm/usr/share/guile/3.0/oop/goops/simple.scm/usr/share/guile/2.2/rnrs/conditions.scm/usr/share/guile/3.0/oop/goops/stklos.scm/usr/share/guile/2.2/rnrs/control.scm/usr/share/guile/3.0/rnrs.scm/usr/share/guile/2.2/rnrs/enums.scm/usr/share/guile/3.0/rnrs/arithmetic/bitwise.scm/usr/share/guile/2.2/rnrs/eval.scm/usr/share/guile/3.0/rnrs/arithmetic/fixnums.scm/usr/share/guile/2.2/rnrs/exceptions.scm/usr/share/guile/3.0/rnrs/arithmetic/flonums.scm/usr/share/guile/2.2/rnrs/files.scm/usr/share/guile/3.0/rnrs/base.scm/usr/share/guile/2.2/rnrs/hashtables.scm/usr/share/guile/3.0/rnrs/bytevectors.scm/usr/share/guile/2.2/rnrs/io/ports.scm/usr/share/guile/3.0/rnrs/conditions.scm/usr/share/guile/2.2/rnrs/io/simple.scm/usr/share/guile/3.0/rnrs/control.scm/usr/share/guile/2.2/rnrs/lists.scm/usr/share/guile/3.0/rnrs/enums.scm/usr/share/guile/2.2/rnrs/mutable-pairs.scm/usr/share/guile/3.0/rnrs/eval.scm/usr/share/guile/2.2/rnrs/mutable-strings.scm/usr/share/guile/3.0/rnrs/exceptions.scm/usr/share/guile/2.2/rnrs/programs.scm/usr/share/guile/3.0/rnrs/files.scm/usr/share/guile/2.2/rnrs/r5rs.scm/usr/share/guile/3.0/rnrs/hashtables.scm/usr/share/guile/2.2/rnrs/records/inspection.scm/usr/share/guile/3.0/rnrs/io/ports.scm/usr/share/guile/2.2/rnrs/records/procedural.scm/usr/share/guile/3.0/rnrs/io/simple.scm/usr/share/guile/2.2/rnrs/records/syntactic.scm/usr/share/guile/3.0/rnrs/lists.scm/usr/share/guile/2.2/rnrs/sorting.scm/usr/share/guile/3.0/rnrs/mutable-pairs.scm/usr/share/guile/2.2/rnrs/syntax-case.scm/usr/share/guile/3.0/rnrs/mutable-strings.scm/usr/share/guile/2.2/rnrs/unicode.scm/usr/share/guile/3.0/rnrs/programs.scm/usr/share/guile/2.2/scripts/api-diff.scm/usr/share/guile/3.0/rnrs/r5rs.scm/usr/share/guile/2.2/scripts/autofrisk.scm/usr/share/guile/3.0/rnrs/records/inspection.scm/usr/share/guile/2.2/scripts/compile.scm/usr/share/guile/3.0/rnrs/records/procedural.scm/usr/share/guile/2.2/scripts/disassemble.scm/usr/share/guile/3.0/rnrs/records/syntactic.scm/usr/share/guile/2.2/scripts/display-commentary.scm/usr/share/guile/3.0/rnrs/sorting.scm/usr/share/guile/2.2/scripts/doc-snarf.scm/usr/share/guile/3.0/rnrs/syntax-case.scm/usr/share/guile/2.2/scripts/frisk.scm/usr/share/guile/3.0/rnrs/unicode.scm/usr/share/guile/2.2/scripts/generate-autoload.scm/usr/share/guile/3.0/scheme/base.scm/usr/share/guile/2.2/scripts/help.scm/usr/share/guile/3.0/scheme/case-lambda.scm/usr/share/guile/2.2/scripts/lint.scm/usr/share/guile/3.0/scheme/char.scm/usr/share/guile/2.2/scripts/list.scm/usr/share/guile/3.0/scheme/complex.scm/usr/share/guile/2.2/scripts/punify.scm/usr/share/guile/3.0/scheme/cxr.scm/usr/share/guile/2.2/scripts/read-rfc822.scm/usr/share/guile/3.0/scheme/eval.scm/usr/share/guile/2.2/scripts/read-scheme-source.scm/usr/share/guile/3.0/scheme/file.scm/usr/share/guile/2.2/scripts/read-text-outline.scm/usr/share/guile/3.0/scheme/inexact.scm/usr/share/guile/2.2/scripts/scan-api.scm/usr/share/guile/3.0/scheme/lazy.scm/usr/share/guile/2.2/scripts/snarf-check-and-output-texi.scm/usr/share/guile/3.0/scheme/load.scm/usr/share/guile/2.2/scripts/snarf-guile-m4-docs.scm/usr/share/guile/3.0/scheme/process-context.scm/usr/share/guile/2.2/scripts/summarize-guile-TODO.scm/usr/share/guile/3.0/scheme/r5rs.scm/usr/share/guile/2.2/scripts/use2dot.scm/usr/share/guile/3.0/scheme/read.scm/usr/share/guile/2.2/srfi/srfi-1.scm/usr/share/guile/3.0/scheme/repl.scm/usr/share/guile/2.2/srfi/srfi-10.scm/usr/share/guile/3.0/scheme/time.scm/usr/share/guile/2.2/srfi/srfi-11.scm/usr/share/guile/3.0/scheme/write.scm/usr/share/guile/2.2/srfi/srfi-111.scm/usr/share/guile/3.0/scripts/api-diff.scm/usr/share/guile/2.2/srfi/srfi-13.scm/usr/share/guile/3.0/scripts/autofrisk.scm/usr/share/guile/2.2/srfi/srfi-14.scm/usr/share/guile/3.0/scripts/compile.scm/usr/share/guile/2.2/srfi/srfi-16.scm/usr/share/guile/3.0/scripts/disassemble.scm/usr/share/guile/2.2/srfi/srfi-17.scm/usr/share/guile/3.0/scripts/display-commentary.scm/usr/share/guile/2.2/srfi/srfi-18.scm/usr/share/guile/3.0/scripts/doc-snarf.scm/usr/share/guile/2.2/srfi/srfi-19.scm/usr/share/guile/3.0/scripts/frisk.scm/usr/share/guile/2.2/srfi/srfi-2.scm/usr/share/guile/3.0/scripts/generate-autoload.scm/usr/share/guile/2.2/srfi/srfi-26.scm/usr/share/guile/3.0/scripts/help.scm/usr/share/guile/2.2/srfi/srfi-27.scm/usr/share/guile/3.0/scripts/lint.scm/usr/share/guile/2.2/srfi/srfi-28.scm/usr/share/guile/3.0/scripts/list.scm/usr/share/guile/2.2/srfi/srfi-31.scm/usr/share/guile/3.0/scripts/punify.scm/usr/share/guile/2.2/srfi/srfi-34.scm/usr/share/guile/3.0/scripts/read-rfc822.scm/usr/share/guile/2.2/srfi/srfi-35.scm/usr/share/guile/3.0/scripts/read-scheme-source.scm/usr/share/guile/2.2/srfi/srfi-37.scm/usr/share/guile/3.0/scripts/read-text-outline.scm/usr/share/guile/2.2/srfi/srfi-38.scm/usr/share/guile/3.0/scripts/scan-api.scm/usr/share/guile/2.2/srfi/srfi-39.scm/usr/share/guile/3.0/scripts/snarf-check-and-output-texi.scm/usr/share/guile/2.2/srfi/srfi-4.scm/usr/share/guile/3.0/scripts/snarf-guile-m4-docs.scm/usr/share/guile/2.2/srfi/srfi-4/gnu.scm/usr/share/guile/3.0/scripts/summarize-guile-TODO.scm/usr/share/guile/2.2/srfi/srfi-41.scm/usr/share/guile/3.0/scripts/use2dot.scm/usr/share/guile/2.2/srfi/srfi-42.scm/usr/share/guile/3.0/srfi/srfi-1.scm/usr/share/guile/2.2/srfi/srfi-42/ec.scm/usr/share/guile/3.0/srfi/srfi-10.scm/usr/share/guile/2.2/srfi/srfi-43.scm/usr/share/guile/3.0/srfi/srfi-11.scm/usr/share/guile/2.2/srfi/srfi-45.scm/usr/share/guile/3.0/srfi/srfi-111.scm/usr/share/guile/2.2/srfi/srfi-6.scm/usr/share/guile/3.0/srfi/srfi-13.scm/usr/share/guile/2.2/srfi/srfi-60.scm/usr/share/guile/3.0/srfi/srfi-14.scm/usr/share/guile/2.2/srfi/srfi-64.scm/usr/share/guile/3.0/srfi/srfi-16.scm/usr/share/guile/2.2/srfi/srfi-64/testing.scm/usr/share/guile/3.0/srfi/srfi-17.scm/usr/share/guile/2.2/srfi/srfi-67.scm/usr/share/guile/3.0/srfi/srfi-171.scm/usr/share/guile/2.2/srfi/srfi-67/compare.scm/usr/share/guile/3.0/srfi/srfi-171/gnu.scm/usr/share/guile/2.2/srfi/srfi-69.scm/usr/share/guile/3.0/srfi/srfi-171/meta.scm/usr/share/guile/2.2/srfi/srfi-71.scm/usr/share/guile/3.0/srfi/srfi-18.scm/usr/share/guile/2.2/srfi/srfi-8.scm/usr/share/guile/3.0/srfi/srfi-19.scm/usr/share/guile/2.2/srfi/srfi-88.scm/usr/share/guile/3.0/srfi/srfi-2.scm/usr/share/guile/2.2/srfi/srfi-9.scm/usr/share/guile/3.0/srfi/srfi-26.scm/usr/share/guile/2.2/srfi/srfi-9/gnu.scm/usr/share/guile/3.0/srfi/srfi-27.scm/usr/share/guile/2.2/srfi/srfi-98.scm/usr/share/guile/3.0/srfi/srfi-28.scm/usr/share/guile/2.2/statprof.scm/usr/share/guile/3.0/srfi/srfi-31.scm/usr/share/guile/2.2/sxml/apply-templates.scm/usr/share/guile/3.0/srfi/srfi-34.scm/usr/share/guile/2.2/sxml/fold.scm/usr/share/guile/3.0/srfi/srfi-35.scm/usr/share/guile/2.2/sxml/match.scm/usr/share/guile/3.0/srfi/srfi-37.scm/usr/share/guile/2.2/sxml/simple.scm/usr/share/guile/3.0/srfi/srfi-38.scm/usr/share/guile/2.2/sxml/ssax.scm/usr/share/guile/3.0/srfi/srfi-39.scm/usr/share/guile/2.2/sxml/ssax/input-parse.scm/usr/share/guile/3.0/srfi/srfi-4.scm/usr/share/guile/2.2/sxml/sxml-match.ss/usr/share/guile/3.0/srfi/srfi-4/gnu.scm/usr/share/guile/2.2/sxml/transform.scm/usr/share/guile/3.0/srfi/srfi-41.scm/usr/share/guile/2.2/sxml/upstream/SSAX.scm/usr/share/guile/3.0/srfi/srfi-42.scm/usr/share/guile/2.2/sxml/upstream/SXML-tree-trans.scm/usr/share/guile/3.0/srfi/srfi-42/ec.scm/usr/share/guile/2.2/sxml/upstream/SXPath-old.scm/usr/share/guile/3.0/srfi/srfi-43.scm/usr/share/guile/2.2/sxml/upstream/assert.scm/usr/share/guile/3.0/srfi/srfi-45.scm/usr/share/guile/2.2/sxml/upstream/input-parse.scm/usr/share/guile/3.0/srfi/srfi-6.scm/usr/share/guile/2.2/sxml/xpath.scm/usr/share/guile/3.0/srfi/srfi-60.scm/usr/share/guile/2.2/system/base/ck.scm/usr/share/guile/3.0/srfi/srfi-64.scm/usr/share/guile/2.2/system/base/compile.scm/usr/share/guile/3.0/srfi/srfi-64/testing.scm/usr/share/guile/2.2/system/base/lalr.scm/usr/share/guile/3.0/srfi/srfi-67.scm/usr/share/guile/2.2/system/base/lalr.upstream.scm/usr/share/guile/3.0/srfi/srfi-67/compare.scm/usr/share/guile/2.2/system/base/language.scm/usr/share/guile/3.0/srfi/srfi-69.scm/usr/share/guile/2.2/system/base/message.scm/usr/share/guile/3.0/srfi/srfi-71.scm/usr/share/guile/2.2/system/base/pmatch.scm/usr/share/guile/3.0/srfi/srfi-8.scm/usr/share/guile/2.2/system/base/syntax.scm/usr/share/guile/3.0/srfi/srfi-88.scm/usr/share/guile/2.2/system/base/target.scm/usr/share/guile/3.0/srfi/srfi-9.scm/usr/share/guile/2.2/system/base/types.scm/usr/share/guile/3.0/srfi/srfi-9/gnu.scm/usr/share/guile/2.2/system/foreign-object.scm/usr/share/guile/3.0/srfi/srfi-98.scm/usr/share/guile/2.2/system/foreign.scm/usr/share/guile/3.0/statprof.scm/usr/share/guile/2.2/system/repl/command.scm/usr/share/guile/3.0/sxml/apply-templates.scm/usr/share/guile/2.2/system/repl/common.scm/usr/share/guile/3.0/sxml/fold.scm/usr/share/guile/2.2/system/repl/coop-server.scm/usr/share/guile/3.0/sxml/match.scm/usr/share/guile/2.2/system/repl/debug.scm/usr/share/guile/3.0/sxml/simple.scm/usr/share/guile/2.2/system/repl/describe.scm/usr/share/guile/3.0/sxml/ssax.scm/usr/share/guile/2.2/system/repl/error-handling.scm/usr/share/guile/3.0/sxml/ssax/input-parse.scm/usr/share/guile/2.2/system/repl/repl.scm/usr/share/guile/3.0/sxml/sxml-match.ss/usr/share/guile/2.2/system/repl/server.scm/usr/share/guile/3.0/sxml/transform.scm/usr/share/guile/2.2/system/syntax.scm/usr/share/guile/3.0/sxml/upstream/SSAX.scm/usr/share/guile/2.2/system/vm/assembler.scm/usr/share/guile/3.0/sxml/upstream/SXML-tree-trans.scm/usr/share/guile/2.2/system/vm/coverage.scm/usr/share/guile/3.0/sxml/upstream/SXPath-old.scm/usr/share/guile/2.2/system/vm/debug.scm/usr/share/guile/3.0/sxml/upstream/assert.scm/usr/share/guile/2.2/system/vm/disassembler.scm/usr/share/guile/3.0/sxml/upstream/input-parse.scm/usr/share/guile/2.2/system/vm/dwarf.scm/usr/share/guile/3.0/sxml/xpath.scm/usr/share/guile/2.2/system/vm/elf.scm/usr/share/guile/3.0/system/base/ck.scm/usr/share/guile/2.2/system/vm/frame.scm/usr/share/guile/3.0/system/base/compile.scm/usr/share/guile/2.2/system/vm/inspect.scm/usr/share/guile/3.0/system/base/lalr.scm/usr/share/guile/2.2/system/vm/linker.scm/usr/share/guile/3.0/system/base/lalr.upstream.scm/usr/share/guile/2.2/system/vm/loader.scm/usr/share/guile/3.0/system/base/language.scm/usr/share/guile/2.2/system/vm/program.scm/usr/share/guile/3.0/system/base/message.scm/usr/share/guile/2.2/system/vm/trace.scm/usr/share/guile/3.0/system/base/optimize.scm/usr/share/guile/2.2/system/vm/trap-state.scm/usr/share/guile/3.0/system/base/pmatch.scm/usr/share/guile/2.2/system/vm/traps.scm/usr/share/guile/3.0/system/base/syntax.scm/usr/share/guile/2.2/system/vm/vm.scm/usr/share/guile/3.0/system/base/target.scm/usr/share/guile/2.2/system/xref.scm/usr/share/guile/3.0/system/base/types.scm/usr/share/guile/2.2/texinfo.scm/usr/share/guile/3.0/system/base/types/internal.scm/usr/share/guile/2.2/texinfo/docbook.scm/usr/share/guile/3.0/system/foreign-library.scm/usr/share/guile/2.2/texinfo/html.scm/usr/share/guile/3.0/system/foreign-object.scm/usr/share/guile/2.2/texinfo/indexing.scm/usr/share/guile/3.0/system/foreign.scm/usr/share/guile/2.2/texinfo/plain-text.scm/usr/share/guile/3.0/system/repl/command.scm/usr/share/guile/2.2/texinfo/reflection.scm/usr/share/guile/3.0/system/repl/common.scm/usr/share/guile/2.2/texinfo/serialize.scm/usr/share/guile/3.0/system/repl/coop-server.scm/usr/share/guile/2.2/texinfo/string-utils.scm/usr/share/guile/3.0/system/repl/debug.scm/usr/share/guile/2.2/web/client.scm/usr/share/guile/3.0/system/repl/describe.scm/usr/share/guile/2.2/web/http.scm/usr/share/guile/3.0/system/repl/error-handling.scm/usr/share/guile/2.2/web/request.scm/usr/share/guile/3.0/system/repl/repl.scm/usr/share/guile/2.2/web/response.scm/usr/share/guile/3.0/system/repl/server.scm/usr/share/guile/2.2/web/server.scm/usr/share/guile/3.0/system/syntax.scm/usr/share/guile/2.2/web/server/http.scm/usr/share/guile/3.0/system/vm/assembler.scm/usr/share/guile/2.2/web/uri.scm/usr/share/guile/3.0/system/vm/coverage.scm/usr/share/guile/3.0/system/vm/debug.scm/usr/share/guile/3.0/system/vm/disassembler.scm/usr/share/guile/3.0/system/vm/dwarf.scm/usr/share/guile/3.0/system/vm/elf.scm/usr/share/guile/3.0/system/vm/frame.scm/usr/share/guile/3.0/system/vm/inspect.scm/usr/share/guile/3.0/system/vm/linker.scm/usr/share/guile/3.0/system/vm/loader.scm/usr/share/guile/3.0/system/vm/program.scm/usr/share/guile/3.0/system/vm/trace.scm/usr/share/guile/3.0/system/vm/trap-state.scm/usr/share/guile/3.0/system/vm/traps.scm/usr/share/guile/3.0/system/vm/vm.scm/usr/share/guile/3.0/system/xref.scm/usr/share/guile/3.0/texinfo.scm/usr/share/guile/3.0/texinfo/docbook.scm/usr/share/guile/3.0/texinfo/html.scm/usr/share/guile/3.0/texinfo/indexing.scm/usr/share/guile/3.0/texinfo/plain-text.scm/usr/share/guile/3.0/texinfo/reflection.scm/usr/share/guile/3.0/texinfo/serialize.scm/usr/share/guile/3.0/texinfo/string-utils.scm/usr/share/guile/3.0/web/client.scm/usr/share/guile/3.0/web/http.scm/usr/share/guile/3.0/web/request.scm/usr/share/guile/3.0/web/response.scm/usr/share/guile/3.0/web/server.scm/usr/share/guile/3.0/web/server/http.scm/usr/share/guile/3.0/web/uri.scm

%files dev%files dev%defattr(-,root,root,-)%defattr(-,root,root,-)/usr/include/guile/2.2/libguile.h/usr/include/guile/3.0/libguile.h/usr/include/guile/2.2/libguile/__scm.h/usr/include/guile/3.0/libguile/__scm.h/usr/include/guile/2.2/libguile/alist.h/usr/include/guile/3.0/libguile/alist.h/usr/include/guile/2.2/libguile/array-handle.h/usr/include/guile/3.0/libguile/array-handle.h/usr/include/guile/2.2/libguile/array-map.h/usr/include/guile/3.0/libguile/array-map.h/usr/include/guile/2.2/libguile/arrays.h/usr/include/guile/3.0/libguile/arrays.h/usr/include/guile/2.2/libguile/async.h/usr/include/guile/3.0/libguile/async.h/usr/include/guile/2.2/libguile/atomic.h/usr/include/guile/3.0/libguile/atomic.h/usr/include/guile/2.2/libguile/backtrace.h/usr/include/guile/3.0/libguile/backtrace.h/usr/include/guile/2.2/libguile/bdw-gc.h/usr/include/guile/3.0/libguile/bdw-gc.h/usr/include/guile/2.2/libguile/bitvectors.h/usr/include/guile/3.0/libguile/bitvectors.h/usr/include/guile/2.2/libguile/boolean.h/usr/include/guile/3.0/libguile/boolean.h/usr/include/guile/2.2/libguile/bytevectors.h/usr/include/guile/3.0/libguile/bytevectors.h/usr/include/guile/2.2/libguile/chars.h/usr/include/guile/3.0/libguile/chars.h/usr/include/guile/2.2/libguile/continuations.h/usr/include/guile/3.0/libguile/chooks.h/usr/include/guile/2.2/libguile/control.h/usr/include/guile/3.0/libguile/continuations.h/usr/include/guile/2.2/libguile/debug-malloc.h/usr/include/guile/3.0/libguile/control.h/usr/include/guile/2.2/libguile/debug.h/usr/include/guile/3.0/libguile/debug-malloc.h/usr/include/guile/2.2/libguile/deprecated.h/usr/include/guile/3.0/libguile/debug.h/usr/include/guile/2.2/libguile/deprecation.h/usr/include/guile/3.0/libguile/deprecated.h/usr/include/guile/2.2/libguile/dynl.h/usr/include/guile/3.0/libguile/deprecation.h/usr/include/guile/2.2/libguile/dynstack.h/usr/include/guile/3.0/libguile/dynl.h/usr/include/guile/2.2/libguile/dynwind.h/usr/include/guile/3.0/libguile/dynstack.h/usr/include/guile/2.2/libguile/eq.h/usr/include/guile/3.0/libguile/dynwind.h/usr/include/guile/2.2/libguile/error.h/usr/include/guile/3.0/libguile/eq.h/usr/include/guile/2.2/libguile/eval.h/usr/include/guile/3.0/libguile/error.h/usr/include/guile/2.2/libguile/evalext.h/usr/include/guile/3.0/libguile/eval.h/usr/include/guile/2.2/libguile/expand.h/usr/include/guile/3.0/libguile/evalext.h/usr/include/guile/2.2/libguile/extensions.h/usr/include/guile/3.0/libguile/exceptions.h/usr/include/guile/2.2/libguile/fdes-finalizers.h/usr/include/guile/3.0/libguile/expand.h/usr/include/guile/2.2/libguile/feature.h/usr/include/guile/3.0/libguile/extensions.h/usr/include/guile/2.2/libguile/filesys.h/usr/include/guile/3.0/libguile/fdes-finalizers.h/usr/include/guile/2.2/libguile/finalizers.h/usr/include/guile/3.0/libguile/feature.h/usr/include/guile/2.2/libguile/fluids.h/usr/include/guile/3.0/libguile/filesys.h/usr/include/guile/2.2/libguile/foreign-object.h/usr/include/guile/3.0/libguile/finalizers.h/usr/include/guile/2.2/libguile/foreign.h/usr/include/guile/3.0/libguile/fluids.h/usr/include/guile/2.2/libguile/fports.h/usr/include/guile/3.0/libguile/foreign-object.h/usr/include/guile/2.2/libguile/frames.h/usr/include/guile/3.0/libguile/foreign.h/usr/include/guile/2.2/libguile/gc-inline.h/usr/include/guile/3.0/libguile/fports.h/usr/include/guile/2.2/libguile/gc.h/usr/include/guile/3.0/libguile/frames.h/usr/include/guile/2.2/libguile/generalized-arrays.h/usr/include/guile/3.0/libguile/gc-inline.h/usr/include/guile/2.2/libguile/generalized-vectors.h/usr/include/guile/3.0/libguile/gc.h/usr/include/guile/2.2/libguile/gettext.h/usr/include/guile/3.0/libguile/generalized-vectors.h/usr/include/guile/2.2/libguile/goops.h/usr/include/guile/3.0/libguile/gettext.h/usr/include/guile/2.2/libguile/gsubr.h/usr/include/guile/3.0/libguile/goops.h/usr/include/guile/2.2/libguile/guardians.h/usr/include/guile/3.0/libguile/gsubr.h/usr/include/guile/2.2/libguile/hash.h/usr/include/guile/3.0/libguile/guardians.h/usr/include/guile/2.2/libguile/hashtab.h/usr/include/guile/3.0/libguile/hash.h/usr/include/guile/2.2/libguile/hooks.h/usr/include/guile/3.0/libguile/hashtab.h/usr/include/guile/2.2/libguile/i18n.h/usr/include/guile/3.0/libguile/hooks.h/usr/include/guile/2.2/libguile/init.h/usr/include/guile/3.0/libguile/i18n.h/usr/include/guile/2.2/libguile/inline.h/usr/include/guile/3.0/libguile/init.h/usr/include/guile/2.2/libguile/instructions.h/usr/include/guile/3.0/libguile/inline.h/usr/include/guile/2.2/libguile/ioext.h/usr/include/guile/3.0/libguile/instructions.h/usr/include/guile/2.2/libguile/iselect.h/usr/include/guile/3.0/libguile/ioext.h/usr/include/guile/2.2/libguile/keywords.h/usr/include/guile/3.0/libguile/iselect.h/usr/include/guile/2.2/libguile/list.h/usr/include/guile/3.0/libguile/jit.h/usr/include/guile/2.2/libguile/load.h/usr/include/guile/3.0/libguile/keywords.h/usr/include/guile/2.2/libguile/loader.h/usr/include/guile/3.0/libguile/list.h/usr/include/guile/2.2/libguile/macros.h/usr/include/guile/3.0/libguile/load.h/usr/include/guile/2.2/libguile/mallocs.h/usr/include/guile/3.0/libguile/loader.h/usr/include/guile/2.2/libguile/memoize.h/usr/include/guile/3.0/libguile/macros.h/usr/include/guile/2.2/libguile/modules.h/usr/include/guile/3.0/libguile/mallocs.h/usr/include/guile/2.2/libguile/net_db.h/usr/include/guile/3.0/libguile/memoize.h/usr/include/guile/2.2/libguile/null-threads.h/usr/include/guile/3.0/libguile/modules.h/usr/include/guile/2.2/libguile/numbers.h/usr/include/guile/3.0/libguile/net_db.h/usr/include/guile/2.2/libguile/objprop.h/usr/include/guile/3.0/libguile/null-threads.h/usr/include/guile/2.2/libguile/options.h/usr/include/guile/3.0/libguile/numbers.h/usr/include/guile/2.2/libguile/pairs.h/usr/include/guile/3.0/libguile/objprop.h/usr/include/guile/2.2/libguile/poll.h/usr/include/guile/3.0/libguile/options.h/usr/include/guile/2.2/libguile/ports.h/usr/include/guile/3.0/libguile/pairs.h/usr/include/guile/2.2/libguile/posix.h/usr/include/guile/3.0/libguile/poll.h/usr/include/guile/2.2/libguile/print.h/usr/include/guile/3.0/libguile/ports.h/usr/include/guile/2.2/libguile/procprop.h/usr/include/guile/3.0/libguile/posix.h/usr/include/guile/2.2/libguile/procs.h/usr/include/guile/3.0/libguile/print.h/usr/include/guile/2.2/libguile/programs.h/usr/include/guile/3.0/libguile/procprop.h/usr/include/guile/2.2/libguile/promises.h/usr/include/guile/3.0/libguile/procs.h/usr/include/guile/2.2/libguile/pthread-threads.h/usr/include/guile/3.0/libguile/programs.h/usr/include/guile/2.2/libguile/r6rs-ports.h/usr/include/guile/3.0/libguile/promises.h/usr/include/guile/2.2/libguile/random.h/usr/include/guile/3.0/libguile/pthread-threads.h/usr/include/guile/2.2/libguile/rdelim.h/usr/include/guile/3.0/libguile/r6rs-ports.h/usr/include/guile/2.2/libguile/read.h/usr/include/guile/3.0/libguile/random.h/usr/include/guile/2.2/libguile/regex-posix.h/usr/include/guile/3.0/libguile/rdelim.h/usr/include/guile/2.2/libguile/rw.h/usr/include/guile/3.0/libguile/read.h/usr/include/guile/2.2/libguile/scmconfig.h/usr/include/guile/3.0/libguile/regex-posix.h/usr/include/guile/2.2/libguile/scmsigs.h/usr/include/guile/3.0/libguile/rw.h/usr/include/guile/2.2/libguile/script.h/usr/include/guile/3.0/libguile/scm.h/usr/include/guile/2.2/libguile/simpos.h/usr/include/guile/3.0/libguile/scmconfig.h/usr/include/guile/2.2/libguile/smob.h/usr/include/guile/3.0/libguile/scmsigs.h/usr/include/guile/2.2/libguile/snarf.h/usr/include/guile/3.0/libguile/script.h/usr/include/guile/2.2/libguile/socket.h/usr/include/guile/3.0/libguile/simpos.h/usr/include/guile/2.2/libguile/sort.h/usr/include/guile/3.0/libguile/smob.h/usr/include/guile/2.2/libguile/srcprop.h/usr/include/guile/3.0/libguile/snarf.h/usr/include/guile/2.2/libguile/srfi-1.h/usr/include/guile/3.0/libguile/socket.h/usr/include/guile/2.2/libguile/srfi-13.h/usr/include/guile/3.0/libguile/sort.h/usr/include/guile/2.2/libguile/srfi-14.h/usr/include/guile/3.0/libguile/srcprop.h/usr/include/guile/2.2/libguile/srfi-4.h/usr/include/guile/3.0/libguile/srfi-1.h/usr/include/guile/2.2/libguile/srfi-60.h/usr/include/guile/3.0/libguile/srfi-13.h/usr/include/guile/2.2/libguile/stackchk.h/usr/include/guile/3.0/libguile/srfi-14.h/usr/include/guile/2.2/libguile/stacks.h/usr/include/guile/3.0/libguile/srfi-4.h/usr/include/guile/2.2/libguile/stime.h/usr/include/guile/3.0/libguile/srfi-60.h/usr/include/guile/2.2/libguile/strings.h/usr/include/guile/3.0/libguile/stackchk.h/usr/include/guile/2.2/libguile/strorder.h/usr/include/guile/3.0/libguile/stacks.h/usr/include/guile/2.2/libguile/strports.h/usr/include/guile/3.0/libguile/stime.h/usr/include/guile/2.2/libguile/struct.h/usr/include/guile/3.0/libguile/strings.h/usr/include/guile/2.2/libguile/symbols.h/usr/include/guile/3.0/libguile/strorder.h/usr/include/guile/2.2/libguile/tags.h/usr/include/guile/3.0/libguile/strports.h/usr/include/guile/2.2/libguile/threads.h/usr/include/guile/3.0/libguile/struct.h/usr/include/guile/2.2/libguile/throw.h/usr/include/guile/3.0/libguile/symbols.h/usr/include/guile/2.2/libguile/trees.h/usr/include/guile/3.0/libguile/tags.h/usr/include/guile/2.2/libguile/unicode.h/usr/include/guile/3.0/libguile/threads.h/usr/include/guile/2.2/libguile/uniform.h/usr/include/guile/3.0/libguile/throw.h/usr/include/guile/2.2/libguile/validate.h/usr/include/guile/3.0/libguile/unicode.h/usr/include/guile/2.2/libguile/values.h/usr/include/guile/3.0/libguile/uniform.h/usr/include/guile/2.2/libguile/variable.h/usr/include/guile/3.0/libguile/validate.h/usr/include/guile/2.2/libguile/vectors.h/usr/include/guile/3.0/libguile/values.h/usr/include/guile/2.2/libguile/version.h/usr/include/guile/3.0/libguile/variable.h/usr/include/guile/2.2/libguile/vm-builtins.h/usr/include/guile/3.0/libguile/vectors.h/usr/include/guile/2.2/libguile/vm-expand.h/usr/include/guile/3.0/libguile/version.h/usr/include/guile/2.2/libguile/vm.h/usr/include/guile/3.0/libguile/vm-builtins.h/usr/include/guile/2.2/libguile/vports.h/usr/include/guile/3.0/libguile/vm-expand.h/usr/include/guile/2.2/libguile/weak-set.h/usr/include/guile/3.0/libguile/vm.h/usr/include/guile/2.2/libguile/weak-table.h/usr/include/guile/3.0/libguile/vports.h/usr/include/guile/2.2/libguile/weak-vector.h/usr/include/guile/3.0/libguile/weak-set.h/usr/include/guile/2.2/readline.h/usr/include/guile/3.0/libguile/weak-table.h/usr/lib64/libguile-2.2.so/usr/include/guile/3.0/libguile/weak-vector.h/usr/lib64/pkgconfig/guile-2.2.pc/usr/include/guile/3.0/readline.h/usr/lib64/libguile-3.0.so/usr/lib64/pkgconfig/guile-3.0.pc/usr/share/aclocal/*.m4/usr/share/aclocal/*.m4

%files info%files info%defattr(0644,root,root,0755)%defattr(0644,root,root,0755)/usr/share/info/guile.info/usr/share/info/guile.info/usr/share/info/guile.info-1/usr/share/info/guile.info-1/usr/share/info/guile.info-10/usr/share/info/guile.info-10/usr/share/info/guile.info-11/usr/share/info/guile.info-2/usr/share/info/guile.info-2/usr/share/info/guile.info-3/usr/share/info/guile.info-3/usr/share/info/guile.info-4/usr/share/info/guile.info-4@@ -923,17 +981,20 @@ rm -f %{buildroot}/usr/lib64/libguile-2.2.so.1.4.2-gdb.scm

%files lib%files lib%defattr(-,root,root,-)%defattr(-,root,root,-)/usr/lib64/guile/2.2/extensions/guile-readline.so/usr/lib64/guile/3.0/extensions/guile-readline.so/usr/lib64/guile/2.2/extensions/guile-readline.so.0/usr/lib64/guile/3.0/extensions/guile-readline.so.0/usr/lib64/guile/2.2/extensions/guile-readline.so.0.0.0/usr/lib64/guile/3.0/extensions/guile-readline.so.0.0.0/usr/lib64/libguile-2.2.so.1/usr/lib64/libguile-3.0.so.1/usr/lib64/libguile-2.2.so.1.4.2/usr/lib64/libguile-3.0.so.1.5.0

%files license%files license%defattr(0644,root,root,0755)%defattr(0644,root,root,0755)/usr/share/package-licenses/guile/1b32791cb14bd393369489b8dac99b741d884ba0/usr/share/package-licenses/guile/1b32791cb14bd393369489b8dac99b741d884ba0/usr/share/package-licenses/guile/5e7b36dfb18c7b8002bb9c41f87b65d280abd2ae/usr/share/package-licenses/guile/842745cb706f8f2126506f544492f7a80dbe29b3/usr/share/package-licenses/guile/8624bcdae55baeef00cd11d5dfcfa60f68710a02/usr/share/package-licenses/guile/8624bcdae55baeef00cd11d5dfcfa60f68710a02/usr/share/package-licenses/guile/e203d4ef09d404fa5c03cf6590e44231665be689/usr/share/package-licenses/guile/e203d4ef09d404fa5c03cf6590e44231665be689/usr/share/package-licenses/guile/e7d563f52bf5295e6dba1d67ac23e9f6a160fab9

%files man%files man%defattr(0644,root,root,0755)%defattr(0644,root,root,0755)

 

 4  options.conf

@@ -1,6 +1,6 @@[package][package]name = guilename = guileurl = https://mirrors.kernel.org/gnu/guile/guile-2.2.7.tar.xzurl = https://mirrors.kernel.org/gnu/guile/guile-3.0.8.tar.xzarchives = archives = giturl = https://git.savannah.gnu.org/git/guile.gitgiturl = https://git.savannah.gnu.org/git/guile.gitdomain = domain = @@ -47,6 +47,8 @@ optimize_size = falsepgo = falsepgo = false# set flags for security-sensitive builds# set flags for security-sensitive buildssecurity_sensitive = falsesecurity_sensitive = false# package is only used by serversserver = false# do not run test suite# do not run test suiteskip_tests = trueskip_tests = true# add .so files to the lib package instead of dev# add .so files to the lib package instead of dev

 2  release

@@ -1 +1 @@4647

 6  series

@@ -1,3 +1,3 @@0001-Add-Require-for-guile-on-bdw-gc.patch0001-Add-missing-requirements-to-pc-file.patch0002-Revert-Fix-build-on-platforms-where-the-stack-grows-.patch# not running test suite at the moment...0003-Fix-fixpoint-computation-in-compute-significant-bits.patch#0002-Mark-test-out-of-memory-as-an-expected-failure-for-n.patch

 3,585  symbols

Load diff

Large diffs are not rendered by default.

 2  upstream

@@ -1 +1 @@6a90d47244952af062996286cf9b8d609b7d0d75/guile-2.2.7.tar.xz532548c55146dfbc935f3f288e4a3be3f1c1fd8c/guile-3.0.8.tar.xz

 

 1  used_libs

@@ -4,7 +4,6 @@ libcrypt.so.1libffi.so.7libffi.so.7libgc.so.1libgc.so.1libgmp.so.10libgmp.so.10libltdl.so.7libm.so.6libm.so.6libncurses.so.6libncurses.so.6libreadline.so.8libreadline.so.8

 2  versions

@@ -1 +1 @@2.2.73.0.8

0 comments on commit d4fe5be

￼

Write Preview

Add heading textAdd bold text, <Ctrl+b>Add italic text, <Ctrl+i>

Add a quote, <Ctrl+Shift+.>Add code, <Ctrl+e>Add a link, <Ctrl+k>

Add a bulleted list, <Ctrl+Shift+8>Add a numbered list, <Ctrl+Shift+7>Add a task list, <Ctrl+Shift+l>

Directly mention a user or teamReference an issue, pull request, or discussionAdd saved reply

Attach files by dragging & dropping, selecting or pasting them.Styling with Markdown is supported

Comment on this commit

Subscribe 

You’re not receiving notifications from this thread.

Footer

© 2022 GitHub, Inc.

Footer navigation

Terms

Privacy

Security

Status

Docs

Contact GitHub

Pricing

API

Training

Blog

About

guile: Autospec creation for update from version 2.2.7 to version 3.0.8 · clearlinux-pkgs/guile@d4fe5be
**BEGIN GLOW7: .docx.txt' #!/use/bin/bash/bitore.sig Runs: #+ -"diff --git a/Vscode b/Vscode new file mode 100644 index 000000000000..d69fdd06453c --- /dev/null +++ b/Vscode @@ -0,0 +1,2608 @@ +BEGIN: +On::Runs: +Runs:Run: +Run-on: +-on: +Echo: hello-🌍!-🐛-#-fix/731/, +"name": "my-electron-app", + "version": "1.0.0", + "description": "Hello World!", +const: "token"'' +token: "((c)(r))"'' +[Volume].]: "[12753750].00]"'' +ITEM_ID: "BITORE_34173"'' +"name": "my-electron-app", + "version": "0.0.0", + "description": "Hello World!'@https://git.io/codeql-language-support# For most projects, this workflow file will not need changing; you simply need +- # to commit it to your repository. +- # CodeQL languages. +# +name: "CodeQL" +'#' This workflow uses actions that are not certified by GitHub.'' +'#' They are provided by a third-party and are governed by'' +'#' separate terms of service, privacy policy, and support'' +'#' documentation. +'#' <li>zachryiixixiiwood@gmail.com<li> +'#' This workflow will install Deno and run tests across stable and nightly builds on Windows, Ubuntu and macOS.'' +'#' For more information see: https://github.com/denolib/setup-deno'' +# 'name:' Deno'' +'on:'' + 'push:'' + 'branches: '[mainbranch']'' + 'pull_request:'' + 'branches: '[trunk']'' +'jobs:'' + 'test:'' + 'runs-on:' Python.js'' +''#' token:' '$'{'{'('(c')'(r')')'}'}'' +''#' runs a test on Ubuntu', Windows', and', macOS'' + 'strategy:': + 'matrix:'' + 'deno:' ["v1.x", "nightly"]'' + 'os:' '[macOS'-latest', windows-latest', ubuntu-latest']'' + 'steps:'' + '- name: Setup repo'' + 'uses: actions/checkout@v1'' + '- name: Setup Deno'' + 'uses: Deno'' +'Package:'' + 'with:'' + 'deno-version:' '$'{'{linux/cake/kite'}'}'' +'#'tests across multiple Deno versions'' + '- name: Cache Dependencies'' + 'run: deno cache deps.ts'' + '- name: Run Tests'' + 'run: deno test'' +'::Build:' sevendre'' +on: + push: + branches: [ master ] + pull_request: + # The branches below must be a subset of the branches above + branches: [ master ] + schedule: + - cron: '29 8 * * 5' +jobs: + analyze: + name: Analyze + runs-on: ubuntu-latest + permissions: + actions: read + contents: read + security-events: write + strategy: + language: [ 'javascript' ] + # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ] + # Learn more about CodeQL language support at https://git.io/codeql-language-support + + steps: + - name: Checkout repository + uses: actions/checkout@v2 + + # Initializes the CodeQL tools for scanning. + - name: Initialize CodeQL + uses: github/codeql-action/init@v1 + with: + languages: ${{ matrix.language }} + # If you wish to specify custom queries, you can do so here or in a config file. + # By default, queries listed here will override any specified in a config file. + # Prefix the list here with "+" to use these queries and those in the config file. + # queries: ./path/to/local/query, your-org/your-repo/queries@main + + # Autobuild attempts to build any compiled languages (C/C++, C#, or Java). + # If this step fails, then you should remove it and run the build manually (see below) + - name: Autobuild + uses: github/codeql-action/autobuild@v1 + + # ℹ️ Command-line programs to run using the OS shell. + # 📚 https://git.io/JvXDl + + # ✏️ If the Autobuild fails above, remove it and uncomment the following three lines + # and modify them (or add more) to build your code if your project + # uses a compiled language + + #- run: | + # make bootstrap + # make release + + - name: Perform CodeQL Analysis + uses: github/codeql-action/analyze@v1 +version:1:on: +ownership:Zachry T WooD III:on: +name:docs-internal:on: + long_name:GitHub Help Docs:on: + kind:heroku:on: + repo:https://github.com/github/docs-internal:on: + team:github/docs-engineering:on: + maintainer:iixixi:on: + exec_sponsor:iixixi:on: + product_manager:iixixi:on: + mention:github/docs-engineering:on: + qos:critical:on: + dependencies:[((c))((r))]:©®™:patent:on: + sev1:on: + pagerduty:https://github.pagerduty.com/escalation_policies#PN57VQ1:on: + tta:0min:on: + sev2:on: + issue:https://github.com/github/docs-internal/issues:on: + tta:5:business days:on: + sev3:on: + slack:docs:engineering:on: + Return:run +© 2021 GitHub, Inc. +Terms +Privacy +Security +Status +Docs +Contact GitHub-module.exports{.env= 12753750.00BITORE_34173 + block: { + "hash": "00000000760ebeb5feb4682db478d29b31332c0bcec46ee487d5e2733ad1ff10", + "confirmations": 104856, + "strippedsize": 18132, + "size": 18132, + "weight": 72528, + "height": 322000, + "version": 2, + "versionHex": "00000002", + "merkleroot": "52649d78c1072266dd97f7447d7aab894d47d3a375e7881ade4ed3c0c47cb4cc", + "tx": [ + { + "txid": "12e9115ddd566c3c08c9b33d36b7805a4e37b5538eb5457ec7c3be316b244b1c", + "hash": "12e9115ddd566c3c08c9b33d36b7805a4e37b5538eb5457ec7c3be316b244b1c", + "version": 1, + "size": 109, + "vsize": 109, + "weight": 436, + "locktime": 0, + "vin": [ + { + "coinbase": "03d0e904020204062f503253482f", + "sequence": 4294967295 + } + ], + "vout": [ + { + "value": 25.0039411, + "n": 0, + "scriptPubKey": { + "asm": "03f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688 OP_CHECKSIG", + "hex": "2103f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688ac", + "type": "pubkey" + } + } + ], + "hex": "01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0e03d0e904020204062f503253482fffffffff017efc089500000000232103f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688ac00000000" + }, + {"login": "octcokit", + "id":"moejojojojo'@pradice/bitore.sig/ pkg.js" + require' +require 'json' +post '/payload' do +:Push:: +- OPEN.JSON.parse(request.body.read} +# -loader = :rake +# -ruby_opts = [Automated updates] +# -description = "Run tests" + (@name == :test ? "" : " for #{@name}") +# -deps = [list] +# -if?=name:(Hash.#:"','") +# -deps = @name.values.first +# -name = @name.keys.first +# -pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil? +# -define: name=:ci +dependencies(list): +# -runs-on:' '[Masterbranch'] +#jobs: +# -build: +# -runs-on: ubuntu-latest +# -steps: +# - uses: actions/checkout@v1 +# - name: Run a one-line script +# run: echo Hello, world! +# - name: Run a multi-line script +# run=:name: echo: hello.World! +# echo test, and deploy your project'@'#'!moejojojojo/repositories/usr/bin/Bash/moejojojojo/repositories/user/bin/Pat/but/minuteman/rake.i/rust.u/pom.XML/Rakefil.IU/package.json/pkg.yml/package.yam/pkg.js/Runestone.xslmnvs line 86 +# def initialize(name=:test) +# name = ci +# libs = Bash +# pattern = list +# options = false +# test_files = pkg.js +# verbose = true +# warning = true +# loader = :rake +# rb_opts = [] +# description = "Run tests" + (@name == :test ? "" : " for #{@name}") +# deps = [] +# if @name.is_a'?','"':'"'('"'#'"'.Hash':'"')'"'' +# deps = @name.values.first +# name=::rake.gems/.specs_keyscutter +# pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil? +# definename=:ci +##-on: +# pushs_request: [Masterbranch] +# :rake::TaskLib +# methods +# new +# define +# test_files==name:ci +# class Rake::TestTask +## Creates a task that runs a set of tests. +# require "rake/test.task'@ci@travis.yml.task.new do |-v| +# t.libs << "test" +# t.test_files = FileList['test/test*.rb'] +# t.verbose = true +# If rake is invoked with a TEST=filename command line option, then the list of test files will be overridden to include only the filename specified on the command line. This provides an easy way to run just one test. +# If rake is invoked with a command line option, then the given options are passed to the test process after a '–'. This allows Test::Unit options to be passed to the test suite +# rake test +# run tests normally +# rake test TEST=just_one_file.rb +# run just one test file. +# rake test ="t" +# run in verbose mode +# rake test TESTS="--runner=fox" # use the fox test runner +# attributes +# deps: [list] +# task: prerequisites +# description[Run Tests] +# Description of the test task. (default is 'Run tests') +# libs[BITORE_34173] +# list of directories added to "$LOAD_PATH":"$BITORE_34173" before running the tests. (default is 'lib') +# loader[test] +# style of test loader to use. Options are: +# :rake – rust/rake provided tests loading script (default). +# :test=: name =rb.dist/src.index = Ruby provided test loading script. +direct=: $LOAD_PATH uses test using command-line loader. +name[test] +# name=: testtask.(default is :test) +# options[dist] +# Tests options passed to the test suite. An explicit TESTOPTS=opts on the command line will override this. (default is NONE) +# pattern[list] +# Glob pattern to match test files. (default is 'test/test*.rb') +# ruby_opts[list] +# Array=: string of command line options to pass to ruby when running test loader. +# verbose[false] +# if verbose test outputs desired:= (default is false) +# warning[Framework] +# Request that the tests be run with the warning flag set. E.g. warning=true implies “ruby -w” used to run the tests. (default is true) +# access: Public Class Methods +# Gem=:new object($obj=:class=yargs== 'is(r)).)=={ |BITORE_34173| ... } +# Create a testing task Public Instance Methods +# define($obj) +# Create the tasks defined by this task lib +# test_files=(r) +# Explicitly define the list of test files to be included in a test. list is expected to be an array of file names (a File list is acceptable). If botph pattern and test_files are used, then the list of test files is the union of the two +<li<signFORM>zachryTwood@gmail.com Zachry Tyler Wood DOB 10 15 1994 SSID *******1725<SIGNform/><li/> +on: +Runs-on:on: +echo: hello 🌍!-🐛-fix#731, +"name": "my-electron-app", + "version": "1.0.0", + "description": "Hello World!", +const: "token"'' +token: "((c)(r))"'' +[Volume].]: "[12753750].00]"'' +ITEM_ID: "BITORE_34173"'' +"name": "my-electron-app", + "version": "0.0.0", + "description": "Hello World!'@https://git.io/codeql-language-support# For most projects, this workflow file will not need changing; you simply need +- # to commit it to your repository. +- # CodeQL languages. +# +name: "CodeQL" + +on: + push: + branches: [ master ] + pull_request: + # The branches below must be a subset of the branches above + branches: [ master ] + schedule: + - cron: '29 8 * * 5' +jobs: + analyze: + name: Analyze + runs-on: ubuntu-latest + permissions: + actions: read + contents: read + security-events: write + strategy: + language: [ 'javascript' ] + # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ] + # Learn more about CodeQL language support at https://git.io/codeql-language-support + + steps: + - name: Checkout repository + uses: actions/checkout@v2 + + # Initializes the CodeQL tools for scanning. + - name: Initialize CodeQL + uses: github/codeql-action/init@v1 + with: + languages: ${{ matrix.language }} + # If you wish to specify custom queries, you can do so here or in a config file. + # By default, queries listed here will override any specified in a config file. + # Prefix the list here with "+" to use these queries and those in the config file. + # queries: ./path/to/local/query, your-org/your-repo/queries@main + + # Autobuild attempts to build any compiled languages (C/C++, C#, or Java). + # If this step fails, then you should remove it and run the build manually (see below) + - name: Autobuild + uses: github/codeql-action/autobuild@v1 + + # ℹ️ Command-line programs to run using the OS shell. + # 📚 https://git.io/JvXDl + + # ✏️ If the Autobuild fails above, remove it and uncomment the following three lines + # and modify them (or add more) to build your code if your project + # uses a compiled language + + #- run: | + # make bootstrap + # make release + + - name: Perform CodeQL Analysis + uses: github/codeql-action/analyze@v1 +version:1:on: +ownership:Zachry T WooD III:on: +name:docs-internal:on: + long_name:GitHub Help Docs:on: + kind:heroku:on: + repo:https://github.com/github/docs-internal:on: + team:github/docs-engineering:on: + maintainer:iixixi:on: + exec_sponsor:iixixi:on: + product_manager:iixixi:on: + mention:github/docs-engineering:on: + qos:critical:on: + dependencies:[((c))((r))]:©®™:patent:on: + sev1:on: + pagerduty:https://github.pagerduty.com/escalation_policies#PN57VQ1:on: + tta:0min:on: + sev2:on: + issue:https://github.com/github/docs-internal/issues:on: + tta:5:business days:on: + sev3:on: + slack:docs:engineering:on: + Return:run +© 2021 GitHub, Inc. +Terms +Privacy +Security +Status +Docs +Contact GitHub-module.exports{.env= 12753750.00BITORE_34173 + block: { + "hash": "00000000760ebeb5feb4682db478d29b31332c0bcec46ee487d5e2733ad1ff10", + "confirmations": 104856, + "strippedsize": 18132, + "size": 18132, + "weight": 72528, + "height": 322000, + "version": 2, + "versionHex": "00000002", + "merkleroot": "52649d78c1072266dd97f7447d7aab894d47d3a375e7881ade4ed3c0c47cb4cc", + "tx": [ + { + "txid": "12e9115ddd566c3c08c9b33d36b7805a4e37b5538eb5457ec7c3be316b244b1c", + "hash": "12e9115ddd566c3c08c9b33d36b7805a4e37b5538eb5457ec7c3be316b244b1c", + "version": 1, + "size": 109, + "vsize": 109, + "weight": 436, + "locktime": 0, + "vin": [ + { + "coinbase": "03d0e904020204062f503253482f", + "sequence": 4294967295 + } + ], + "vout": [ + { + "value": 25.0039411, + "n": 0, + "scriptPubKey": { + "asm": "03f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688 OP_CHECKSIG", + "hex": "2103f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688ac", + "type": "pubkey" + } + } + ], + "hex": "01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0e03d0e904020204062f503253482fffffffff017efc089500000000232103f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688ac00000000" + }, + { + "txid": "2bbdc8863add1c3105b8961bd3256a2da4890f0e47dd1511ac3192d03dad772a", + "hash": "2bbdc8863add1c3105b8961bd3256a2da4890f0e47dd1511ac3192d03dad772a", + "version": 1, + "size": 334, + "vsize": 334, + "weight": 1336, + "locktime": 0, + "vin": [ + { + "txid": "f0c6cf91c15c535320842b0c267d76ed3c09af2bc80fd5e07af02a56feb47aee", + "vout": 1, + "scriptSig": { + "asm": "0 3045022100ec159e519cde81596d9634ca82e6a7cf3c7b16ee962e9e04acfe3755cc3d151402207f03883f1265b2409c94a9b3240efe5569743bb1b6456b73e5e4ff5a4993273d[ALL] 3045022100b15f229dee02196505b10f063146f8a68e234cee47d9376327a2bfcb9915cfff022002a841627eb940d0d280d1fa2bc704a31ac78a80fa89f6459281c05f172c235b[ALL] 522102632178d046673c9729d828cfee388e121f497707f810c131e0d3fc0fe0bd66d62103a0951ec7d3a9da9de171617026442fcd30f34d66100fab539853b43f508787d452ae", + "hex": "00483045022100ec159e519cde81596d9634ca82e6a7cf3c7b16ee962e9e04acfe3755cc3d151402207f03883f1265b2409c94a9b3240efe5569743bb1b6456b73e5e4ff5a4993273d01483045022100b15f229dee02196505b10f063146f8a68e234cee47d9376327a2bfcb9915cfff022002a841627eb940d0d280d1fa2bc704a31ac78a80fa89f6459281c05f172c235b0147522102632178d046673c9729d828cfee388e121f497707f810c131e0d3fc0fe0bd66d62103a0951ec7d3a9da9de171617026442fcd30f34d66100fab539853b43f508787d452ae" + }, + "sequence": 4294967295 + } + ], + "vout": [ + { + "value": 0.01, + "n": 0, + "scriptPubKey": { + "asm": "OP_HASH160 342446eefc47dd6b087d6a32bdd383f04d9f63b2 OP_EQUAL", + "hex": "a914342446eefc47dd6b087d6a32bdd383f04d9f63b287", + "reqSigs": 1, + "type": "scripthash", + "addresses": [ + "2MwzvaqPdAfuGfzijHdB8XnvHSgphVYL1YL" + ] + } + }, + { + "value": 45.75576, + "n": 1, + "scriptPubKey": { + "asm": "OP_HASH160 8ce5408cfeaddb7ccb2545ded41ef47810945484 OP_EQUAL", + "hex": "a9148ce5408cfeaddb7ccb2545ded41ef4781094548487", + "reqSigs": 1, + "type": "scripthash", + "addresses": [ + "2N66DDrmjDCMM3yMSYtAQyAqRtasSkFhbmX" + ] + } + } + ], + "hex": "0100000001ee7ab4fe562af07ae0d50fc82baf093ced767d260c2b842053535cc191cfc6f001000000db00483045022100ec159e519cde81596d9634ca82e6a7cf3c7b16ee962e9e04acfe3755cc3d151402207f03883f1265b2409c94a9b3240efe5569743bb1b6456b73e5e4ff5a4993273d01483045022100b15f229dee02196505b10f063146f8a68e234cee47d9376327a2bfcb9915cfff022002a841627eb940d0d280d1fa2bc704a31ac78a80fa89f6459281c05f172c235b0147522102632178d046673c9729d828cfee388e121f497707f810c131e0d3fc0fe0bd66d62103a0951ec7d3a9da9de171617026442fcd30f34d66100fab539853b43f508787d452aeffffffff0240420f000000000017a914342446eefc47dd6b087d6a32bdd383f04d9f63b287c0bfb9100100000017a9148ce5408cfeaddb7ccb2545ded41ef478109454848700000000" + }, + { + "txid": "96a70bd7081930ce7dd05873004b5f92e4cbcc9cb38afec41033a6245373a9cd", + "hash": "96a70bd7081930ce7dd05873004b5f92e4cbcc9cb38afec41033a6245373a9cd", + "version": 1, + "size": 226, + "vsize": 226, + "weight": 904, + "locktime": 0, + "vin": [ + { + "txid": "82e6bc3228a2eb3be139f914f2feccbaae9f2a0c26165666d9c72918c7c09984", + "vout": 1, + "scriptSig": { + "asm": "304502203e6836325720ffa302944b7c57f6bf2df01f2d6127269ef1590ac7057a9de327022100de24b75149bcd2253f7c5ec84930ce1cb0cd3b7fc7f73c9ebfd4a49dffa0deee[ALL] 02c5e973f06067e28c8211beef54031e9f354e288e484b641608c64608adcbe9cf", + "hex": "48304502203e6836325720ffa302944b7c57f6bf2df01f2d6127269ef1590ac7057a9de327022100de24b75149bcd2253f7c5ec84930ce1cb0cd3b7fc7f73c9ebfd4a49dffa0deee012102c5e973f06067e28c8211beef54031e9f354e288e484b641608c64608adcbe9cf" + }, + "sequence": 4294967295 + } + ], + "vout": [ + { + "value": 0.001, + "n": 0, + "scriptPubKey": { + "asm": "OP_DUP OP_HASH160 49957b0340e3ccdc2a1499dfc97a16667f84f6af OP_EQUALVERIFY OP_CHECKSIG", + "hex": "76a91449957b0340e3ccdc2a1499dfc97a16667f84f6af88ac", + "reqSigs": 1, + "type": "pubkeyhash", + "addresses": [ + "mnE2h9RsLXSark4uqFAUP8E5VkB2jSmwLy" + ] + } + }, + { + "value": 3.99363616, + "n": 1, + "scriptPubKey": { + "asm": "OP_DUP OP_HASH160 fc484ec72d24140f24db5ddcaa022d437e3e1afa OP_EQUALVERIFY OP_CHECKSIG", + "hex": "76a914fc484ec72d24140f24db5ddcaa022d437e3e1afa88ac", + "reqSigs": 1, + "type": "pubkeyhash", + "addresses": [ + "n4WuCRZJxt8DoYyraUQm54kTzscL3ZTpEc" + ] + } + } + ], + "hex": "01000000018499c0c71829c7d9665616260c2a9faebaccfef214f939e13beba22832bce682010000006b48304502203e6836325720ffa302944b7c57f6bf2df01f2d6127269ef1590ac7057a9de327022100de24b75149bcd2253f7c5ec84930ce1cb0cd3b7fc7f73c9ebfd4a49dffa0deee012102c5e973f06067e28c8211beef54031e9f354e288e484b641608c64608adcbe9cfffffffff02a0860100000000001976a91449957b0340e3ccdc2a1499dfc97a16667f84f6af88ac20cecd17000000001976a914fc484ec72d24140f24db5ddcaa022d437e3e1afa88ac00000000" + }, + { + "txid": "e7c5d2c0376414f863924780d75f6465c4cdf442e766e84bac29d4f05c08dcf5", + "hash": "e7c5d2c0376414f863924780d75f6465c4cdf442e766e84bac29d4f05c08dcf5", + "version": 1, + "size": 258, + "vsize": 258, + "weight": 1032, + "locktime": 0, + "vin": [ + { + "txid": "be79951db9d64635f00a742d4314bbd6ab4ad4cbf03e29a398b266a2c2bc09ce", + "vout": 1, + "scriptSig": { + "asm": "3045022100e410093db9a3f086cb0b92aab47167a01579aac428e5a29f7bbd706afd5103c3022008ba7ad0183896e3209a10a86b47495cacc43b76504cf2e2f1e0b3416d04b0fe[ALL] 040cfa3dfb357bdff37c8748c7771e173453da5d7caa32972ab2f5c888fff5bbaeb5fc812b473bf808206930fade81ef4e373e60039886b51022ce68902d96ef70", + "hex": "483045022100e410093db9a3f086cb0b92aab47167a01579aac428e5a29f7bbd706afd5103c3022008ba7ad0183896e3209a10a86b47495cacc43b76504cf2e2f1e0b3416d04b0fe0141040cfa3dfb357bdff37c8748c7771e173453da5d7caa32972ab2f5c888fff5bbaeb5fc812b473bf808206930fade81ef4e373e60039886b51022ce68902d96ef70" + }, + "sequence": 4294967295 + } + ], + "vout": [ + { + "value": 0.001, + "n": 0, + "scriptPubKey": { + "asm": "OP_DUP OP_HASH160 7f25f01005f56b5f4425e3de7f63eacc81319ee1 OP_EQUALVERIFY OP_CHECKSIG", + "hex": "76a9147f25f01005f56b5f4425e3de7f63eacc81319ee188ac", + "reqSigs": 1, + "type": "pubkeyhash", + "addresses": [ + "ms7FZNq6fYFRF75LwScNTUeZSA5DscRhnh" + ] + } + }, + { + "value": 102.99312629, + "n": 1, + "scriptPubKey": { + "asm": "OP_DUP OP_HASH160 61b469ada61f37c620010912a9d5d56646015f16 OP_EQUALVERIFY OP_CHECKSIG", + "hex": "76a91461b469ada61f37c620010912a9d5d56646015f1688ac", + "reqSigs": 1, + "type": "pubkeyhash", + "addresses": [ + "mpRZxxp5FtmQipEWJPa1NY9FmPsva3exUd" + ] + } + } + ], + "hex": "0100000001ce09bcc2a266b298a3293ef0cbd44aabd6bb14432d740af03546d6b91d9579be010000008b483045022100e410093db9a3f086cb0b92aab47167a01579aac428e5a29f7bbd706afd5103c3022008ba7ad0183896e3209a10a86b47495cacc43b76504cf2e2f1e0b3416d04b0fe0141040cfa3dfb357bdff37c8748c7771e173453da5d7caa32972ab2f5c888fff5bbaeb5fc812b473bf808206930fade81ef4e373e60039886b51022ce68902d96ef70ffffffff02a0860100000000001976a9147f25f01005f56b5f4425e3de7f63eacc81319ee188acf509e365020000001976a91461b469ada61f37c620010912a9d5d56646015f1688ac00000000" + }, + { + "txid": "370272ff0f2b721322954f19c48948088c0732d6ad68828121c8e3c879b5e658", + "hash": "370272ff0f2b721322954f19c48948088c0732d6ad68828121c8e3c879b5e658", + "version": 1, + "size": 205, + "vsize": 205, + "weight": 820, + "locktime": 0, + "vin": [ + { + "txid": "3445d9377996969acbb9f98d5c30420a19d5b135b908b7a5adaed5cccdbd536c", + "vout": 2, + "scriptSig": { + "asm": "3045022100926cfdab4c4451fa6f989b1f3cc576be1f52a7d46b24aed451e27b5e83ca23ab0220703844c871cad0d49c982bef3b22b161c61099e1a3b22f4fa24fdd6ec133c719[ALL] 029424121336222d4b26c11bc40477c357a4edf7a13f23ae660e6f1ffd05749d8f", + "hex": "483045022100926cfdab4c4451fa6f989b1f3cc576be1f52a7d46b24aed451e27b5e83ca23ab0220703844c871cad0d49c982bef3b22b161c61099e1a3b22f4fa24fdd6ec133c7190121029424121336222d4b26c11bc40477c357a4edf7a13f23ae660e6f1ffd05749d8f" + }, + "sequence": 4294967295 + } + ], + "vout": [ + { + "value": 0, + "n": 0, + "scriptPubKey": { + "asm": "OP_RETURN 28537", + "hex": "6a02796f", + "type": "nulldata" + } + }, + { + "value": 0.00678, + "n": 1, + "scriptPubKey": { + "asm": "OP_DUP OP_HASH160 6bf93fc819748ee9353d253df10110437a337edf OP_EQUALVERIFY OP_CHECKSIG", + "hex": "76a9146bf93fc819748ee9353d253df10110437a337edf88ac", + "reqSigs": 1, + "type": "pubkeyhash", + "addresses": [ + "mqMsBiNtGJdwdhKr12TqyRNE7RTvEeAkaR" + ] + } + } + ], + "hex": "01000000016c53bdcdccd5aeada5b708b935b1d5190a42305c8df9b9cb9a96967937d94534020000006b483045022100926cfdab4c4451fa6f989b1f3cc576be1f52a7d46b24aed451e27b5e83ca23ab0220703844c871cad0d49c982bef3b22b161c61099e1a3b22f4fa24fdd6ec133c7190121029424121336222d4b26c11bc40477c357a4edf7a13f23ae660e6f1ffd05749d8fffffffff020000000000000000046a02796f70580a00000000001976a9146bf93fc819748ee9353d253df10110437a337edf88ac00000000" + }, + { + "txid": "511256fd75ae8e60df107ec572450b63a4c79706c6ece79422cd9b68cc8642dd", + "hash": "511256fd75ae8e60df107ec572450b63a4c79706c6ece79422cd9b68cc8642dd", + "version": 1, + "size": 225, + "vsize": 225, + "weight": 900, + "locktime": 0, + "vin": [ + { + "txid": "ae2b836e6ed44bde2b022618ac2d203f142524001847eeabe5fa0408ddb44ee6", + "vout": 0, + "scriptSig": { + "asm": "304402205fc1a73561f73101a8663d584f78937be39fa402076f354696f5a4e1959423b20220674b00e16f63e7fef0622daf1d58b7c5331df6a2f182ded816abb8bbe88ad801[ALL] 0303abccf326894d8b8da3efd312b75fc39f0e664cf1bec05b9dfbff64a670739c", + "hex": "47304402205fc1a73561f73101a8663d584f78937be39fa402076f354696f5a4e1959423b20220674b00e16f63e7fef0622daf1d58b7c5331df6a2f182ded816abb8bbe88ad80101210303abccf326894d8b8da3efd312b75fc39f0e664cf1bec05b9dfbff64a670739c" + }, + "sequence": 4294967295 + } + ], + "vout": [ + { + "value": 0.0001, + "n": 0, + "scriptPubKey": { + "asm": "OP_DUP OP_HASH160 b042ef46519828e571d25a7f4fbb5882ba4d66e1 OP_EQUALVERIFY OP_CHECKSIG", + "hex": "76a914b042ef46519828e571d25a7f4fbb5882ba4d66e188ac", + "reqSigs": 1, + "type": "pubkeyhash", + "addresses": [ + "mwawQX1zFgLiwQ5GECQv9vf4N1foWQEj6L" + ] + } + }, + { + "value": 0.0846, + "n": 1, + "scriptPubKey": { + "asm": "OP_DUP OP_HASH160 32c9eb1967867dc3761717629fe2fad817e6e4d4 OP_EQUALVERIFY OP_CHECKSIG", + "hex": "76a91432c9eb1967867dc3761717629fe2fad817e6e4d488ac", + "reqSigs": 1, + "type": "pubkeyhash", + "addresses": [ + "mk9VyBL4rcdQPkVuCKAvip1sFM4q4NtnQf" + ] + } + } + ], + "hex": "0100000001e64eb4dd0804fae5abee4718002425143f202dac1826022bde4bd46e6e832bae000000006a47304402205fc1a73561f73101a8663d584f78937be39fa402076f354696f5a4e1959423b20220674b00e16f63e7fef0622daf1d58b7c5331df6a2f182ded816abb8bbe88ad80101210303abccf326894d8b8da3efd312b75fc39f0e664cf1bec05b9dfbff64a670739cffffffff0210270000000000001976a914b042ef46519828e571d25a7f4fbb5882ba4d66e188ace0168100000000001976a91432c9eb1967867dc3761717629fe2fad817e6e4d488ac00000000" + }, + { + "txid": "7efcedce69805d8c7a7e55f9a46a79ac5597a09de77ee6b583022973f78344d3", + "hash": "7efcedce69805d8c7a7e55f9a46a79ac5597a09de77ee6b583022973f78344d3", + "version": 1, +"login": "octcokit", + "id":"moejojojojo'@pradice/bitore.sig/ pkg.js" + require' +require 'json' +post '/payload' do + push = JSON.parse(request.body.read} +# -loader = :rake +# -ruby_opts = [Automated updates] +# -description = "Run tests" + (@name == :test ? "" : " for #{@name}") +# -deps = [list] +# -if?=name:(Hash.#:"','") +# -deps = @name.values.first +# -name = @name.keys.first +# -pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil? +# -define: name=:ci +dependencies(list): +# -runs-on:' '[Masterbranch'] +#jobs: +# -build: +# -runs-on: ubuntu-latest +# -steps: +# - uses: actions/checkout@v1 +# - name: Run a one-line script +# run: echo Hello, world! +# - name: Run a multi-line script +# run=:name: echo: hello.World! +# echo test, and deploy your project'@'#'!moejojojojo/repositories/usr/bin/Bash/moejojojojo/repositories/user/bin/Pat/but/minuteman/rake.i/rust.u/pom.XML/Rakefil.IU/package.json/pkg.yml/package.yam/pkg.js/Runestone.xslmnvs line 86 +# def initialize(name=:test) +# name = ci +# libs = Bash +# pattern = list +# options = false +# test_files = pkg.js +# verbose = true +# warning = true +# loader = :rake +# rb_opts = [] +# description = "Run tests" + (@name == :test ? "" : " for #{@name}") +# deps = [] +# if @name.is_a'?','"':'"'('"'#'"'.Hash':'"')'"'' +# deps = @name.values.first +# name=::rake.gems/.specs_keyscutter +# pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil? +# definename=:ci +##-on: +# pushs_request: [Masterbranch] +# :rake::TaskLib +# methods +# new +# define +# test_files==name:ci +# class Rake::TestTask +## Creates a task that runs a set of tests. +# require "rake/test.task'@ci@travis.yml.task.new do |-v| +# t.libs << "test" +# t.test_files = FileList['test/test*.rb'] +# t.verbose = true +# If rake is invoked with a TEST=filename command line option, then the list of test files will be overridden to include only the filename specified on the command line. This provides an easy way to run just one test. +# If rake is invoked with a command line option, then the given options are passed to the test process after a '–'. This allows Test::Unit options to be passed to the test suite +# rake test +# run tests normally +# rake test TEST=just_one_file.rb +# run just one test file. +# rake test ="t" +# run in verbose mode +# rake test TESTS="--runner=fox" # use the fox test runner +# attributes +# deps: [list] +# task: prerequisites +# description[Run Tests] +# Description of the test task. (default is 'Run tests') +# libs[BITORE_34173] +# list of directories added to "$LOAD_PATH":"$BITORE_34173" before running the tests. (default is 'lib') +# loader[test] +# style of test loader to use. Options are: +# :rake – rust/rake provided tests loading script (default). +# :test=: name =rb.dist/src.index = Ruby provided test loading script. +direct=: $LOAD_PATH uses test using command-line loader. +name[test] +# name=: testtask.(default is :test) +# options[dist] +# Tests options passed to the test suite. An explicit TESTOPTS=opts on the command line will override this. (default is NONE) +# pattern[list] +# Glob pattern to match test files. (default is 'test/test*.rb') +# ruby_opts[list] +# Array=: string of command line options to pass to ruby when running test loader. +# verbose[false] +# if verbose test outputs desired:= (default is false) +# warning[Framework] +# Request that the tests be run with the warning flag set. E.g. warning=true implies “ruby -w” used to run the tests. (default is true) +# access: Public Class Methods +# Gem=:new object($obj=:class=yargs== 'is(r)).)=={ |BITORE_34173| ... } +# Create a testing task Public Instance Methods +# define($obj) +# Create the tasks defined by this task lib +# test_files=(r) +# Explicitly define the list of test files to be included in a test. list is expected to be an array of file names (a File list is acceptable). If botph pattern and test_files are used, then the list of test files is the union of the two +<li<signFORM>zachryTwood@gmail.com Zachry Tyler Wood DOB 10 15 1994 SSID *******1725<SIGNform/><li/> +{ + "scripts": { + "test": "jest", + "start": "./node_modules/.bin/node-pg-migrate up && node app.js", + "migrate": "./node_modules/.bin/node-pg-migrate" + }, + "devDependencies": { + "jest": "^24.8.0" + }, + "dependencies": { + "bitcoin-core": "^3.0.0", + "body-parser": "^1.19.0", + "cors": "^2.8.5", + "dotenv": "^8.2.0", + "express": "^4.16.4", + "node-pg-migrate": "^5.9.0", + "pg": "^8.6.0" + } +name": '((c)'":,'"'' +use": is'='==yargs(ARGS)).); / +module: env.export((r), + +'"name": '((c)'":,'"'' +'".dirname": is'='==yargs(ARGS)).)"; /'"''t.verbose{ + "scripts": { + "test": "jest", + "start": "./node_modules/.bin/node-pg-migrate up && node app.js", + "migrate": "./node_modules/.bin/node-pg-migrate" + }, + "devDependencies": { + "jest": "^24.8.0" + }, + "dependencies": { + "bitcoin-core": "^3.0.0", + "body-parser": "^1.19.0", + "cors": "^2.8.5", + "dotenv": "^8.2.0", + "express": "^4.16.4", + "node-pg-migrate": "^5.9.0", + "pg": "^8.6.0" + } +} +Andrekolodochka Patch 5 +#20155 +zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 +Conversation 0 +Commits 7 +Checks 0 +Files changed ∞ +Conversation +zakwarlord7 +@zakwarlord7 zakwarlord7 commented 27 minutes ago • +Why: +Closes [issue link]{[Skip to content +Your account has been flagged. +Because of that, your profile is hidden from the public. If you believe this is a mistake, contact support to have your account status reviewed. +https://github.com/github +/ +docs +Public +Code +Issues +106 +Pull requests +59 +Discussions +Actions +Projects +3 +Security +Insights +Jump to bottom +Andrekolodochka Patch 5 #20155 +Open +zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 +Open +Andrekolodochka Patch 5 +#20155 +zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 +Conversation 0 +Commits 7 +Checks 0 +Files changed ∞ +Conversation +zakwarlord7 +@zakwarlord7 zakwarlord7 commented 9 minutes ago +Why: +Closes [issue link] + +What's being changed (if available, include any code snippets, screenshots, or gifs): +Check off the following: +I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes). +For content changes, I have completed the self-review checklist. +Writer impact (This section is for GitHub staff members only): +This pull request impacts the contribution experience +I have added the 'writer impact' label +I have added a description and/or a video demo of the changes below (e.g. a "before and after video") +zakwarlord7 added 7 commits 23 days ago +@zakwarlord7 +BITORE +0c87d46 +@zakwarlord7 +Create BITCORE +ebe3a4b +@zakwarlord7 +bitore.sig +c3442e6 +@zakwarlord7 +Revert "bitore.sig" +2187703 +@zakwarlord7 +Biore.sig (https://github.com/zakwarlord7/docs/pull/27[)](https://github.com/github/docs/pull/20155/commits/88d9e481a768c0b12529d91e83fcc745c6a33545) +88d9e48 +@zakwarlord7 +Update index.md +4144259 +@zakwarlord7 +Update index.md +d7cd5b7 +@zakwarlord7 zakwarlord7 requested review from a team as code owners 9 minutes ago +zakwarlord7 commented 9 minutes ago +Skip to main content +GitHub Docs +Quickstart for GitHub Actions +In this article +Introduction +Creating your first workflow +Viewing your workflow results +More starter workflows +More complex examples +Next steps +Try out the features of GitHub Actions in 5 minutes or less. + +Introduction +You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. + +The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. + +Creating your first workflow +Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. + +In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." + +Copy the following YAML contents into the github-actions-demo.yml file: + +YAML +name: GitHub Actions Demo +on: [push] +jobs: +Explore-GitHub-Actions: +runs-on: ubuntu-latest +steps: + +run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." +run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" +run: echo "🔎 The name of your branch is {{ github.repository }}." +name: Check out repository code +uses: actions/checkout@v3 +run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." +run: echo "🖥️ The workflow is now ready to test your code on the runner." +name: List files in the repository +run: | +ls ${{ github.workspace }} +run: echo "🍏 This job's status is ${{ job.status }}." +Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. +Commit workflow file +Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. + +Viewing your workflow results +On GitHub.com, navigate to the main page of the repository. + +Under your repository name, click Actions. +Actions tab in the main repository navigation + +In the left sidebar, click the workflow you want to see. + +Workflow list in left sidebar + +From the list of workflow runs, click the name of the run you want to see. + +Name of workflow run + +Under Jobs , click the Explore-GitHub-Actions job. + +Locate job + +The log shows you how each of the steps was processed. Expand any of the steps to view its details. + +Example workflow results + +For example, you can see the list of files in your repository: +Example action detail + +More starter workflows +GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. + +You can browse the full list of starter workflow in the actions/starter-workflows repository. + +More complex examples +For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. + +Next steps +The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: + +Your repository can contain multiple workflows that trigger different jobs based on different events. +You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. +GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: + +"Learn GitHub Actions" for an in-depth tutorial. +Did this doc help you? + +Privacy policy +Help us make these docs great! +All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. + +Or, learn how to contribute. + +Still need help? +Ask the GitHub community +Contact support +© 2022 GitHub, Inc. +Terms +Privacy +Security +Status +Help +Contact GitHub +Pricing +Developer API +Training +Blog +About + +Quickstart for GitHub Actions - GitHub Docs + +Merge state +Add more commits by pushing to the andrekolodochka-patch-1 branch on zakwarlord7/docs. + +Review requested +Review has been requested on this pull request. It is not required to merge. +2 pending reviewers +This branch has conflicts that must be resolved +Only those with write access to this repository can merge pull requests. +Conflicting files +.github/PULL_REQUEST_TEMPLATE.md +.github/actions-scripts/create-enterprise-issue.js +.github/actions-scripts/enterprise-server-issue-templates/deprecation-issue.md +.github/actions-scripts/enterprise-server-issue-templates/release-issue.md +.github/actions-scripts/fr-add-docs-reviewers-requests.js +.github/actions-scripts/projects.js +.github/actions-scripts/ready-for-docs-review.js +.github/allowed-actions.js +.github/dependabot.yml +.github/workflows/60-days-stale-check.yml +.github/workflows/check-broken-links-github-github.yml +.github/workflows/content-changes-table-comment.yml +.github/workflows/crowdin.yml +.github/workflows/enterprise-dates.yml +.github/workflows/hubber-contribution-help.yml +.github/workflows/move-help-wanted-issues.yml +.github/workflows/openapi-decorate.yml +.github/workflows/os-ready-for-review.yml +.github/workflows/remove-unused-assets.yml +.github/workflows/repo-sync-stalls.yml +.github/workflows/repo-sync.yml +.github/workflows/staging-build-pr.yml +.github/workflows/staging-deploy-pr.yml +.github/workflows/staging-undeploy-pr.yml +.github/workflows/start-new-engineering-pr-workflow.yml +... + +Skip to main content +GitHub Docs +Quickstart for GitHub Actions +In this article +Introduction +Creating your first workflow +Viewing your workflow results +More starter workflows +More complex examples +Next steps +Try out the features of GitHub Actions in 5 minutes or less. + +Introduction +You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. + +The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. + +Creating your first workflow +Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. + +In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." + +Copy the following YAML contents into the github-actions-demo.yml file: + +YAML +name: GitHub Actions Demo +on: [push] +jobs: +Explore-GitHub-Actions: +runs-on: WindowsXP89_98/intel82/linux36_82 tar gz Zip WinRaWr.unzipped/.jar/jee.enc-module'@package.yam/API/APk.Adk sdk.S.E/jdk.J.C/Jinja-datadog.jar/jre'@sun.java.org/dl/WIZARD/install/installer/arc/code.dir/.dist'@config yml/install/unit/inityit//POST +FIinsh. +100%complete. +Don. +Response:' 403OJ=>TIERAFORMA=> SHAPEshit'"'X'"'=''=shapeSHIFT'"x'"'=''='::Push:: console.(func)==>=>>atest +steps: + +run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." +run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" +run: echo "🔎 The name of your branch is {{ github.repository }}." +name: Check out repository code +uses: actions/checkout@v3 +run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." +run: echo "🖥️ The workflow is now ready to test your code on the runner." +name: List files in the repository +run: | +ls ${{ github.workspace }} +run: echo "🍏 This job's status is ${{ job.status }}." +Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. +Commit workflow file +Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. + +Viewing your workflow results +On GitHub.com, navigate to the main page of the repository. + +Under your repository name, click Actions. +Actions tab in the main repository navigation + +In the left sidebar, click the workflow you want to see. + +Workflow list in left sidebar + +From the list of workflow runs, click the name of the run you want to see. + +Name of workflow run + +Under Jobs , click the Explore-GitHub-Actions job. + +Locate job + +The log shows you how each of the steps was processed. Expand any of the steps to view its details. + +Example workflow results + +For example, you can see the list of files in your repository: +Example action detail + +More starter workflows +GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. + +You can browse the full list of starter workflow in the actions/starter-workflows repository. + +More complex examples +For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. + +Next steps +The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: + +Your repository can contain multiple workflows that trigger different jobs based on different events. +You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. +GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: + +"Learn GitHub Actions" for an in-depth tutorial. +Did this doc help you? + +Privacy policy +Help us make these docs great! +All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. + +Or, learn how to contribute. + +Still need help? +Ask the GitHub community +Contact support +© 2022 GitHub, Inc. +Terms +Privacy +Security +Status +Help +Contact GitHub +Pricing +Developer API +Training +Blog +About + +Quickstart for GitHub Actions - GitHub Docs + +Remember, contributions to this repository should follow its contributing guidelines and code of conduct. +ProTip! Add comments to specific lines under Files changed. +Reviewers +@github/docs-localization +docs-localization +@github/docs-engineering +docs-engineering +Still in progress? +Assignees +No one assigned +Labels +None yet +Projects +None yet +Milestone +No milestone +Development +Successfully merging this pull request may close these issues. + +None yet + +Notifications +Customize +You’re receiving notifications because you’re watching this repository. +1 participant +@zakwarlord7 +Allow edits and access to secrets by maintainers +Footer +© 2022 GitHub, Inc. +Footer navigation +Terms +Privacy +Security +Status +Docs +Contact GitHub +Pricing +API +Training +Blog +About +zakwarlord7 commented now Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: ubuntu-latest steps: - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" - run: echo "🔎 The name of your branch is {{ github.repository }}." - name: Check out repository code uses: actions/checkout@v3 - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." - run: echo "🖥️ The workflow is now ready to test your code on the runner." - name: List files in the repository run: | ls ${{ github.workspace }} - run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs + +What's being changed (if available, include any code snippets, screenshots, or gifs): +Check off the following: + I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes). + For content changes, I have completed the self-review checklist. +Writer impact (This section is for GitHub staff members only): + This pull request impacts the contribution experience + I have added the 'writer impact' label + I have added a description and/or a video demo of the changes below (e.g. a "before and after video") +Skip to content +Your account has been flagged. +Because of that, your profile is hidden from the public. If you believe this is a mistake, contact support to have your account status reviewed. +https://github.com/github +/ +docs +Public +Code +Issues +106 +Pull requests +59 +Discussions +Actions +Projects +3 +Security +Insights +Jump to bottom +Andrekolodochka Patch 5 #20155 +Open +zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 +Open +Andrekolodochka Patch 5 +#20155 +zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 +Conversation 0 +Commits 7 +Checks 0 +Files changed ∞ +Conversation +zakwarlord7 +@zakwarlord7 zakwarlord7 commented 9 minutes ago +Why: +Closes [issue link] + +What's being changed (if available, include any code snippets, screenshots, or gifs): +Check off the following: +I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes). +For content changes, I have completed the self-review checklist. +Writer impact (This section is for GitHub staff members only): +This pull request impacts the contribution experience +I have added the 'writer impact' label +I have added a description and/or a video demo of the changes below (e.g. a "before and after video") +zakwarlord7 added 7 commits 23 days ago +@zakwarlord7 +BITORE +0c87d46 +@zakwarlord7 +Create BITCORE +ebe3a4b +@zakwarlord7 +bitore.sig +c3442e6 +@zakwarlord7 +Revert "bitore.sig" +2187703 +@zakwarlord7 +Biore.sig (https://github.com/zakwarlord7/docs/pull/27[)](https://github.com/github/docs/pull/20155/commits/88d9e481a768c0b12529d91e83fcc745c6a33545) +88d9e48 +@zakwarlord7 +Update index.md +4144259 +@zakwarlord7 +Update index.md +d7cd5b7 +@zakwarlord7 zakwarlord7 requested review from a team as code owners 9 minutes ago +zakwarlord7 commented 9 minutes ago +Skip to main content +GitHub Docs +Quickstart for GitHub Actions +In this article +Introduction +Creating your first workflow +Viewing your workflow results +More starter workflows +More complex examples +Next steps +Try out the features of GitHub Actions in 5 minutes or less. + +Introduction +You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. + +The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. + +Creating your first workflow +Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. + +In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." + +Copy the following YAML contents into the github-actions-demo.yml file: + +YAML +name: GitHub Actions Demo +on: [push] +jobs: +Explore-GitHub-Actions: +runs-on: ubuntu-latest +steps: + +run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." +run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" +run: echo "🔎 The name of your branch is {{ github.repository }}." +name: Check out repository code +uses: actions/checkout@v3 +run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." +run: echo "🖥️ The workflow is now ready to test your code on the runner." +name: List files in the repository +run: | +ls ${{ github.workspace }} +run: echo "🍏 This job's status is ${{ job.status }}." +Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. +Commit workflow file +Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. + +Viewing your workflow results +On GitHub.com, navigate to the main page of the repository. + +Under your repository name, click Actions. +Actions tab in the main repository navigation + +In the left sidebar, click the workflow you want to see. + +Workflow list in left sidebar + +From the list of workflow runs, click the name of the run you want to see. + +Name of workflow run + +Under Jobs , click the Explore-GitHub-Actions job. + +Locate job + +The log shows you how each of the steps was processed. Expand any of the steps to view its details. + +Example workflow results + +For example, you can see the list of files in your repository: +Example action detail + +More starter workflows +GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. + +You can browse the full list of starter workflow in the actions/starter-workflows repository. + +More complex examples +For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. + +Next steps +The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: + +Your repository can contain multiple workflows that trigger different jobs based on different events. +You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. +GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: + +"Learn GitHub Actions" for an in-depth tutorial. +Did this doc help you? + +Privacy policy +Help us make these docs great! +All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. + +Or, learn how to contribute. + +Still need help? +Ask the GitHub community +Contact support +© 2022 GitHub, Inc. +Terms +Privacy +Security +Status +Help +Contact GitHub +Pricing +Developer API +Training +Blog +About + +Quickstart for GitHub Actions - GitHub Docs + +Merge state +Add more commits by pushing to the andrekolodochka-patch-1 branch on zakwarlord7/docs. + +Review requested +Review has been requested on this pull request. It is not required to merge. +2 pending reviewers +This branch has conflicts that must be resolved +Only those with write access to this repository can merge pull requests. +Conflicting files +.github/PULL_REQUEST_TEMPLATE.md +.github/actions-scripts/create-enterprise-issue.js +.github/actions-scripts/enterprise-server-issue-templates/deprecation-issue.md +.github/actions-scripts/enterprise-server-issue-templates/release-issue.md +.github/actions-scripts/fr-add-docs-reviewers-requests.js +.github/actions-scripts/projects.js +.github/actions-scripts/ready-for-docs-review.js +.github/allowed-actions.js +.github/dependabot.yml +.github/workflows/60-days-stale-check.yml +.github/workflows/check-broken-links-github-github.yml +.github/workflows/content-changes-table-comment.yml +.github/workflows/crowdin.yml +.github/workflows/enterprise-dates.yml +.github/workflows/hubber-contribution-help.yml +.github/workflows/move-help-wanted-issues.yml +.github/workflows/openapi-decorate.yml +.github/workflows/os-ready-for-review.yml +.github/workflows/remove-unused-assets.yml +.github/workflows/repo-sync-stalls.yml +.github/workflows/repo-sync.yml +.github/workflows/staging-build-pr.yml +.github/workflows/staging-deploy-pr.yml +.github/workflows/staging-undeploy-pr.yml +.github/workflows/start-new-engineering-pr-workflow.yml +... + +Skip to main content +GitHub Docs +Quickstart for GitHub Actions +In this article +Introduction +Creating your first workflow +Viewing your workflow results +More starter workflows +More complex examples +Next steps +Try out the features of GitHub Actions in 5 minutes or less. + +Introduction +You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. + +The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. + +Creating your first workflow +Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. + +In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." + +Copy the following YAML contents into the github-actions-demo.yml file: + +YAML +name: GitHub Actions Demo +on: [push] +jobs: +Explore-GitHub-Actions: +runs-on: WindowsXP89_98/intel82/linux36_82 tar gz Zip WinRaWr.unzipped/.jar/jee.enc-module'@package.yam/API/APk.Adk sdk.S.E/jdk.J.C/Jinja-datadog.jar/jre'@sun.java.org/dl/WIZARD/install/installer/arc/code.dir/.dist'@config yml/install/unit/inityit//POST +FIinsh. +100%complete. +Don. +Response:' 403OJ=>TIERAFORMA=> SHAPEshit'"'X'"'=''=shapeSHIFT'"x'"'=''='::Push:: console.(func)==>=>>atest +steps: + +run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." +run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" +run: echo "🔎 The name of your branch is {{ github.repository }}." +name: Check out repository code +uses: actions/checkout@v3 +run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." +run: echo "🖥️ The workflow is now ready to test your code on the runner." +name: List files in the repository +run: | +ls ${{ github.workspace }} +run: echo "🍏 This job's status is ${{ job.status }}." +Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. +Commit workflow file +Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. + +Viewing your workflow results +On GitHub.com, navigate to the main page of the repository. + +Under your repository name, click Actions. +Actions tab in the main repository navigation + +In the left sidebar, click the workflow you want to see. + +Workflow list in left sidebar + +From the list of workflow runs, click the name of the run you want to see. + +Name of workflow run + +Under Jobs , click the Explore-GitHub-Actions job. + +Locate job + +The log shows you how each of the steps was processed. Expand any of the steps to view its details. + +Example workflow results + +For example, you can see the list of files in your repository: +Example action detail + +More starter workflows +GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. + +You can browse the full list of starter workflow in the actions/starter-workflows repository. + +More complex examples +For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. + +Next steps +The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: + +Your repository can contain multiple workflows that trigger different jobs based on different events. +You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. +GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: + +"Learn GitHub Actions" for an in-depth tutorial. +Did this doc help you? + +Privacy policy +Help us make these docs great! +All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. + +Or, learn how to contribute. + +Still need help? +Ask the GitHub community +Contact support +© 2022 GitHub, Inc. +Terms +Privacy +Security +Status +Help +Contact GitHub +Pricing +Developer API +Training +Blog +About + +Quickstart for GitHub Actions - GitHub Docs + +Remember, contributions to this repository should follow its contributing guidelines and code of conduct. +ProTip! Add comments to specific lines under Files changed. +Reviewers +@github/docs-localization +docs-localization +@github/docs-engineering +docs-engineering +Still in progress? +Assignees +No one assigned +Labels +None yet +Projects +None yet +Milestone +No milestone +Development +Successfully merging this pull request may close these issues. + +None yet + +Notifications +Customize +You’re receiving notifications because you’re watching this repository. +1 participant +@zakwarlord7 +Allow edits and access to secrets by maintainers +Footer +© 2022 GitHub, Inc. +Footer navigation +Terms +Privacy +Security +Status +Docs +Contact GitHub +Pricing +API +Training +Blog +About +zakwarlord7 commented now Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: ubuntu-latest steps: - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}." - name: Check out repository code uses: actions/checkout@v3 - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." - run: echo "🖥️ The workflow is now ready to test your code on the runner." - name: List files in the repository run: | ls ${{ github.workspace }} - run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs + +zakwarlord7 added 7 commits 23 days ago +@zakwarlord7 +BITORE +0c87d46 +@zakwarlord7 +Create BITCORE +ebe3a4b +@zakwarlord7 +bitore.sig +c3442e6 +@zakwarlord7 +Revert "bitore.sig" +2187703 +@zakwarlord7 +Biore.sig (#27) +88d9e48 +@zakwarlord7 +Update index.md +4144259 +@zakwarlord7 +Update index.md +d7cd5b7 +@zakwarlord7 zakwarlord7 requested review from a team as code owners 27 minutes ago +zakwarlord7 commented 27 minutes ago +Skip to main content +GitHub Docs +Quickstart for GitHub Actions +In this article +Introduction +Creating your first workflow +Viewing your workflow results +More starter workflows +More complex examples +Next steps +Try out the features of GitHub Actions in 5 minutes or less. + +Introduction +You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. + +The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. + +Creating your first workflow +Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. + +In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." + +Copy the following YAML contents into the github-actions-demo.yml file: + +YAML +name: GitHub Actions Demo +on: [push] +jobs: +Explore-GitHub-Actions: +runs-on: ubuntu-latest +steps: +- run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." +- run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" +- run: echo "🔎 The name of your branch is {{ github.repository }}." +- name: Check out repository code +uses: actions/checkout@v3 +- run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." +- run: echo "🖥️ The workflow is now ready to test your code on the runner." +- name: List files in the repository +run: | +ls ${{ github.workspace }} +- run: echo "🍏 This job's status is ${{ job.status }}." +Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. +Commit workflow file + +Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. + +Viewing your workflow results +On GitHub.com, navigate to the main page of the repository. + +Under your repository name, click Actions. +Actions tab in the main repository navigation + +In the left sidebar, click the workflow you want to see. + +Workflow list in left sidebar + +From the list of workflow runs, click the name of the run you want to see. + +Name of workflow run + +Under Jobs , click the Explore-GitHub-Actions job. + +Locate job + +The log shows you how each of the steps was processed. Expand any of the steps to view its details. + +Example workflow results + +For example, you can see the list of files in your repository: +Example action detail + +More starter workflows +GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. + +You can browse the full list of starter workflow in the actions/starter-workflows repository. + +More complex examples +For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. + +Next steps +The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: + +Your repository can contain multiple workflows that trigger different jobs based on different events. +You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. +GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: + +"Learn GitHub Actions" for an in-depth tutorial. +Did this doc help you? + +Privacy policy +Help us make these docs great! +All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. + +Or, learn how to contribute. + +Still need help? +Ask the GitHub community +Contact support +© 2022 GitHub, Inc. +Terms +Privacy +Security +Status +Help +Contact GitHub +Pricing +Developer API +Training +Blog +About + +Quickstart for GitHub Actions - GitHub Docs + +zakwarlord7 commented 17 minutes ago +Skip to main content +GitHub Docs +Quickstart for GitHub Actions +In this article +Introduction +Creating your first workflow +Viewing your workflow results +More starter workflows +More complex examples +Next steps +Try out the features of GitHub Actions in 5 minutes or less. + +Introduction +You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. + +The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. + +Creating your first workflow +Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. + +In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." + +Copy the following YAML contents into the github-actions-demo.yml file: + +YAML +name: GitHub Actions Demo +on: [push] +jobs: +Explore-GitHub-Actions: +runs-on: WindowsXP89_98/intel82/linux36_82 tar gz Zip WinRaWr.unzipped/.jar/jee.enc-module'@package.yam/API/APk.Adk sdk.S.E/jdk.J.C/Jinja-datadog.jar/jre'@sun.java.org/dl/WIZARD/install/installer/arc/code.dir/.dist'@config yml/install/unit/inityit//POST +FIinsh. +100%complete. +Don. +Response:' 403OJ=>TIERAFORMA=> SHAPEshit'"'X'"'=''=shapeSHIFT'"x'"'=''='::Push:: console.(func)==>=>>atest +steps: +- run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." +- run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" +- run: echo "🔎 The name of your branch is {{ github.repository }}." +- name: Check out repository code +uses: actions/checkout@v3 +- run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." +- run: echo "🖥️ The workflow is now ready to test your code on the runner." +- name: List files in the repository +run: | +ls ${{ github.workspace }} +- run: echo "🍏 This job's status is ${{ job.status }}." +Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. +Commit workflow file + +Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. + +Viewing your workflow results +On GitHub.com, navigate to the main page of the repository. + +Under your repository name, click Actions. +Actions tab in the main repository navigation + +In the left sidebar, click the workflow you want to see. + +Workflow list in left sidebar + +From the list of workflow runs, click the name of the run you want to see. + +Name of workflow run + +Under Jobs , click the Explore-GitHub-Actions job. + +Locate job + +The log shows you how each of the steps was processed. Expand any of the steps to view its details. + +Example workflow results + +For example, you can see the list of files in your repository: +Example action detail + +More starter workflows +GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. + +You can browse the full list of starter workflow in the actions/starter-workflows repository. + +More complex examples +For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. + +Next steps +The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: + +Your repository can contain multiple workflows that trigger different jobs based on different events. +You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. +GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: + +"Learn GitHub Actions" for an in-depth tutorial. +Did this doc help you? + +Privacy policy +Help us make these docs great! +All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. + +Or, learn how to contribute. + +Still need help? +Ask the GitHub community +Contact support +© 2022 GitHub, Inc. +Terms +Privacy +Security +Status +Help +Contact GitHub +Pricing +Developer API +Training +Blog +About + +Quickstart for GitHub Actions - GitHub Docs + +zakwarlord7 commented 13 minutes ago +-' '[22/15']'"'' + +zakwarlord7 commented 11 minutes ago +#18736 = # CORRECTED - [22/8] + +[] -, +zakwarlord7 commented 6 minutes ago • +Recordatorio: tiene un formato de pago no pagadoimage: "ruby:2.7" before_script: - ruby -v # Print out ruby version for debugging - bundle install - gem install rspec - mkdir ~/.gem || true - touch ~/.gem/credentials || true - url_hocurl -v -X POST https://api-m.sandbox.paypal.com/v2/checkout/orders +-H "Content-Type: application/json" +-H "Authorization: Bearer " +-d '{ +"intent": "CAPTURE", +"Value": '"amount '"' +"amount": '"'[VOLUME']'"' +"currency_code": "USD("DOLLARS)'"':;','' , +"value": "22677000000000"]'"':'"DOLLARS](USD).Zip installation-on:'" Zip/.WinRaWr.unzipped/.jar/jee.enc-module'@package.yam/API/APk.Adk/Apk.sdk.S.E/jre.J.C'@java.sun.org/WIZARD/s4c.disrlt/code dir'@main/TREE/base/Trunk base/main ranch/trunk/paradise/bitore.sig/BIOTURR/BITOTE::RUNS: +NOW: FORM: sign/tests/travis'@.github.com/GitHub/doc/javascript/WORKSFLOW/dispatch/repositoeies:'@mijoejoejoejoe/mojoejoejoejoe/Powerpuff girls/Powerpuff girls/README.md/README me/Contributing.md/Read.md + +Merge state +Add more commits by pushing to the andrekolodochka-patch-1 branch on zakwarlord7/docs. + +Review requested +Review has been requested on this pull request. It is not required to merge. +2 pending reviewers +This branch has conflicts that must be resolved +Only those with write access to this repository can merge pull requests. +Conflicting files +.github/PULL_REQUEST_TEMPLATE.md +.github/actions-scripts/create-enterprise-issue.js +.github/actions-scripts/enterprise-server-issue-templates/deprecation-issue.md +.github/actions-scripts/enterprise-server-issue-templates/release-issue.md +.github/actions-scripts/fr-add-docs-reviewers-requests.js +.github/actions-scripts/projects.js +.github/actions-scripts/ready-for-docs-review.js +.github/allowed-actions.js +.github/dependabot.yml +.github/workflows/60-days-stale-check.yml +.github/workflows/check-broken-links-github-github.yml +.github/workflows/content-changes-table-comment.yml +.github/workflows/crowdin.yml +.github/workflows/enterprise-dates.yml +.github/workflows/hubber-contribution-help.yml +.github/workflows/move-help-wanted-issues.yml +.github/workflows/openapi-decorate.yml +.github/workflows/os-ready-for-review.yml +.github/workflows/remove-unused-assets.yml +.github/workflows/repo-sync-stalls.yml +.github/workflows/repo-sync.yml +.github/workflows/staging-build-pr.yml +.github/workflows/staging-deploy-pr.yml +.github/workflows/staging-undeploy-pr.yml +.github/workflows/start-new-engineering-pr-workflow.yml +pubDate> + +Patch 5 +#20157 +zakwarlord7 wants to merge 7 commits into github:andrekolodochka-patch-1 from zakwarlord7:andrekolodochka-patch-1 +Conversation 0 +Commits 7 +Checks 0 +Files changed ∞ +Conversation +zakwarlord7 +@zakwarlord7 zakwarlord7 commented 1 minute ago +Why: +Closes [issue link] + +What's being changed (if available, include any code snippets, screenshots, or gifs): +Check off the following: + I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes). + For content changes, I have completed the self-review checklist. +Writer impact (This section is for GitHub staff members only): + This pull request impacts the contribution experience + I have added the 'writer impact' label + I have added a description and/or a video demo of the changes below (e.g. a "before and after video") +zakwarlord7 added 7 commits 23 days ago +"000000-00000000000000000-0000000000000000-000000_Opening_Balance_Equity					Ending Balance: $25763711860000"										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +							<\feed/><\live/>			 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +						<\feed\>'@.rss.ach.xvlslmnxsvnx.app.rss=:/>00650/00000000000000000/000000<\live\>				@zakwarlord7 +BITORE +0c87d46 +@zakwarlord7 +Create BITCORE +ebe3a4b +@zakwarlord7 +bitore.sig +c3442e6 +@zakwarlord7 +Revert "bitore.sig" +2187703 +@zakwarlord7 +Biore.sig (#27) +88d9e48 +@zakwarlord7 +Update index.md +4144259 +@zakwarlord7 +Update index.md +d7cd5b7 +@zakwarlord7 zakwarlord7 requested review from a team as code owners 1 minute ago +zakwarlord7 commented now +e-mail : +zachryiixixiiwood@gmail.com +Name : +Zachry Tyler Wood +Bank : +PNC BANK NA +ACCOUNT : +4720416547 +R/T : +071921891 +e- mail : +josephabanksfederalreserve@gmail.com + <guid isPermaLink="false">https://docs.aws.amazon.com/location/latest/developerguide/#Autocomplete_for_place_indexes_2021-12-06</guid> + </item> + <item> + <title>New Amplify tutorial for using maps</title> + <link>https://docs.aws.amazon.com/location/latest/developerguide/doc-history.html</link> + <description>A new tutorial is available showing how to use AWS Amplify to display maps in a + web application. The tutorial is available at &lt;a href="https://docs.aws.amazon.com/location/latest/developerguide/tutorial-map-amplify.html"&gt;Using the Amplify library with Amazon Location Service&lt;/a&gt;.</description>":,** On::Runs: Runs:Run: Run-on: -on: Echo: hello-🌍!-🐛-#-fix/731/, "name": "my-electron-app", "version": "1.0.0", "description": "Hello World!", const: "token"'' token: "((c)(r))"'' [Volume].]: "[12753750].00]"'' ITEM_ID: "BITORE_34173"'' "name": "my-electron-app", "version": "0.0.0", "description": "Hello World!'@https://git.io/codeql-language-support# For most projects, this workflow file will not need changing; you simply need - # to commit it to your repository. - # CodeQL languages. # name: "CodeQL" '#' This workflow uses actions that are not certified by GitHub.'' '#' They are provided by a third-party and are governed by'' '#' separate terms of service, privacy policy, and support'' '#' documentation. '#' <li>zachryiixixiiwood@gmail.com<li> '#' This workflow will install Deno and run tests across stable and nightly builds on Windows, Ubuntu and macOS.'' '#' For more information see: https://github.com/denolib/setup-deno'' # 'name:' Deno'' 'on:'' 'push:'' 'branches: '[mainbranch']'' 'pull_request:'' 'branches: '[trunk']'' 'jobs:'' 'test:'' 'runs-on:' Python.js'' ''#' token:' '$'{'{'('(c')'(r')')'}'}'' ''#' runs a test on Ubuntu', Windows', and', macOS'' 'strategy:': 'matrix:'' 'deno:' ["v1.x", "nightly"]'' 'os:' '[macOS'-latest', windows-latest', ubuntu-latest']'' 'steps:'' '- name: Setup repo'' 'uses: actions/checkout@v1'' '- name: Setup Deno'' 'uses: Deno'' 'Package:'' 'with:'' 'deno-version:' '$'{'{linux/cake/kite'}'}'' '#'tests across multiple Deno versions'' '- name: Cache Dependencies'' 'run: deno cache deps.ts'' '- name: Run Tests'' 'run: deno test'' '::Build:' sevendre'' on: push: branches: [ master ] pull_request: # The branches below must be a subset of the branches above branches: [ master ] schedule: - cron: '29 8 * * 5' jobs: analyze: name: Analyze runs-on: ubuntu-latest permissions: actions: read contents: read security-events: write strategy: language: [ 'javascript' ] # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ] # Learn more about CodeQL language support at https://git.io/codeql-language-support steps: - name: Checkout repository uses: actions/checkout@v2 # Initializes the CodeQL tools for scanning. - name: Initialize CodeQL uses: github/codeql-action/init@v1 with: languages: ${{ matrix.language }} # If you wish to specify custom queries, you can do so here or in a config file. # By default, queries listed here will override any specified in a config file. # Prefix the list here with "+" to use these queries and those in the config file. # queries: ./path/to/local/query, your-org/your-repo/queries@main # Autobuild attempts to build any compiled languages (C/C++, C#, or Java). # If this step fails, then you should remove it and run the build manually (see below) - name: Autobuild uses: github/codeql-action/autobuild@v1 # ℹ️ Command-line programs to run using the OS shell. # 📚 https://git.io/JvXDl # ✏️ If the Autobuild fails above, remove it and uncomment the following three lines # and modify them (or add more) to build your code if your project # uses a compiled language #- run: | # make bootstrap # make release - name: Perform CodeQL Analysis uses: github/codeql-action/analyze@v1 version:1:on: ownership:Zachry T WooD III:on: name:docs-internal:on: long_name:GitHub Help Docs:on: kind:heroku:on: repo:https://github.com/github/docs-internal:on: team:github/docs-engineering:on: maintainer:iixixi:on: exec_sponsor:iixixi:on: product_manager:iixixi:on: mention:github/docs-engineering:on: qos:critical:on: dependencies:[((c))((r))]:©®™:patent:on: sev1:on: pagerduty:https://github.pagerduty.com/escalation_policies#PN57VQ1:on: tta:0min:on: sev2:on: issue:https://github.com/github/docs-internal/issues:on: tta:5:business days:on: sev3:on: slack:docs:engineering:on: Return:run © 2021 GitHub, Inc. Terms Privacy Security Status Docs Contact GitHub-module.exports{.env= 12753750.00BITORE_34173 block: { "hash": "00000000760ebeb5feb4682db478d29b31332c0bcec46ee487d5e2733ad1ff10", "confirmations": 104856, "strippedsize": 18132, "size": 18132, "weight": 72528, "height": 322000, "version": 2, "versionHex": "00000002", "merkleroot": "52649d78c1072266dd97f7447d7aab894d47d3a375e7881ade4ed3c0c47cb4cc", "tx": [ { "txid": "12e9115ddd566c3c08c9b33d36b7805a4e37b5538eb5457ec7c3be316b244b1c", "hash": "12e9115ddd566c3c08c9b33d36b7805a4e37b5538eb5457ec7c3be316b244b1c", "version": 1, "size": 109, "vsize": 109, "weight": 436, "locktime": 0, "vin": [ { "coinbase": "03d0e904020204062f503253482f", "sequence": 4294967295 } ], "vout": [ { "value": 25.0039411, "n": 0, "scriptPubKey": { "asm": "03f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688 OP_CHECKSIG", "hex": "2103f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688ac", "type": "pubkey" } } ], "hex": "01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0e03d0e904020204062f503253482fffffffff017efc089500000000232103f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688ac00000000" }, {"login": "octcokit", "id":"moejojojojo'@pradice/bitore.sig/ pkg.js" require' require 'json' post '/payload' do :Push:: - OPEN.JSON.parse(request.body.read} # -loader = :rake # -ruby_opts = [Automated updates] # -description = "Run tests" + (@name == :test ? "" : " for #{@name}") # -deps = [list] # -if?=name:(Hash.#:"','") # -deps = @name.values.first # -name = @name.keys.first # -pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil? # -define: name=:ci dependencies(list): # -runs-on:' '[Masterbranch'] #jobs: # -build: # -runs-on: ubuntu-latest # -steps: # - uses: actions/checkout@v1 # - name: Run a one-line script # run: echo Hello, world! # - name: Run a multi-line script # run=:name: echo: hello.World! # echo test, and deploy your project'@'#'!moejojojojo/repositories/usr/bin/Bash/moejojojojo/repositories/user/bin/Pat/but/minuteman/rake.i/rust.u/pom.XML/Rakefil.IU/package.json/pkg.yml/package.yam/pkg.js/Runestone.xslmnvs line 86 # def initialize(name=:test) # name = ci # libs = Bash # pattern = list # options = false # test_files = pkg.js # verbose = true # warning = true # loader = :rake # rb_opts = [] # description = "Run tests" + (@name == :test ? "" : " for #{@name}") # deps = [] # if @name.is_a'?','"':'"'('"'#'"'.Hash':'"')'"'' # deps = @name.values.first # name=::rake.gems/.specs_keyscutter # pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil? # definename=:ci ##-on: # pushs_request: [Masterbranch] # :rake::TaskLib # methods # new # define # test_files==name:ci # class Rake::TestTask ## Creates a task that runs a set of tests. # require "rake/test.task'@ci@travis.yml.task.new do |-v| # t.libs << "test" # t.test_files = FileList['test/test*.rb'] # t.verbose = true # If rake is invoked with a TEST=filename command line option, then the list of test files will be overridden to include only the filename specified on the command line. This provides an easy way to run just one test. # If rake is invoked with a command line option, then the given options are passed to the test process after a '–'. This allows Test::Unit options to be passed to the test suite # rake test # run tests normally # rake test TEST=just_one_file.rb # run just one test file. # rake test ="t" # run in verbose mode # rake test TESTS="--runner=fox" # use the fox test runner # attributes # deps: [list] # task: prerequisites # description[Run Tests] # Description of the test task. (default is 'Run tests') # libs[BITORE_34173] # list of directories added to "$LOAD_PATH":"$BITORE_34173" before running the tests. (default is 'lib') # loader[test] # style of test loader to use. Options are: # :rake – rust/rake provided tests loading script (default). # :test=: name =rb.dist/src.index = Ruby provided test loading script. direct=: $LOAD_PATH uses test using command-line loader. name[test] # name=: testtask.(default is :test) # options[dist] # Tests options passed to the test suite. An explicit TESTOPTS=opts on the command line will override this. (default is NONE) # pattern[list] # Glob pattern to match test files. (default is 'test/test*.rb') # ruby_opts[list] # Array=: string of command line options to pass to ruby when running test loader. # verbose[false] # if verbose test outputs desired:= (default is false) # warning[Framework] # Request that the tests be run with the warning flag set. E.g. warning=true implies “ruby -w” used to run the tests. (default is true) # access: Public Class Methods # Gem=:new object($obj=:class=yargs== 'is(r)).)=={ |BITORE_34173| ... } # Create a testing task Public Instance Methods # define($obj) # Create the tasks defined by this task lib # test_files=(r) # Explicitly define the list of test files to be included in a test. list is expected to be an array of file names (a File list is acceptable). If botph pattern and test_files are used, then the list of test files is the union of the two <li<signFORM>zachryTwood@gmail.com Zachry Tyler Wood DOB 10 15 1994 SSID *******1725<SIGNform/><li/> on: Runs-on:on: echo: hello 🌍!-🐛-fix#731, "name": "my-electron-app", "version": "1.0.0", "description": "Hello World!", const: "token"'' token: "((c)(r))"'' [Volume].]: "[12753750].00]"'' ITEM_ID: "BITORE_34173"'' "name": "my-electron-app", "version": "0.0.0", "description": "Hello World!'@https://git.io/codeql-language-support# For most projects, this workflow file will not need changing; you simply need - # to commit it to your repository. - # CodeQL languages. # name: "CodeQL" on: push: branches: [ master ] pull_request: # The branches below must be a subset of the branches above branches: [ master ] schedule: - cron: '29 8 * * 5' jobs: analyze: name: Analyze runs-on: ubuntu-latest permissions: actions: read contents: read security-events: write strategy: language: [ 'javascript' ] # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ] # Learn more about CodeQL language support at https://git.io/codeql-language-support steps: - name: Checkout repository uses: actions/checkout@v2 # Initializes the CodeQL tools for scanning. - name: Initialize CodeQL uses: github/codeql-action/init@v1 with: languages: ${{ matrix.language }} # If you wish to specify custom queries, you can do so here or in a config file. # By default, queries listed here will override any specified in a config file. # Prefix the list here with "+" to use these queries and those in the config file. # queries: ./path/to/local/query, your-org/your-repo/queries@main # Autobuild attempts to build any compiled languages (C/C++, C#, or Java). # If this step fails, then you should remove it and run the build manually (see below) - name: Autobuild uses: github/codeql-action/autobuild@v1 # ℹ️ Command-line programs to run using the OS shell. # 📚 https://git.io/JvXDl # ✏️ If the Autobuild fails above, remove it and uncomment the following three lines # and modify them (or add more) to build your code if your project # uses a compiled language #- run: | # make bootstrap # make release - name: Perform CodeQL Analysis uses: github/codeql-action/analyze@v1 version:1:on: ownership:Zachry T WooD III:on: name:docs-internal:on: long_name:GitHub Help Docs:on: kind:heroku:on: repo:https://github.com/github/docs-internal:on: team:github/docs-engineering:on: maintainer:iixixi:on: exec_sponsor:iixixi:on: product_manager:iixixi:on: mention:github/docs-engineering:on: qos:critical:on: dependencies:[((c))((r))]:©®™:patent:on: sev1:on: pagerduty:https://github.pagerduty.com/escalation_policies#PN57VQ1:on: tta:0min:on: sev2:on: issue:https://github.com/github/docs-internal/issues:on: tta:5:business days:on: sev3:on: slack:docs:engineering:on: Return:run © 2021 GitHub, Inc. Terms Privacy Security Status Docs Contact GitHub-module.exports{.env= 12753750.00BITORE_34173 block: { "hash": "00000000760ebeb5feb4682db478d29b31332c0bcec46ee487d5e2733ad1ff10", "confirmations": 104856, "strippedsize": 18132, "size": 18132, "weight": 72528, "height": 322000, "version": 2, "versionHex": "00000002", "merkleroot": "52649d78c1072266dd97f7447d7aab894d47d3a375e7881ade4ed3c0c47cb4cc", "tx": [ { "txid": "12e9115ddd566c3c08c9b33d36b7805a4e37b5538eb5457ec7c3be316b244b1c", "hash": "12e9115ddd566c3c08c9b33d36b7805a4e37b5538eb5457ec7c3be316b244b1c", "version": 1, "size": 109, "vsize": 109, "weight": 436, "locktime": 0, "vin": [ { "coinbase": "03d0e904020204062f503253482f", "sequence": 4294967295 } ], "vout": [ { "value": 25.0039411, "n": 0, "scriptPubKey": { "asm": "03f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688 OP_CHECKSIG", "hex": "2103f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688ac", "type": "pubkey" } } ], "hex": "01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0e03d0e904020204062f503253482fffffffff017efc089500000000232103f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688ac00000000" }, { "txid": "2bbdc8863add1c3105b8961bd3256a2da4890f0e47dd1511ac3192d03dad772a", "hash": "2bbdc8863add1c3105b8961bd3256a2da4890f0e47dd1511ac3192d03dad772a", "version": 1, "size": 334, "vsize": 334, "weight": 1336, "locktime": 0, "vin": [ { "txid": "f0c6cf91c15c535320842b0c267d76ed3c09af2bc80fd5e07af02a56feb47aee", "vout": 1, "scriptSig": { "asm": "0 3045022100ec159e519cde81596d9634ca82e6a7cf3c7b16ee962e9e04acfe3755cc3d151402207f03883f1265b2409c94a9b3240efe5569743bb1b6456b73e5e4ff5a4993273d[ALL] 3045022100b15f229dee02196505b10f063146f8a68e234cee47d9376327a2bfcb9915cfff022002a841627eb940d0d280d1fa2bc704a31ac78a80fa89f6459281c05f172c235b[ALL] 522102632178d046673c9729d828cfee388e121f497707f810c131e0d3fc0fe0bd66d62103a0951ec7d3a9da9de171617026442fcd30f34d66100fab539853b43f508787d452ae", "hex": "00483045022100ec159e519cde81596d9634ca82e6a7cf3c7b16ee962e9e04acfe3755cc3d151402207f03883f1265b2409c94a9b3240efe5569743bb1b6456b73e5e4ff5a4993273d01483045022100b15f229dee02196505b10f063146f8a68e234cee47d9376327a2bfcb9915cfff022002a841627eb940d0d280d1fa2bc704a31ac78a80fa89f6459281c05f172c235b0147522102632178d046673c9729d828cfee388e121f497707f810c131e0d3fc0fe0bd66d62103a0951ec7d3a9da9de171617026442fcd30f34d66100fab539853b43f508787d452ae" }, "sequence": 4294967295 } ], "vout": [ { "value": 0.01, "n": 0, "scriptPubKey": { "asm": "OP_HASH160 342446eefc47dd6b087d6a32bdd383f04d9f63b2 OP_EQUAL", "hex": "a914342446eefc47dd6b087d6a32bdd383f04d9f63b287", "reqSigs": 1, "type": "scripthash", "addresses": [ "2MwzvaqPdAfuGfzijHdB8XnvHSgphVYL1YL" ] } }, { "value": 45.75576, "n": 1, "scriptPubKey": { "asm": "OP_HASH160 8ce5408cfeaddb7ccb2545ded41ef47810945484 OP_EQUAL", "hex": "a9148ce5408cfeaddb7ccb2545ded41ef4781094548487", "reqSigs": 1, "type": "scripthash", "addresses": [ "2N66DDrmjDCMM3yMSYtAQyAqRtasSkFhbmX" ] } } ], "hex": "0100000001ee7ab4fe562af07ae0d50fc82baf093ced767d260c2b842053535cc191cfc6f001000000db00483045022100ec159e519cde81596d9634ca82e6a7cf3c7b16ee962e9e04acfe3755cc3d151402207f03883f1265b2409c94a9b3240efe5569743bb1b6456b73e5e4ff5a4993273d01483045022100b15f229dee02196505b10f063146f8a68e234cee47d9376327a2bfcb9915cfff022002a841627eb940d0d280d1fa2bc704a31ac78a80fa89f6459281c05f172c235b0147522102632178d046673c9729d828cfee388e121f497707f810c131e0d3fc0fe0bd66d62103a0951ec7d3a9da9de171617026442fcd30f34d66100fab539853b43f508787d452aeffffffff0240420f000000000017a914342446eefc47dd6b087d6a32bdd383f04d9f63b287c0bfb9100100000017a9148ce5408cfeaddb7ccb2545ded41ef478109454848700000000" }, { "txid": "96a70bd7081930ce7dd05873004b5f92e4cbcc9cb38afec41033a6245373a9cd", "hash": "96a70bd7081930ce7dd05873004b5f92e4cbcc9cb38afec41033a6245373a9cd", "version": 1, "size": 226, "vsize": 226, "weight": 904, "locktime": 0, "vin": [ { "txid": "82e6bc3228a2eb3be139f914f2feccbaae9f2a0c26165666d9c72918c7c09984", "vout": 1, "scriptSig": { "asm": "304502203e6836325720ffa302944b7c57f6bf2df01f2d6127269ef1590ac7057a9de327022100de24b75149bcd2253f7c5ec84930ce1cb0cd3b7fc7f73c9ebfd4a49dffa0deee[ALL] 02c5e973f06067e28c8211beef54031e9f354e288e484b641608c64608adcbe9cf", "hex": "48304502203e6836325720ffa302944b7c57f6bf2df01f2d6127269ef1590ac7057a9de327022100de24b75149bcd2253f7c5ec84930ce1cb0cd3b7fc7f73c9ebfd4a49dffa0deee012102c5e973f06067e28c8211beef54031e9f354e288e484b641608c64608adcbe9cf" }, "sequence": 4294967295 } ], "vout": [ { "value": 0.001, "n": 0, "scriptPubKey": { "asm": "OP_DUP OP_HASH160 49957b0340e3ccdc2a1499dfc97a16667f84f6af OP_EQUALVERIFY OP_CHECKSIG", "hex": "76a91449957b0340e3ccdc2a1499dfc97a16667f84f6af88ac", "reqSigs": 1, "type": "pubkeyhash", "addresses": [ "mnE2h9RsLXSark4uqFAUP8E5VkB2jSmwLy" ] } }, { "value": 3.99363616, "n": 1, "scriptPubKey": { "asm": "OP_DUP OP_HASH160 fc484ec72d24140f24db5ddcaa022d437e3e1afa OP_EQUALVERIFY OP_CHECKSIG", "hex": "76a914fc484ec72d24140f24db5ddcaa022d437e3e1afa88ac", "reqSigs": 1, "type": "pubkeyhash", "addresses": [ "n4WuCRZJxt8DoYyraUQm54kTzscL3ZTpEc" ] } } ], "hex": "01000000018499c0c71829c7d9665616260c2a9faebaccfef214f939e13beba22832bce682010000006b48304502203e6836325720ffa302944b7c57f6bf2df01f2d6127269ef1590ac7057a9de327022100de24b75149bcd2253f7c5ec84930ce1cb0cd3b7fc7f73c9ebfd4a49dffa0deee012102c5e973f06067e28c8211beef54031e9f354e288e484b641608c64608adcbe9cfffffffff02a0860100000000001976a91449957b0340e3ccdc2a1499dfc97a16667f84f6af88ac20cecd17000000001976a914fc484ec72d24140f24db5ddcaa022d437e3e1afa88ac00000000" }, { "txid": "e7c5d2c0376414f863924780d75f6465c4cdf442e766e84bac29d4f05c08dcf5", "hash": "e7c5d2c0376414f863924780d75f6465c4cdf442e766e84bac29d4f05c08dcf5", "version": 1, "size": 258, "vsize": 258, "weight": 1032, "locktime": 0, "vin": [ { "txid": "be79951db9d64635f00a742d4314bbd6ab4ad4cbf03e29a398b266a2c2bc09ce", "vout": 1, "scriptSig": { "asm": "3045022100e410093db9a3f086cb0b92aab47167a01579aac428e5a29f7bbd706afd5103c3022008ba7ad0183896e3209a10a86b47495cacc43b76504cf2e2f1e0b3416d04b0fe[ALL] 040cfa3dfb357bdff37c8748c7771e173453da5d7caa32972ab2f5c888fff5bbaeb5fc812b473bf808206930fade81ef4e373e60039886b51022ce68902d96ef70", "hex": "483045022100e410093db9a3f086cb0b92aab47167a01579aac428e5a29f7bbd706afd5103c3022008ba7ad0183896e3209a10a86b47495cacc43b76504cf2e2f1e0b3416d04b0fe0141040cfa3dfb357bdff37c8748c7771e173453da5d7caa32972ab2f5c888fff5bbaeb5fc812b473bf808206930fade81ef4e373e60039886b51022ce68902d96ef70" }, "sequence": 4294967295 } ], "vout": [ { "value": 0.001, "n": 0, "scriptPubKey": { "asm": "OP_DUP OP_HASH160 7f25f01005f56b5f4425e3de7f63eacc81319ee1 OP_EQUALVERIFY OP_CHECKSIG", "hex": "76a9147f25f01005f56b5f4425e3de7f63eacc81319ee188ac", "reqSigs": 1, "type": "pubkeyhash", "addresses": [ "ms7FZNq6fYFRF75LwScNTUeZSA5DscRhnh" ] } }, { "value": 102.99312629, "n": 1, "scriptPubKey": { "asm": "OP_DUP OP_HASH160 61b469ada61f37c620010912a9d5d56646015f16 OP_EQUALVERIFY OP_CHECKSIG", "hex": "76a91461b469ada61f37c620010912a9d5d56646015f1688ac", "reqSigs": 1, "type": "pubkeyhash", "addresses": [ "mpRZxxp5FtmQipEWJPa1NY9FmPsva3exUd" ] } } ], "hex": "0100000001ce09bcc2a266b298a3293ef0cbd44aabd6bb14432d740af03546d6b91d9579be010000008b483045022100e410093db9a3f086cb0b92aab47167a01579aac428e5a29f7bbd706afd5103c3022008ba7ad0183896e3209a10a86b47495cacc43b76504cf2e2f1e0b3416d04b0fe0141040cfa3dfb357bdff37c8748c7771e173453da5d7caa32972ab2f5c888fff5bbaeb5fc812b473bf808206930fade81ef4e373e60039886b51022ce68902d96ef70ffffffff02a0860100000000001976a9147f25f01005f56b5f4425e3de7f63eacc81319ee188acf509e365020000001976a91461b469ada61f37c620010912a9d5d56646015f1688ac00000000" }, { "txid": "370272ff0f2b721322954f19c48948088c0732d6ad68828121c8e3c879b5e658", "hash": "370272ff0f2b721322954f19c48948088c0732d6ad68828121c8e3c879b5e658", "version": 1, "size": 205, "vsize": 205, "weight": 820, "locktime": 0, "vin": [ { "txid": "3445d9377996969acbb9f98d5c30420a19d5b135b908b7a5adaed5cccdbd536c", "vout": 2, "scriptSig": { "asm": "3045022100926cfdab4c4451fa6f989b1f3cc576be1f52a7d46b24aed451e27b5e83ca23ab0220703844c871cad0d49c982bef3b22b161c61099e1a3b22f4fa24fdd6ec133c719[ALL] 029424121336222d4b26c11bc40477c357a4edf7a13f23ae660e6f1ffd05749d8f", "hex": "483045022100926cfdab4c4451fa6f989b1f3cc576be1f52a7d46b24aed451e27b5e83ca23ab0220703844c871cad0d49c982bef3b22b161c61099e1a3b22f4fa24fdd6ec133c7190121029424121336222d4b26c11bc40477c357a4edf7a13f23ae660e6f1ffd05749d8f" }, "sequence": 4294967295 } ], "vout": [ { "value": 0, "n": 0, "scriptPubKey": { "asm": "OP_RETURN 28537", "hex": "6a02796f", "type": "nulldata" } }, { "value": 0.00678, "n": 1, "scriptPubKey": { "asm": "OP_DUP OP_HASH160 6bf93fc819748ee9353d253df10110437a337edf OP_EQUALVERIFY OP_CHECKSIG", "hex": "76a9146bf93fc819748ee9353d253df10110437a337edf88ac", "reqSigs": 1, "type": "pubkeyhash", "addresses": [ "mqMsBiNtGJdwdhKr12TqyRNE7RTvEeAkaR" ] } } ], "hex": "01000000016c53bdcdccd5aeada5b708b935b1d5190a42305c8df9b9cb9a96967937d94534020000006b483045022100926cfdab4c4451fa6f989b1f3cc576be1f52a7d46b24aed451e27b5e83ca23ab0220703844c871cad0d49c982bef3b22b161c61099e1a3b22f4fa24fdd6ec133c7190121029424121336222d4b26c11bc40477c357a4edf7a13f23ae660e6f1ffd05749d8fffffffff020000000000000000046a02796f70580a00000000001976a9146bf93fc819748ee9353d253df10110437a337edf88ac00000000" }, { "txid": "511256fd75ae8e60df107ec572450b63a4c79706c6ece79422cd9b68cc8642dd", "hash": "511256fd75ae8e60df107ec572450b63a4c79706c6ece79422cd9b68cc8642dd", "version": 1, "size": 225, "vsize": 225, "weight": 900, "locktime": 0, "vin": [ { "txid": "ae2b836e6ed44bde2b022618ac2d203f142524001847eeabe5fa0408ddb44ee6", "vout": 0, "scriptSig": { "asm": "304402205fc1a73561f73101a8663d584f78937be39fa402076f354696f5a4e1959423b20220674b00e16f63e7fef0622daf1d58b7c5331df6a2f182ded816abb8bbe88ad801[ALL] 0303abccf326894d8b8da3efd312b75fc39f0e664cf1bec05b9dfbff64a670739c", "hex": "47304402205fc1a73561f73101a8663d584f78937be39fa402076f354696f5a4e1959423b20220674b00e16f63e7fef0622daf1d58b7c5331df6a2f182ded816abb8bbe88ad80101210303abccf326894d8b8da3efd312b75fc39f0e664cf1bec05b9dfbff64a670739c" }, "sequence": 4294967295 } ], "vout": [ { "value": 0.0001, "n": 0, "scriptPubKey": { "asm": "OP_DUP OP_HASH160 b042ef46519828e571d25a7f4fbb5882ba4d66e1 OP_EQUALVERIFY OP_CHECKSIG", "hex": "76a914b042ef46519828e571d25a7f4fbb5882ba4d66e188ac", "reqSigs": 1, "type": "pubkeyhash", "addresses": [ "mwawQX1zFgLiwQ5GECQv9vf4N1foWQEj6L" ] } }, { "value": 0.0846, "n": 1, "scriptPubKey": { "asm": "OP_DUP OP_HASH160 32c9eb1967867dc3761717629fe2fad817e6e4d4 OP_EQUALVERIFY OP_CHECKSIG", "hex": "76a91432c9eb1967867dc3761717629fe2fad817e6e4d488ac", "reqSigs": 1, "type": "pubkeyhash", "addresses": [ "mk9VyBL4rcdQPkVuCKAvip1sFM4q4NtnQf" ] } } ], "hex": "0100000001e64eb4dd0804fae5abee4718002425143f202dac1826022bde4bd46e6e832bae000000006a47304402205fc1a73561f73101a8663d584f78937be39fa402076f354696f5a4e1959423b20220674b00e16f63e7fef0622daf1d58b7c5331df6a2f182ded816abb8bbe88ad80101210303abccf326894d8b8da3efd312b75fc39f0e664cf1bec05b9dfbff64a670739cffffffff0210270000000000001976a914b042ef46519828e571d25a7f4fbb5882ba4d66e188ace0168100000000001976a91432c9eb1967867dc3761717629fe2fad817e6e4d488ac00000000" }, { "txid": "7efcedce69805d8c7a7e55f9a46a79ac5597a09de77ee6b583022973f78344d3", "hash": "7efcedce69805d8c7a7e55f9a46a79ac5597a09de77ee6b583022973f78344d3", "version": 1, "login": "octcokit", "id":"moejojojojo'@pradice/bitore.sig/ pkg.js" require' require 'json' post '/payload' do push = JSON.parse(request.body.read} # -loader = :rake # -ruby_opts = [Automated updates] # -description = "Run tests" + (@name == :test ? "" : " for #{@name}") # -deps = [list] # -if?=name:(Hash.#:"','") # -deps = @name.values.first # -name = @name.keys.first # -pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil? # -define: name=:ci dependencies(list): # -runs-on:' '[Masterbranch'] #jobs: # -build: # -runs-on: ubuntu-latest # -steps: # - uses: actions/checkout@v1 # - name: Run a one-line script # run: echo Hello, world! # - name: Run a multi-line script # run=:name: echo: hello.World! # echo test, and deploy your project'@'#'!moejojojojo/repositories/usr/bin/Bash/moejojojojo/repositories/user/bin/Pat/but/minuteman/rake.i/rust.u/pom.XML/Rakefil.IU/package.json/pkg.yml/package.yam/pkg.js/Runestone.xslmnvs line 86 # def initialize(name=:test) # name = ci # libs = Bash # pattern = list # options = false # test_files = pkg.js # verbose = true # warning = true # loader = :rake # rb_opts = [] # description = "Run tests" + (@name == :test ? "" : " for #{@name}") # deps = [] # if @name.is_a'?','"':'"'('"'#'"'.Hash':'"')'"'' # deps = @name.values.first # name=::rake.gems/.specs_keyscutter # pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil? # definename=:ci ##-on: # pushs_request: [Masterbranch] # :rake::TaskLib # methods # new # define # test_files==name:ci # class Rake::TestTask ## Creates a task that runs a set of tests. # require "rake/test.task'@ci@travis.yml.task.new do |-v| # t.libs << "test" # t.test_files = FileList['test/test*.rb'] # t.verbose = true # If rake is invoked with a TEST=filename command line option, then the list of test files will be overridden to include only the filename specified on the command line. This provides an easy way to run just one test. # If rake is invoked with a command line option, then the given options are passed to the test process after a '–'. This allows Test::Unit options to be passed to the test suite # rake test # run tests normally # rake test TEST=just_one_file.rb # run just one test file. # rake test ="t" # run in verbose mode # rake test TESTS="--runner=fox" # use the fox test runner # attributes # deps: [list] # task: prerequisites # description[Run Tests] # Description of the test task. (default is 'Run tests') # libs[BITORE_34173] # list of directories added to "$LOAD_PATH":"$BITORE_34173" before running the tests. (default is 'lib') # loader[test] # style of test loader to use. Options are: # :rake – rust/rake provided tests loading script (default). # :test=: name =rb.dist/src.index = Ruby provided test loading script. direct=: $LOAD_PATH uses test using command-line loader. name[test] # name=: testtask.(default is :test) # options[dist] # Tests options passed to the test suite. An explicit TESTOPTS=opts on the command line will override this. (default is NONE) # pattern[list] # Glob pattern to match test files. (default is 'test/test*.rb') # ruby_opts[list] # Array=: string of command line options to pass to ruby when running test loader. # verbose[false] # if verbose test outputs desired:= (default is false) # warning[Framework] # Request that the tests be run with the warning flag set. E.g. warning=true implies “ruby -w” used to run the tests. (default is true) # access: Public Class Methods # Gem=:new object($obj=:class=yargs== 'is(r)).)=={ |BITORE_34173| ... } # Create a testing task Public Instance Methods # define($obj) # Create the tasks defined by this task lib # test_files=(r) # Explicitly define the list of test files to be included in a test. list is expected to be an array of file names (a File list is acceptable). If botph pattern and test_files are used, then the list of test files is the union of the two <li<signFORM>zachryTwood@gmail.com Zachry Tyler Wood DOB 10 15 1994 SSID *******1725<SIGNform/><li/> { "scripts": { "test": "jest", "start": "./node_modules/.bin/node-pg-migrate up && node app.js", "migrate": "./node_modules/.bin/node-pg-migrate" }, "devDependencies": { "jest": "^24.8.0" }, "dependencies": { "bitcoin-core": "^3.0.0", "body-parser": "^1.19.0", "cors": "^2.8.5", "dotenv": "^8.2.0", "express": "^4.16.4", "node-pg-migrate": "^5.9.0", "pg": "^8.6.0" } name": '((c)'":,'"'' use": is'='==yargs(ARGS)).); / module: env.export((r), '"name": '((c)'":,'"'' '".dirname": is'='==yargs(ARGS)).)"; /'"''t.verbose{ "scripts": { "test": "jest", "start": "./node_modules/.bin/node-pg-migrate up && node app.js", "migrate": "./node_modules/.bin/node-pg-migrate" }, "devDependencies": { "jest": "^24.8.0" }, "dependencies": { "bitcoin-core": "^3.0.0", "body-parser": "^1.19.0", "cors": "^2.8.5", "dotenv": "^8.2.0", "express": "^4.16.4", "node-pg-migrate": "^5.9.0", "pg": "^8.6.0" } } Andrekolodochka Patch 5 #20155 zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 Conversation 0 Commits 7 Checks 0 Files changed ∞ Conversation zakwarlord7 @zakwarlord7 zakwarlord7 commented 27 minutes ago • Why: Closes [issue link]{[Skip to content Your account has been flagged. Because of that, your profile is hidden from the public. If you believe this is a mistake, contact support to have your account status reviewed. https://github.com/github / docs Public Code Issues 106 Pull requests 59 Discussions Actions Projects 3 Security Insights Jump to bottom Andrekolodochka Patch 5 #20155 Open zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 Open Andrekolodochka Patch 5 #20155 zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 Conversation 0 Commits 7 Checks 0 Files changed ∞ Conversation zakwarlord7 @zakwarlord7 zakwarlord7 commented 9 minutes ago Why: Closes [issue link] What's being changed (if available, include any code snippets, screenshots, or gifs): Check off the following: I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes). For content changes, I have completed the self-review checklist. Writer impact (This section is for GitHub staff members only): This pull request impacts the contribution experience I have added the 'writer impact' label I have added a description and/or a video demo of the changes below (e.g. a "before and after video") zakwarlord7 added 7 commits 23 days ago @zakwarlord7 BITORE 0c87d46 @zakwarlord7 Create BITCORE ebe3a4b @zakwarlord7 bitore.sig c3442e6 @zakwarlord7 Revert "bitore.sig" 2187703 @zakwarlord7 Biore.sig (https://github.com/zakwarlord7/docs/pull/27[)](https://github.com/github/docs/pull/20155/commits/88d9e481a768c0b12529d91e83fcc745c6a33545) 88d9e48 @zakwarlord7 Update index.md 4144259 @zakwarlord7 Update index.md d7cd5b7 @zakwarlord7 zakwarlord7 requested review from a team as code owners 9 minutes ago zakwarlord7 commented 9 minutes ago Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: ubuntu-latest steps: run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" run: echo "🔎 The name of your branch is {{ github.repository }}." name: Check out repository code uses: actions/checkout@v3 run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." run: echo "🖥️ The workflow is now ready to test your code on the runner." name: List files in the repository run: | ls ${{ github.workspace }} run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs Merge state Add more commits by pushing to the andrekolodochka-patch-1 branch on zakwarlord7/docs. Review requested Review has been requested on this pull request. It is not required to merge. 2 pending reviewers This branch has conflicts that must be resolved Only those with write access to this repository can merge pull requests. Conflicting files .github/PULL_REQUEST_TEMPLATE.md .github/actions-scripts/create-enterprise-issue.js .github/actions-scripts/enterprise-server-issue-templates/deprecation-issue.md .github/actions-scripts/enterprise-server-issue-templates/release-issue.md .github/actions-scripts/fr-add-docs-reviewers-requests.js .github/actions-scripts/projects.js .github/actions-scripts/ready-for-docs-review.js .github/allowed-actions.js .github/dependabot.yml .github/workflows/60-days-stale-check.yml .github/workflows/check-broken-links-github-github.yml .github/workflows/content-changes-table-comment.yml .github/workflows/crowdin.yml .github/workflows/enterprise-dates.yml .github/workflows/hubber-contribution-help.yml .github/workflows/move-help-wanted-issues.yml .github/workflows/openapi-decorate.yml .github/workflows/os-ready-for-review.yml .github/workflows/remove-unused-assets.yml .github/workflows/repo-sync-stalls.yml .github/workflows/repo-sync.yml .github/workflows/staging-build-pr.yml .github/workflows/staging-deploy-pr.yml .github/workflows/staging-undeploy-pr.yml .github/workflows/start-new-engineering-pr-workflow.yml ... Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: WindowsXP89_98/intel82/linux36_82 tar gz Zip WinRaWr.unzipped/.jar/jee.enc-module'@package.yam/API/APk.Adk sdk.S.E/jdk.J.C/Jinja-datadog.jar/jre'@sun.java.org/dl/WIZARD/install/installer/arc/code.dir/.dist'@config yml/install/unit/inityit//POST FIinsh. 100%complete. Don. Response:' 403OJ=>TIERAFORMA=> SHAPEshit'"'X'"'=''=shapeSHIFT'"x'"'=''='::Push:: console.(func)==>=>>atest steps: run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" run: echo "🔎 The name of your branch is {{ github.repository }}." name: Check out repository code uses: actions/checkout@v3 run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." run: echo "🖥️ The workflow is now ready to test your code on the runner." name: List files in the repository run: | ls ${{ github.workspace }} run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs Remember, contributions to this repository should follow its contributing guidelines and code of conduct. ProTip! Add comments to specific lines under Files changed. Reviewers @github/docs-localization docs-localization @github/docs-engineering docs-engineering Still in progress? Assignees No one assigned Labels None yet Projects None yet Milestone No milestone Development Successfully merging this pull request may close these issues. None yet Notifications Customize You’re receiving notifications because you’re watching this repository. 1 participant @zakwarlord7 Allow edits and access to secrets by maintainers Footer © 2022 GitHub, Inc. Footer navigation Terms Privacy Security Status Docs Contact GitHub Pricing API Training Blog About zakwarlord7 commented now Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: ubuntu-latest steps: - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" - run: echo "🔎 The name of your branch is {{ github.repository }}." - name: Check out repository code uses: actions/checkout@v3 - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." - run: echo "🖥️ The workflow is now ready to test your code on the runner." - name: List files in the repository run: | ls ${{ github.workspace }} - run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs What's being changed (if available, include any code snippets, screenshots, or gifs): Check off the following: I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes). For content changes, I have completed the self-review checklist. Writer impact (This section is for GitHub staff members only): This pull request impacts the contribution experience I have added the 'writer impact' label I have added a description and/or a video demo of the changes below (e.g. a "before and after video") Skip to content Your account has been flagged. Because of that, your profile is hidden from the public. If you believe this is a mistake, contact support to have your account status reviewed. https://github.com/github / docs Public Code Issues 106 Pull requests 59 Discussions Actions Projects 3 Security Insights Jump to bottom Andrekolodochka Patch 5 #20155 Open zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 Open Andrekolodochka Patch 5 #20155 zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 Conversation 0 Commits 7 Checks 0 Files changed ∞ Conversation zakwarlord7 @zakwarlord7 zakwarlord7 commented 9 minutes ago Why: Closes [issue link] What's being changed (if available, include any code snippets, screenshots, or gifs): Check off the following: I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes). For content changes, I have completed the self-review checklist. Writer impact (This section is for GitHub staff members only): This pull request impacts the contribution experience I have added the 'writer impact' label I have added a description and/or a video demo of the changes below (e.g. a "before and after video") zakwarlord7 added 7 commits 23 days ago @zakwarlord7 BITORE 0c87d46 @zakwarlord7 Create BITCORE ebe3a4b @zakwarlord7 bitore.sig c3442e6 @zakwarlord7 Revert "bitore.sig" 2187703 @zakwarlord7 Biore.sig (https://github.com/zakwarlord7/docs/pull/27[)](https://github.com/github/docs/pull/20155/commits/88d9e481a768c0b12529d91e83fcc745c6a33545) 88d9e48 @zakwarlord7 Update index.md 4144259 @zakwarlord7 Update index.md d7cd5b7 @zakwarlord7 zakwarlord7 requested review from a team as code owners 9 minutes ago zakwarlord7 commented 9 minutes ago Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: ubuntu-latest steps: run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" run: echo "🔎 The name of your branch is {{ github.repository }}." name: Check out repository code uses: actions/checkout@v3 run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." run: echo "🖥️ The workflow is now ready to test your code on the runner." name: List files in the repository run: | ls ${{ github.workspace }} run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs Merge state Add more commits by pushing to the andrekolodochka-patch-1 branch on zakwarlord7/docs. Review requested Review has been requested on this pull request. It is not required to merge. 2 pending reviewers This branch has conflicts that must be resolved Only those with write access to this repository can merge pull requests. Conflicting files .github/PULL_REQUEST_TEMPLATE.md .github/actions-scripts/create-enterprise-issue.js .github/actions-scripts/enterprise-server-issue-templates/deprecation-issue.md .github/actions-scripts/enterprise-server-issue-templates/release-issue.md .github/actions-scripts/fr-add-docs-reviewers-requests.js .github/actions-scripts/projects.js .github/actions-scripts/ready-for-docs-review.js .github/allowed-actions.js .github/dependabot.yml .github/workflows/60-days-stale-check.yml .github/workflows/check-broken-links-github-github.yml .github/workflows/content-changes-table-comment.yml .github/workflows/crowdin.yml .github/workflows/enterprise-dates.yml .github/workflows/hubber-contribution-help.yml .github/workflows/move-help-wanted-issues.yml .github/workflows/openapi-decorate.yml .github/workflows/os-ready-for-review.yml .github/workflows/remove-unused-assets.yml .github/workflows/repo-sync-stalls.yml .github/workflows/repo-sync.yml .github/workflows/staging-build-pr.yml .github/workflows/staging-deploy-pr.yml .github/workflows/staging-undeploy-pr.yml .github/workflows/start-new-engineering-pr-workflow.yml ... Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: WindowsXP89_98/intel82/linux36_82 tar gz Zip WinRaWr.unzipped/.jar/jee.enc-module'@package.yam/API/APk.Adk sdk.S.E/jdk.J.C/Jinja-datadog.jar/jre'@sun.java.org/dl/WIZARD/install/installer/arc/code.dir/.dist'@config yml/install/unit/inityit//POST FIinsh. 100%complete. Don. Response:' 403OJ=>TIERAFORMA=> SHAPEshit'"'X'"'=''=shapeSHIFT'"x'"'=''='::Push:: console.(func)==>=>>atest steps: run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" run: echo "🔎 The name of your branch is {{ github.repository }}." name: Check out repository code uses: actions/checkout@v3 run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." run: echo "🖥️ The workflow is now ready to test your code on the runner." name: List files in the repository run: | ls ${{ github.workspace }} run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs Remember, contributions to this repository should follow its contributing guidelines and code of conduct. ProTip! Add comments to specific lines under Files changed. Reviewers @github/docs-localization docs-localization @github/docs-engineering docs-engineering Still in progress? Assignees No one assigned Labels None yet Projects None yet Milestone No milestone Development Successfully merging this pull request may close these issues. None yet Notifications Customize You’re receiving notifications because you’re watching this repository. 1 participant @zakwarlord7 Allow edits and access to secrets by maintainers Footer © 2022 GitHub, Inc. Footer navigation Terms Privacy Security Status Docs Contact GitHub Pricing API Training Blog About zakwarlord7 commented now Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: ubuntu-latest steps: - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}." - name: Check out repository code uses: actions/checkout@v3 - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." - run: echo "🖥️ The workflow is now ready to test your code on the runner." - name: List files in the repository run: | ls ${{ github.workspace }} - run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs zakwarlord7 added 7 commits 23 days ago @zakwarlord7 BITORE 0c87d46 @zakwarlord7 Create BITCORE ebe3a4b @zakwarlord7 bitore.sig c3442e6 @zakwarlord7 Revert "bitore.sig" 2187703 @zakwarlord7 Biore.sig (#27) 88d9e48 @zakwarlord7 Update index.md 4144259 @zakwarlord7 Update index.md d7cd5b7 @zakwarlord7 zakwarlord7 requested review from a team as code owners 27 minutes ago zakwarlord7 commented 27 minutes ago Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: ubuntu-latest steps: - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" - run: echo "🔎 The name of your branch is {{ github.repository }}." - name: Check out repository code uses: actions/checkout@v3 - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." - run: echo "🖥️ The workflow is now ready to test your code on the runner." - name: List files in the repository run: | ls ${{ github.workspace }} - run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs zakwarlord7 commented 17 minutes ago Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: WindowsXP89_98/intel82/linux36_82 tar gz Zip WinRaWr.unzipped/.jar/jee.enc-module'@package.yam/API/APk.Adk sdk.S.E/jdk.J.C/Jinja-datadog.jar/jre'@sun.java.org/dl/WIZARD/install/installer/arc/code.dir/.dist'@config yml/install/unit/inityit//POST FIinsh. 100%complete. Don. Response:' 403OJ=>TIERAFORMA=> SHAPEshit'"'X'"'=''=shapeSHIFT'"x'"'=''='::Push:: console.(func)==>=>>atest steps: - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" - run: echo "🔎 The name of your branch is {{ github.repository }}." - name: Check out repository code uses: actions/checkout@v3 - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." - run: echo "🖥️ The workflow is now ready to test your code on the runner." - name: List files in the repository run: | ls ${{ github.workspace }} - run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs zakwarlord7 commented 13 minutes ago -' '[22/15']'"'' zakwarlord7 commented 11 minutes ago #18736 = # CORRECTED - [22/8] [] -, zakwarlord7 commented 6 minutes ago • Recordatorio: tiene un formato de pago no pagadoimage: "ruby:2.7" before_script: - ruby -v # Print out ruby version for debugging - bundle install - gem install rspec - mkdir ~/.gem || true - touch ~/.gem/credentials || true - url_hocurl -v -X POST https://api-m.sandbox.paypal.com/v2/checkout/orders -H "Content-Type: application/json" -H "Authorization: Bearer " -d '{ "intent": "CAPTURE", "Value": '"amount '"' "amount": '"'[VOLUME']'"' "currency_code": "USD("DOLLARS)'"':;','' , "value": "22677000000000"]'"':'"DOLLARS](USD).Zip installation-on:'" Zip/.WinRaWr.unzipped/.jar/jee.enc-module'@package.yam/API/APk.Adk/Apk.sdk.S.E/jre.J.C'@java.sun.org/WIZARD/s4c.disrlt/code dir'@main/TREE/base/Trunk base/main ranch/trunk/paradise/bitore.sig/BIOTURR/BITOTE::RUNS: NOW: FORM: sign/tests/travis'@.github.com/GitHub/doc/javascript/WORKSFLOW/dispatch/repositoeies:'@mijoejoejoejoe/mojoejoejoejoe/Powerpuff girls/Powerpuff girls/README.md/README me/Contributing.md/Read.md Merge state Add more commits by pushing to the andrekolodochka-patch-1 branch on zakwarlord7/docs. Review requested Review has been requested on this pull request. It is not required to merge. 2 pending reviewers This branch has conflicts that must be resolved Only those with write access to this repository can merge pull requests. Conflicting files .github/PULL_REQUEST_TEMPLATE.md .github/actions-scripts/create-enterprise-issue.js .github/actions-scripts/enterprise-server-issue-templates/deprecation-issue.md .github/actions-scripts/enterprise-server-issue-templates/release-issue.md .github/actions-scripts/fr-add-docs-reviewers-requests.js .github/actions-scripts/projects.js .github/actions-scripts/ready-for-docs-review.js .github/allowed-actions.js .github/dependabot.yml .github/workflows/60-days-stale-check.yml .github/workflows/check-broken-links-github-github.yml .github/workflows/content-changes-table-comment.yml .github/workflows/crowdin.yml .github/workflows/enterprise-dates.yml .github/workflows/hubber-contribution-help.yml .github/workflows/move-help-wanted-issues.yml .github/workflows/openapi-decorate.yml .github/workflows/os-ready-for-review.yml .github/workflows/remove-unused-assets.yml .github/workflows/repo-sync-stalls.yml .github/workflows/repo-sync.yml .github/workflows/staging-build-pr.yml .github/workflows/staging-deploy-pr.yml .github/workflows/staging-undeploy-pr.yml .github/workflows/start-new-engineering-pr-workflow.yml pubDate> Patch 5 #20157 zakwarlord7 wants to merge 7 commits into github:andrekolodochka-patch-1 from zakwarlord7:andrekolodochka-patch-1 Conversation 0 Commits 7 Checks 0 Files changed ∞ Conversation zakwarlord7 @zakwarlord7 zakwarlord7 commented 1 minute ago Why: Closes [issue link] What's being changed (if available, include any code snippets, screenshots, or gifs): Check off the following: I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes). For content changes, I have completed the self-review checklist. Writer impact (This section is for GitHub staff members only): This pull request impacts the contribution experience I have added the 'writer impact' label I have added a description and/or a video demo of the changes below (e.g. a "before and after video") zakwarlord7 added 7 commits 23 days ago "000000-00000000000000000-0000000000000000-000000_Opening_Balance_Equity					Ending Balance: $25763711860000"										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 							<\feed/><\live/>			 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 		Skip to content

Pull requestsIssuesCodespaces

Marketplace

Explore

 

￼ 

Your account has been flagged.

Because of that, your profile is hidden from the public. If you believe this is a mistake, contact support to have your account status reviewed.

clearlinux-pkgs/guilePublic

 Watch 1 

Fork 0

 Star 0

Code

Pull requests

Actions

Projects

Security

Insights

Browse files

guile: Autospec creation for update from version 2.2.7 to version 3.0.8

Aleix Conchillo Flaqué (1): foreign-library: fix darwin detection Alex Sassmannshausen (1): doc: Add reference to Guile Hall in the manual. Andrea Azzarone (1): Fix gc.test "after-gc-hook gets called" failures. Andrew Gierth (1): Fix ARMv7 THUMB encoding for immediates. Andrew Whatson (3): Add tests for get-bytevector-some! Fix suspendable implementation of 'get-bytevector-some!' Close the finalization pipe before forking. Andy Wingo (1400): Remove all deprecated code Update effective version to 3.0 Remove support for legacy syntax objects. Update uri? documentation. guile.m4 fix for 3.0 prereleases GOOPS instance migration implemented in Scheme Change name of "static" flag indicating static slot allocation Implement class redefinition on top of fixed structs Remove indirection in structs remove self field of vtables Remove "redefined" class slot Document class redefinition change Remove support for tail arrays and self slots Remove SCM_UNBOUND Remove <int-slot>, <float-slot>, <double-slot> Remove opaque slots Fix bootstrap slot permissions for <class> Replace "pr" struct fields with "pw" fields Inline struct-ref etc definitions in the VM. Remove unboxed case from vm struct accessors Fix GOOPS class redefinition type error. Add new vtable reserved unboxed field Struct vtables store bitmask of unboxed fields Add support for C16_C16 instruction words Add new-style test and branch instructions Add (system base types internal). Add assembler and disassembler support for new instructions First step towards emitting new instructions: "j" instead of "br" Type inference distinguishes &fixnum and &bignum types Model all special immediates under one type bit (with range) Refactor (system base types internal) to use more macros Use tag visitors to generate assemblers, disassembly annotations Heap type predicates preceded by heap-object? Emit new instructions for heap object type tests Emit char? instead of br-if-char Use new instructions for null?, nil? Simplify $branch to always take a $primcall Emit new eq? instruction Use new instructions for less-than, etc Use new instructions for u64 comparisons. Use new instructions for f64 comparisons Minor optimization compiling 'and' Rename "number" tag to "heap-number" Simplify lowering of branching primcalls to CPS Add missing compiler support for heap-object? primcall et al. Lower eqv? and equal? to new instructions. Add compiler support for s64 comparisons. Add compiler support for fixnum? primcall predicate Add untag-fixnum instruction Add hacks around lack of allocation sinking Inline u64/scm comparisons Remove compiler support for u64-scm comparisons Lower logtest branches to instead be 'zero? logand' Remove assembler exports for old-style predicates and branches Fix argument type of arguments<=? instruction Emit new instructions in function preludes Remove disassembler support for old-style jump instructions Simplify special immediate predicate inferrer. RTL test uses new instructions Remove old branching instructions from VM $primcall has a "param" member cache-current-module, etc use immediate primcall parameters load-f64, etc take immediate parameters free-ref, free-set take immediate parameters Immediate variants of vector-ref, etc use immediate param Immediate parameter for struct-ref et al builtin-ref takes immediate parameter Remaining /immediate instructions take primcall imm param reify-primitives reifies constants for out-of-range imm params Tweak optimization order (system base types) uses target's idea of max size_t Specialize primcalls more aggressively Earlier conversion to /imm primcalls Add lsh, rsh instructions error, scm-error primcalls expand to `throw' Add new "throw" VM ops Fix effects analysis bug introduced with primcall param Refactor numeric comparison bytecode emission Canonicalize <=, >=, and > primcalls to < Specialize comparisons to SCM as s64 Closure conversion uses immediate variants of vector instructions Use immediate primcalls when unfolding constructors Add tag-fixnum instruction Compiler uses target fixnum range Convert "ash" to "lsh"/"rsh" when lowering to CPS Type folding has "macro reduction" phase Add missing lsh/immediate, rsh/immediate type inferrers Specialize rsh/lsh, not ash Add srsh, srsh/immediate instructions Slot allocation allows s64/u64 representations of same var Better range inference Better untagging of fixnums Don't fold comparisons that might contain a NaN. Add support for comparisons against integer immediates Compiler specializes comparisons to immediate integers ursh, ursh/immediate, etc only residualized if count < 64 Revert specialization of fixnum phi variables Better support for unboxed signed arithmetic Specialize-numbers reifies instructions that type-check Fix s64->scm reducer Separate u64 and s64 type inferrers now that ops are monomorphic Fix u64/s64 typesafety around fixnum (un)tagging Revert "Slot allocation allows s64/u64 representations of same var" Fix logand type inference Fix unboxed immediate range comparison type inference Specialize fixnum and s64 phis Remove effects-analysis exports that were undefined Minor compile-cps refactor Fix type check elision for branches DCE eliminates effect-free branches to the same continuation intmap-remove returns empty-intmap if appropriate Add support for bignum? CPS primitive. Remove thunk?, integer? simple predicate inferrers Add exact-integer? as interesting Tree-IL effect-free primitive Add &exact-number helper definition Improve type and range inference on bignums Fix inference of generic < on NaN values Minor refactoring to type inference on < and = Declare bignum? as effect-free Better type folding for = on exact numbers Better unboxing for logand over s64 values Add integer devirtualization pass. Refactor to finish the primcalls-take-parameters work DCE of branches punches through dead terms Optimize check-urange in assembler.scm Refactor aux definition fabrication in CSE pass Add fabricated expressions for u64-s64 conversion Fix arity of slsh/immediate inferrer Tighten up untag-fixnum range Enable lsh/immediate, rsh/immediate specialization Add nullary intmap and intset folders Simplify live variable computation for graphs without loops Minor CSE run-time optimization Add compute-clobber-map to effect analysis Improve CSE complexity -O1 disables call precoloring Allow integer devirtualization to be disabled Avoid generating arity-adapting continuations if not needed Avoid generating arity-adapting zero-value conts where possible Mark throw, throw/value, etc as having fallthrough Refactor number specialization to reduce duplication Integer comparison folding refactors Fix NaN handling in <= and >= Bailouts can continue directly to tail Add scm-ref, etc instructions for generic heap object field access CPS conversion residualizes undefined? predicate Re-mark "throw" et al as not having fallthrough Assignment conversion uses unchecked memory accessors Fix DCE over primcall setters with params Support closure annotations to scm-ref et al Use unchecked scm-ref/set in closure conversion Fix stack effect/clobber parsing for calls Fix mismatch between CPS and Scheme "complex?" predicate Refactor boxing/unboxing primcall args/results Reify-primitives removes "/unlikely" ephemeral instructions Remove compile-bytecode cases for ephemeral primitives Refactor reify-primitives pass Refactor list->seq to make return arity apparent Flesh out compile-bytecode for all heap objects Refactor lowering of Tree-IL primcalls to CPS CPS conversion expands "list" Inline "elide-values" optimization into CPS conversion CPS conversion avoids residualizing unknown primcalls Contification also inlines "elide-values" pass Remove inline-constructors pass Unknown primcalls convert as calls Re-add support for logbit? $branch is now a distinct CPS term type Fix sandbox Variable renaming in type-fold.scm $prompt is now its own kind of CPS term. Fix add-prompt-control-flow-edges for terms with no continuation $throw is a new kind of CPS term Simplify prompt slot allocation now that bailouts can't continue $primcall always continues to $kargs Add (system base optimize) module Disable resolve-primitives pass below -O2 Prevent LICM of memory accesses guarded by effect-free predicates Allow peeling loops with bailouts Instruction explosion for vector-{length,ref,set!} Allow peval to gnaw on string->symbol, symbol->string Improve compilation of make-vector without init Add resolve-primitives pass back to bootstrap Fix verify.scm for call-thunk/no-inline Fix specialization of the allocate-words family of instructions Bug-fix to devirtualize-integers pass Make integer devirtualization less eager Minor optimization in loop peeling Fix primitive reification for scm-set! / word-set!. Instruction explosion for make-vector Instruction explosion for /immediate variants of vector prims Mark word-ref and word-ref/immediate as producing U64 values CPS pass now expects exploded vector primitives Remove "ash" instruction. Remove now-unused make-vector et al instructions Add CPS compilation support for mutable-vector? Fix bug in struct-ref effects analysis CPS type analysis support for mutable vs immutable vectors Re-add compiler backend support for immutable vectors Compiler frontend support for vector mutability checks Minor compile-cps refactor for cons Expand pair-related primcalls Remove special optimizer and backend support for pairs Remove pair-related instructions Better compilation of vector constructors and initializers Improve make-vector compilation for known big sizes Sync IP before allocating closures Save VM compare result before calling out to hooks Remove obsolete rtl tests Lower box, box-ref, box-set! primcalls Remove box instructions Instruction explosion for struct-vtable Add support for raw gc-managed pointer locals Add optimizer and backend support for gc-pointer-ref Add raw u8-ref, etc instructions Rename gc-pointer-ref to pointer-ref Custom bv-u8-ref lowering procedure Instruction explosion for integer bytevector ref procedures Add f32-ref, f64-ref lowering procs Instruction explosion for bytevector setters Add assume-u64 and assume-s64 dataflow restrictions Instruction explosion for bv-length Remove optimizer and backend support for bv-u8-ref et al Remove bytevector instructions from the VM. Instruction explosion for struct-ref, struct-set! Introduce make-struct/simple Lower "make-struct/simple" to CPS Remove optimizer and backend support for struct ops Remove VM struct-ref, etc instructions Remove free-ref, free-set! Remove unneeded assembly shuffle routines. Use make-struct/simple in psyntax Use make-struct/simple in tree-il Add instrinsics to runtime Compile some generic arithmetic to intrinsic calls Remove specific instructions for add, etc from VM CPS conversion lowers string-length Add VM ops needed for string-ref Lower string-ref in CPS conversion Remove now-unused string-length, string-ref Add string-set! intrinsic Explode "string-set!" Remove string-set! VM op Instruction explosion for integer->char Remove integer->char op Instruction explosion for char->integer Remove char->integer from VM Remove dead code in CPS converter Add load-label instruction Add $code CPS expression type Remove unused make-closure opcode. string->number, etc intrinsics Remove string->number, etc opcodes Add string->number etc as macro instructions to reify-primitives Class-of is intrinsic Remove class-of opcode Remove load-typed-array, make-array opcodes Add scm->f64 intrinsic Slim heap-allocated flonums Add reifier for fadd/immediate. Instruction explosion for f64->scm Disable f64->scm instruction Remove scm->f64, f64->scm implementations scm->u64, scm->s64, scm->u64/truncate intrinsics Remove scm->u64, etc implementations u64->scm, s64->scm intrinsics Remove implementations of obsolete s64->scm, u64->scm insts logsub is intrinsic Remove implementation of logsub VM op Explode atomic box ops to new atomic instructions Remove implementation of atomic box ops Remove unused macros in vm-engine Fix width of operands to intrinsic call instructions Add support for dynamic-state-related intrinsics Intrinsics for dynamic state instructions push and pop dynamic state via intrinsics Remove old VM ops for fluid-ref et al lsh, rsh etc are intrinsics Remove implementation of lsh, rsh instructions VM calls out to heap-numbers-equal? through intrinsics VM calls "<?" through intrinsic. VM calls =? through intrinsic Remove unused macros in VM Mark call-scm<-scm-u64 as defining a result Add scm_maybe_resolve_module Add intrinsics for module operations Add cache-ref, cache-set! macro-instructions Instruction explosion for cached-module-box Instruction explosion for cache-current-module, cached-toplevel-box Remove backend support for cached-module-box et al. Compile "define!" via intrinsic Use intrinsics for top-level refs outside captured scopes Remove implementations of now-unused toplevel-box et al instructions Remove unused macro in vm-engine Remove unused vm_error_unbound Call out to expand_stack through new VM intrinsic Fix libguile subcomponent headers not to include <libguile.h> Move some definitions out of _scm.h Simplify definition of SCM_SYSCALL. Move "min" and "max" macros out of _scm.h Remove #ifdef cases for VMS and Cray. Remove unused getters for register backing store base Add configure check for auxiliary stacks Refactor handling of auxiliary stacks and setjmp/longjmp Move syscall-related private defines to their own header More _scm.h refactoring Remove _scm hack to undefine HAVE_STRUCT_TIMESPEC Refactor regarding internal detection of ia64 Inline definition of SIZEOF_SCM_T_BITS Remove _scm.h inclusion of config.h Remove errno.h include from _scm.h. Remove _scm.h verify.h inclusion Remove alignof.h inclusion from _scm.h Assume that if we have GCC, we have GCC >= 3.0. Require C99 to build Guile Remove error.h include from _scm.h. Remove _scm.h print.h include Move core validate macros to error.h Move number validators to numbers.h. Move more number validators to numbers.h. Remove unused macros Move list validators to list.h Remove public SCM_VALIDATE_NIM Move pair, null, nil, and boolean validators out of validate.h More validate.h devolution Devolve more validate macros Remove includes of validate.h. Deprecate libguile/validate.h Remove list.h from _scm.h Devolve boolean.h include. Devolve pairs.h Devolve gc.h Move gsubr.h include to snarf.h Devolve procs.h include from _scm.h. Remove gc.h from inline.h Remove threads.h from inline.h Move array-handle.h include out from inline.h Remove bytevectors.h include form ports.h Move struct.h include out of ports.h Remove threads.h include from ports.h Devolve vectors.h include from ports.h Remove <string.h> include from ports.h. Remove <stdio.h> from ports.h Remove <unistd.h> from ports.h Remove ports.h from inline.h Remove numbers.h from inline.h Remove error.h from inline.h Devolve numbers.h from _scm.h. Move scm_tc7_pointer snarfer out to foreign.h Move symbol snarfers to symbols.h Move subr snarfing macros to gsubr.h. Deprecate SCM_STATIC_DOUBLE_CELL snarf macro Move string-related snarfers to strings.h Devolve keyword-snarfing macros Devolve variable snarfers Remove mutex snarfers Devolve smob snarfers Simplify SCM_IMMUTABLE_CELL macros Remove snarf.h from _scm.h Devolve variable.h from _scm.h. Shuffle around inline C function implementation Define scm_t_wchar in one place Devolve threads.h from _scm.h. Remove modules.h from _scm.h. Devolve symbols.h from _scm.h Devolve foreign.h from _scm.h Devolve programs.h from _scm.h. Devolve strings.h Remove _scm.h Remove useless "classes: h_files" from Guile headers. Remove Emacs local variables comments in Guile source Remove unneeded memmove.c and strerror.c files Move SCM_C_INLINE_KEYWORD definition to inline.h Fix include in test-ffi-lib Use stdint.h limit macros Fix missing includes in tests. Deprecate pre-stdint.h limit macros Remove crufty support for 16-bit architectures. Move SCM_TICK definition to __scm.h. Move SCM_ARG1, etc definitions to error.h Minor __scm.h reformatting Inline tags.h into __scm.h Rename __scm.h to scm.h Rationalize guile-readline includes Make libguile header inclusion consistent within libguile c files Rationalize include order in C files Make .c copyright headers uniform Remove (C) from copyright statements libguile header files have uniform format for copyright declarations Update license notices in all C files Start to use C99 stdint in gen-scmconfig Replace uses of scm_t_int8, scm_t_uintmax, etc with stdint types Use ptrdiff_t instead of scm_t_ptrdiff Deprecate scm_t_uint8 and similar typedefs Add __scm.h placeholder Inline struct scm_vm into struct scm_i_thread Eagerly initialize thread VM; remove scm_the_vm VM gets VP from thread Fix intrinsics copyright line and include guards expand_stack intrinsic takes thread Move VM keyword argument parsing to happen via an intrinsic Add push-interrupt-frame VM intrinsic Give multiple-values objects a tc7 Add intrinsic for foreign-call Most header files use forward decl for union scm_vm_stack_element Reinstating undelimited continuations uses intrinsic Foreign-call intrinsic boxes errno Refactor continuation capture in VM Rename scm_i_thread to scm_thread Add intrinsic for call/cc compose-continuation uses an intrinsic Add rest-arg-length intrinsic. abort-to-prompt uses an intrinsic Refactors to abort-to-prompt implementation Optimize abort-to-prompt to avoid alloca Allow abort_to_prompt to avoid a longjmp VM throw uses intrinsics Add intrinsics for error conditions (wrong num args etc) Remove mention of vm-error from test suite Apply-non-program is an intrinsic Inline handling of non-program apply allocate-words intrinsic Compile current-module as intrinsic call Remove dedicated current-module instruction. Intrinsic for "prompt" bind-rest inst uses cons-rest intrinsic Use CALL_INTRINSICS helper in VM Refactor handling of active VM registers Minor scm_thread refactoring Intrinsics take registers from thread Remove "resume" arg from vm engine Minor optimizations to debug hook dispatch Microoptimizations to hook dispatch Refactor hook dispatch in VM Revert "Refactor hook dispatch in VM" Strip "get-jit-size" feature from lightning. Remove documentation from embedded GNU lightning Remove lightning unit tests Finish removing get-jit-size Beginnings of build integration of lightning and guile Remove lightning pkg-config file. Remove empty lightning m4 directory Remove some more of the lightning build machinery Further lightning integration work Remove disassembler support from lightning Refactor deps for built libpath.h Remove special cflags for obsolete Lightning targets Always enable assertions in embedded lightning Remove lightning configure snippet related to libdl Remove unused configure-time checks for x87, thumb, and sof float Remove unused AM_CONDITIONAL statements from lightning configure Add GUILE_ENABLE_JIT macro Wire JIT availability check into Guile configure Wire up lightning into libguile build Remove -Wswitch-enum from compile flags Fix compile warnings in jit_print.c Minor change to VM DSL Fix bad opcode in VM Begin structure for template JIT compiler Fix errors introduced when giving multiple-values objects a tc7 Make JIT compiler skeleton more terse Add support for reading ELF symbol table from C Prepare for frames having separate virtual and machine return addrs Reserve frame word for machine return address Rework VM approach to shuffling unknown numbers of args Fix stale stack frame clearing for frame size change Multiple-value returns now start from slot 0, not slot 1 Update frames.h comments. Add instrument-call, instrument-loop VM instructions Emit instrument-loop in loops. Emit instrument-entry before programs Fix function bound offsets of JIT data to be signed Rewrite subr implementation Revert "Add support for reading ELF symbol table from C" Fix bugs with primitive code allocator; expose internally Minor updates for Scheme runtime (statprof, backtraces) Alloc foreign procedures using primitive mechanism Add instrument-entry to continuations Consolidate apply hook to instrument-entry instruction Remove push continuation hook; return hook runs before FP pop VM hooks take no values Update NEWS for 2.2.3 Add missing include to adapt to recent merge from master Minor optimization in RESET_FRAME Rework program->ip mapping in VM to always call intrinsic Change call/cc inst to capture-continuation Add unpack-values-object intrinsic Invoke VM hooks through intrinsics Rework foreign-call trampoline Continuations capture machine code address Adapt JIT calling convention; continuations take mra from stack Update error-wrong-num-args intrinsic prototype Avoid needless 64-bit args on 32-bit machines for some intrinsics 64-bit intrinsic args and return values passed indirectly on 32-bit Define intrinsics for atomic ops Add instrumentation to VM builtins Add internal function mapping subr index to function Expose scm_vm_builtin_ref internally First implementation of a template JIT Manual JIT interface via %jit-compile Fix default code allocator in Lightning Fix bounds on compiler-emitted JIT metadata JIT compilation tweaks Fix frame popping in JIT Tweak to instrument-entry Add out-of-line handle-interrupts trampoline stub Add support for labels, and fix a bug in uadd/imm and usub/imm. Comments in the JIT Optimizations to subr-call Fix in-tree builds Fix load width of get-ip-relative-addr Minor refactors to jit.c 32-bit fix for emit_run_hook Fix r12 register spec for lightning with sysv x86-64 ABI Clear frame size after subr-call, return-values Fix bug in compile-alloc-frame Fix fp-ref, fp-set! helpers in jit for signedness Fix JIT compilation of bind-rest Fix again the unknown-filling of alloc-frame JIT refactor Fuse comparisons and branches in JIT Minor JIT refactor Bug-fix for alloc-frame and stack moving JIT: Store FP in register during procedure prolog/epilog JIT tracks register clobbers Maybe enter JIT when returning from interpreted functions Add fast paths to intrinsics Fix miscompilation for "abort" opcode Fix JIT compilation of call-with-prompt Fix JIT compilation of shuffle-down Fix jit function data for goto_continuation_code Fix JIT compilation of composable continuations Fix bind-kwargs JIT compilation Minor optimization in compile_alloc_frame JIT threshold controlled by environment variable More JIT debugging Fix compilation of compile_eq Minor 32-bit untag-fixnum optimization Add ability to stop JIT after N compilations. Prevent Lightning from stompling our registers Add configurable JIT logging levels JIT counter tweaks Add ability to tier up from within loops Fix assertion error running compile-file with threshold 0 Fix a memory leak in JIT Improve compute_mcode allocation logic Fix nonlocal abort to compiled continuation Improve JIT cleanup a bit Fix JIT compilation of [positional-]arguments<=? Add JIT fast paths for inum arithmetic Revert "<?" fast path for now Use custom JIT code allocator Fix compilation of handle-interrupts Refactor handling of lightning state Fix compilation of compare-and-swap Fix positional-arguments<=? compilation Fix JIT compilation of intrinsics that return doubles VM manages hook sets itself Remove hook intrinsics: hooks are just for the VM Micro-optimization of scm_vm placement in scm_thread Hook refactors Deoptimize to VM when hooks are enabled Fix scm_make_foreign_object_n. Fix emergency aborts to not expand the stack Turn on automatic JIT compilation by default Fix --disable-jit compilation Renumber instructions and bump objcode version Configure uses 2.3.x tags for version Fix case where running abort hook could trash registers Update comments in vm-engine.c Update history.texi. Update Conservative GC section of manual Update data representation chapter in the manual Update "A Virtual Machine for Guile" Update "Why a VM?" Update "VM Concepts" Update "Stack Layout" Update "Variables and the VM" Finish updating vm.texi Rename $closure to $const-fun Update compiler.texi Fix f32-set! JIT compilation Add manual section on JIT compiler Minor additional manual updates Update NEWS Fix use of uninstalled header by installed headers Comment out some unused definitions Remove unimplemented decl in script.h Deprecate scm_find_executable Fix GCC warning with %char-set-dump. Remove jit_names.c. Revert "Remove jit_names.c." Fix lightning build with jit_names.c Fix unused local warning in vm-engine.c Fix -Wunused-function error for x86 not on sun Fix guile-config for Guile 3.0 Fix linker bug that could fail to find the shstrtab Fix JIT compilation on 32-bit targets Fix JIT register state tracking for use of SP or FP as temp Better ursh/ulsh/srsh JIT on 32-bit platforms Fix JIT of 64-bit comparisons on 32-bit architectures Only enable JIT by default on x86-64 Bump prerelease version numbering to 2.9.x Fix GUILE_ENABLE_JIT after latest change GNU Guile 2.9.1 Update version.texi Update .gitignore Strip "get-jit-size" feature from lightning. Remove example .c files from documentation Inline body.texi and version.texi into lightning.texi Move lightning.texi up to root, and remove Makefile.am Archive lightning ChangeLog Remove TODO Remove bits of .gitignore no longer needed Remove autotools Rename include to jit.h, move all files to jit/ Rename lightning.c to jit.c Remove -sz.c files Simplify file names Remove unneeded bits of lightning Create beginning of stripped-down lightning interface Replace jit_int32_t, etc with stdint types Add endian.h Update call/receive machinery Trim unneded bits from jit.c "extern"-related cleanup, and further implementation Finish conversion to stdint types Update gitignore Really finish stdint conversion Remove needless PUBLIC/HIDDEN definitions Inline private.h into jit.c Make _rvs array static-const Beginnings of port of x86 to new design Fix crypt-on-glibc test error Fix linker.test Fix race when expanding syntax-parameterize and define-syntax-parameter Implementation of new design Add "addi" test Better loading of args to registers; add tests Convert tests to jit_load_args Flesh out README Add note about current status Add new tests Add more tests Tests for some div operations Add more div tests Add remr tests Add bitops tests Add lsh/rsh tests Add comr/negr tests Rework naming of test suite files Add mov_addr test Add extr tests Add bswap tests, and fix missing breaks in jit_load_args Add ldr tests Add ldi tests Add ldxr tests Add ldxi tests Add str tests Add sti tests Add stxr tests Add stxi tests Add .gitlab-ci.yml Tweak test build to run faster, and adapt CI Fix stxi_d bug Add bltr test Add more integer reg/reg branch-and-compare tests Add floating-point reg/reg compare-and-branch tests Add int/int reg/imm compare-and-branch tests Add anti-float comparison tests Add unordered float compare-and-branch tests Add flag-checking test-and-branch tests Add add-and-branch-on-overflow tests Add sub-and-branch-on-overflow tests Add some nop and jmp tests, and fix a hazard with jmpi/calli Add push/pop test Add abs/sqrt tests Add truncr_[df]_[li] tests Add float/double cast inst tests Add int->float tests Add movi_[df] tests Remove old tests get_temp_{gpr,xpr} returns a jit_{gpr,fpr}_t Implement arg shuffling for jit_call{i,r} Provide some type safety for jit_gpr_t and jit_fpr_t Clean up stack after calls Add subdir-objects option to libguile makefile. Change headers and files to be named "lightening" instead of "jit" Adapt to lightning -> lightening name change Allow users to pass custom allocators Fix jit_reset to be useful Checkpoint for lightning to lightening conversion Add jit_same_{gprs,fprs} helpers Remove -Wdeclaration-after-statement Fix jit.c compilation jit: Fix inter-instruction relocs. Fix implementation of jit_{gpr,fpr}_is_callee_save Fix reloc for jmpi and calli Fix jit_gpr_is_callee_save usage Fix JIT bugs Add assert for jit_address Fix some aspects of instruction mcode addresses Support immediate arguments More various JIT fixen Minor JIT cleanups JIT fixes for arena overflow Fix arena expansion logic Fix compilation of call-scm<-u64 Support spilling args to stack Allow test suite to test multiple targets. Add support for "make test-ia32" in tests/ Fix lightening name Simplify API for loading call arguments Add proper parallel-moves solver Add support for operand addends Adapt to new lightening call API Fix a JIT bug Fix apply_addend bug Simplify register representation Renumber x86 registers Align stack on 64-bit targets for calls Re-enable fixnum less-than JIT fast-path Lower default JIT threshold as JIT is cheaper now Simplify register representation again Simplify register representation even more Adapt to changes in upstream lightening Move jit_move_operands etc to common lightening.c file Track frame size to more reliably align stack before calls Make jit_align_stack and jit_shrink_stack public Fix backtraces with call-with-values during bootstrap Remove unused jit_epilog definition Implement reloc shortening, and remove unused functionality Ensure stack alignment in JIT code. Inline some internal definitions into backend-specific files Account for saved return address when locating args Fix lightening to compile on 32-bit x86 Use jit_word_t for register-sized values instead of intmax_t Fix compile warnings for 32-bit tests Fix 32-bit movi_d Make jit_cpu private Simplify 64/32 concerns in x86-cpu.c Remove most __X64_32 code Add facility to enter and leave JIT ABI Small bug fixes for ia32 Fix jit_leave_jit_abi to pop correct registers Fix ABI of arg to extr_d_f test Add {enter,leave}_jit_abi calls in tests Add test for JIT callee with many args Mark test files as precious to prevent them from being deleted by make Add x86-32 tests to default test target Stack alignment takes saved return address into account Align stack before entering JIT code Adapt to lightening changes Enable JIT on 32-bit x86 Fix errors in 32-bit JIT support Unget temp xpr after mem->mem addend fixup Fix byte stores on x86-32 Fix unneeded stack alignment. Fix u64-ref JIT on 32-bit Stack alignment is 16 even on x86-32 Attempt to pop x87 stack Remove ia64 (itanium) support Remove alpha support Remove hppa support Remove Sparc support Fix eta-reduction of prompts Refactor to move temp register acquire to core Refactor some bits from x86 to lightening First pass at aarch64 assembler port Refactor to add support for constant tables, shifted relocs Rework register saving to avoid push/pop Allow a backend to have multiple temporary registers Fix GPR temporary selection Fix compilation on aarch64 Fix enter/leave JIT ABI Fix a couple bugs related to aarch64 literal pools Aarch64 backend avoids needless temporary register allocation Remove jit_nop Add support for aarch64 in CI Fix dpkg --add-architecture invocation Fix YAML for CI Attempt to fix CI on Debian Attempt to fix CI on Debian Attempt to fix CI on Debian Attempt to fix CI on Debian Attempt to fix CI on Debian Attempt to fix CI on Debian for AArch64 Update README and guix invocations in test suite Remove software floating-point ARMv7 support; ARMv7 test env Remove unused jit_{gpr,fpr}_is_callee_save Beginnings of ARMv7 backend Port of arm-cpu.c to current lightening Beginnings of VFP port to lightening ARMv7 backend compiling without warnings ARMv7 backend passing all tests! Add ARMv7 testing to CI Attempt to get CI working on ARMv7 Fix CI on ARMv7 Update README Fix bounds checking on negative ldr offsets for aarch64 Avoid using x18 on AArch64 Clear missing bit from literal pool Clear literal pool more thoroughly Fix allocator passed to lightening Fix typo in previous commit, doh Allow jit_end to fail Expose API to bless function pointers Bless enter_mcode as a function pointer Fix literal pool emission on armv7 Various fixes for as-needed emission of literal pool AArch64 fix Avoid recursive pool emit for aarch64; add another overflow check Allow add_pending_literal to return false Enable JIT on aarch64 and armv7 Silence "unused" warnings Mark a couple functions as maybe-unused. Update NEWS Add includable automake file Reference Lightening instead of GNU Lightning Bump version to 2.9.2 Switch to use atomic_compare_exchange_strong Correctly handle overflow when emitting literal pools Add atomic operations Use new atomic instructions from lightening Inline the atomic intrinsics Fix atomics usage in handle-interrupts JIT. Fix accidental change to ARMv7 ldr Add breakpoint instruction Revert "Fix atomics usage in handle-interrupts JIT." Revert "Inline the atomic intrinsics" Reapply atomics inlining Dynamically assert functions start with instrument-entry Remove check for instrument-entry Avoid saving IP for <? fast-path Add bind-optionals instruction Allow for bind-optionals without alloc-frame VM does not initialize stack frames Add compiler support for eliding closure bindings Add support no closure in $callk Enable closure elision. Fix RTL tests for recent arity change Fix intmap-intersect edge case jit: Direct tail calls assert that target can have mcode Speed up returns in JIT Add jmpi_with_link instruction push/pop of link register does not affect stack size on x86 Use call/return instructions for non-tail calls Fix compilation on GCC 5.5 Rearrange scm_thread for better locality Inline freelist vectors into scm_thread Add an inlined jit fast-path for allocate-words/immediate Update NEWS for 2.9.3 Revert scm_c_make_char rename Fix calls to handle-interrupts trampoline on ARMv7 Fix some compiler warnings on 64-bit builds GNU Guile 2.9.3 (alpha). Add support for optimized unboxed abs and sqrt Split graph utilities out of (language cps utils) Implement "Fixing Letrec (reloaded)" Run fix-letrec before peval Update NEWS. Update peval tests for fix-letrec Refactor `format' to use when/unless conventionally More format refactors More format refactors More format refactorings. Fix bug in which codegen accessed data beyond end of stack Add "mod" field to tree-il toplevel ref, set, define Simplify the define-primitive-expander macro Add primitive support for working with module variables Add letrectify tree-il pass Add notion of declarative modules Enable letrectification Skip tests that don't work under letrectification Fix coverage test for top-level binding optimization Define missing shuffling assembler for string-set! et al Disable some JIT compilation code when JIT configured out Fix the jitless fix Unbox floor/ceiling and trigonometric functions where possible Revert "Revert scm_c_make_char rename" Letrectify only on -O2; update docs Allow mixed local definitions and expressions Update documentation for mixed definitions and expressions Further NEWS tweaks Fix fatan2 intrinsic initialization Fix out-of-memory test for top-level inlining GNU Guile 2.9.4 (alpha). Compiler allocates boxed flonums in unmarked space Fix bug in CSE auxiliary definitions Emit warning when using "load" in declarative modules At optimization level -O3, seal declarative module-private bindings Optimize fixnum or s64 -> f64 conversions Use "G_" as the conventional alias for gettext Define top-level bindings for aux syntax: else, =>, _, ... Add documentation for else, =>, _, ... aux syntax Update NEWS for 2.9.5 New function: install-r6rs! Add --r6rs command-line option Add --r6rs NEWS Better R6RS compatibility Fix doc syntax error Adapt ftw.test for pending test-suite changes Remove "vm" tests Avoid mutating arguments to resolve-interface (ice-9 null) also re-exports core aux syntax Deprecate passing a non-zero size to make-module (ice-9 null) also exports aux syntax, syntax-rules (ice-9 safe-r5rs) fixes for bound aux syntax Extend `import' to allow R7RS-style srfi references Refactor PEG records Remove (ice-9 channel) Re-implement (ice-9 gap-buffer) records in terms of srfi-9 Deprecate two-arg `record-constructor' Fix deprecated 1-arg `make-module' in tests Allow records to be subtyped Record accessors respect subtyping SRFI-9 uses make-record-type make-record-type does more validation on the fields Rebase srfi-35 conditions on top of make-record-type Fix one remaining use of make-record-type with string type name Change record type "flags" field to "properties" Guile `make-record-type' supports non-generative definition Rename final? record type flag; add support for opaque? Add support for immutable fields in core records Add record-type-parent definition. Rebase R6RS records on top of core records Remove circularity in r6rs by rebasing conditions on core records Add `record-type-has-parent?'. Add (ice-9 exceptions) module Rebase SRFI-35 on top of (ice-9 exceptions) Move adapter between "throw" and "raise" exceptions into core Move false-if-exception down in boot-9 Move exception-handling routines after records in boot-9 Move the core of exception objects into core Move exceptions with key and args to core Remove boot "catch" definition. Rebase throw/catch on top of raise-exception/with-exception-handler Update documentation for with-exception-handler et al SRFI-18 uses core exceptions Update NEWS for records and exceptions work Allow equality between arrays of vu8 and u8 Add initial implementation of R7RS modules Add install-r7rs!, like install-r6rs! Add r7rs test Add expected failure for R7RS test due to https://bugs.gnu.org/38235 Add R7RS XFAILs due to https://bugs.gnu.org/38236 (datum labels) Add R7RS xfails due to https://bugs.gnu.org/38237 (i/o exn types) Add R7RS xfails due to Guile's ( . 42) syntax extension Add R7RS xfails due to a restriction in hungry-eol-escapes (#38239) Add R7RS documentation and --r7rs command-line option Add NEWS for R7RS Install exception converters and printers from boot-9 Fix texinfo in r7rs.texi GNU Guile 2.9.5. Fix stack overflow if printing a pre-boot error throws an error Fix port-position documentation Fix range inference for right-shifts Fix frame-call-representation for callees without closures Fix range inference on division in unreachable code Associate #:replace info with modules, not variables Add guile-3, r6rs, r7rs cond-expand features Add --r6rs and --r7rs options to "guild compile" Propagate replacement flag for autoload interfaces Allocations and raw mutating operations restrict to mutable types Effects analysis treats the fixed parts of objects specially Update NEWS for Guile 2.9.6 GNU Guile 2.9.6 (beta) Fix resolve-r6rs-interface to propagate replacement flags Fix JIT tier-up from within loops for already-JIT-compiled functions Allow for inexact integers in quo, rem, and so on Reduce quo, rem, mod for power-of-two divisors Remove vm->sp_min_since_gc Add infrastructure for out-of-line JIT compilation of slow paths Move add/immediate, sub/immediate slow paths out of line Move add, sub slow paths out of line Move handle-interrupts slow path out of line Move receive slow path out of line Move receive-values slow path out of line Move assert-nargs-ee slow path out of line Move assert-nargs-ge slow path out of line Move alloc-frame slow path out of line Add subr-call out-of-line slow path Add out-of-line slow path for compose-continuation Add out-of-line slow path for abort Move assert-nargs-le slow path out of line Move allocate-words/immediate slow path out of line Move allocate-pointerless-words/immediate slow path out of line Add fixnum fast-path for = Move less? slow path out of line Document JIT environment variables Update NEWS Avoid throwing exceptions during early boot if stdin is closed GNU Guile 2.9.7. Fix abort_to_prompt bug if dynwind leave thunk expands the stack Update NEWS GNU Guile 2.9.8 (beta). Update compiler.texi and history.texi Mention WebAssembly in status section Fix mips32r6 bug Re-implement `guard' Update NEWS with details on guard and autoloads. Fix build on 32-bit systems with JIT support Fix bug in closure conversion Add NEWS entries Support R7RS define-library Fix peval bug that ignored excess args Optionally allow duplicate field names in core records Fix typos in previous commit. Update NEWS Bump objcode minor version in preparation for new stable series Bump user-visible copyright years to 2020 GNU Guile 2.9.9 (beta). Bump manual year, and fix NEWS typo Update NEWS Mention Mark Weaver in Guile history section Wording tweak to history.texi Update REPL copyright year to 2020 Declarative variables optimization limits eta-expansion Add eta-expansion pass after peval Disable eta-expansion in letrectification Update release.org Prepare 3.0 versioning Fix version computation for v3.0 Fold (logior 0 INT) to INT Add type checkers for lsh/immediate and rsh/immediate Ensure 32 bytes of stack are reserved on 64-bit Windows targets Switch CI to use Debian stable Better debugging in jit.c Fix bug restoring a JIT continuation from the interpreter Add support for perf map creation GUILE_PKG finds guile-3.0 Fix fixpoint computation in compute-significant-bits Deprecate bitvector-ref on array slices Replace bit-count with bitvector-count Replace bit-position with bitvector-position Replace bit-set*! with bitvector-set-bits! / bitvector-clear-bits! bitvector-bit-set? / bitvector-bit-clear? replace bitvector-ref bitvector-set-bit! / bitvector-clear-bit! replace bitvector-set! bitvector-set-all-bits! / bitvector-clear-all-bits! replace bitvector-fill! bitvector-flip-all-bits! replaces bit-invert! bitvector-count-bits replaces bit-count* Deprecate useless C bitvector interface Prefer C-like interfaces for scm_c_bitvector_{set,clear}_bits_x Deprecate scm_bitvector, scm_make_bitvector, scm_bitvector_p Remove unused analyze-lexicals function Add intrinsics for a baseline compiler Ensure <prompt> handler is values handler Remove unused (language tree-il canonicalize) Export emit-shuffle-down for baseline compiler Add baseline compiler Debugging names in baseline compiler; emit/immediate? fixes Avoid shuffle-down for tail calls Fix baseline compilation of conditionals Fix baseline compilation of let-values and prompt Fix prompt compilation Update (system base compile) header Remove compilation order cache Slight (system base compile) refactor Use more `match' in (system base compile) Rework compile-fold Add #:optimization-level, #:warning-level compile keyword args Add language-specific analysis pass to compiler infrastructure Wire up simplified warning levels in "guild compile" Warning and optimization levels always small integers Define new "lowering" phase in compiler Sketch of how to choose different compiler based on -O0 Add compiler chooser implementation; fix bugs with previous commit Wire up the baseline compiler to -O0 Fix parens in .dir-locals.el Fix baseline compiler bugs Rename "lookup" intrinsic to "module-variable" Add new lookup, lookup-bound intrinsics Top-level lookups raise exceptions in run-time Use lookup, lookup-bound in baseline compiler Fix kw initializer bug in baseline compiler Fix compilation of prompt in tail context Fix baseline canonicalization of reifying prompts Test suite compile-and-eval tests run -O0 and -O2 Fix "fail" helper in guild compile Declare #:cps? as an available optimization Fix free var computation in baseline compiler for lexical set! guilec can be parameterized by GUILE_OPTIMIZATIONS, defaults to -O2 Fix baseline miscompilation of < Fix baseline compilation error for make-struct/simple Baseline compiler: add pop-fluid primitive. Fix "cons" compilation in baseline compiler in some cases Fix JIT asserts with different code generated by baseline Fix module capture for closures in <fix> Reload FP if needed in bind-rest also Improve tail recursion in compiler Fix shuffling assembler for new primcalls Switch to baseline compiler for bootstrap/ Avoid having "guild compile" load optimizers Emit handle-interrupts in baseline compiler Slight tweaks to bootstrap order Baseline O(1) access to frame-base env Baseline compiler emits source locations Baseline FIXME's are done :) Delay loading CPS unless CPS compiler used Punt CPS compiler to end of bootstrap Whoops, fix bug in tree-il choose-compiler Clean up NEWS for bitvectors. Update documentation on <language> Update NEWS for baseline compiler Slight optimization to baseline compiler Punt more CPS compiler until later in bootstrap Fix optimizers after language lowerer refactor Minor module/Makefile order tweak Bump objcode minor version Another minor module compile order tweak Add with-lexicals helper; fix bug in (equal? #t (foo) #t) More robust reduction of equal? and eqv? Fix ,optimize to be independent of tree-il Tree-IL lowerer only loads needed optimizations Update match's no-matching-pattern code to use "throw" Fix truthy expression analysis in CSE Slight optimization to invert-bijectiono Renumber before CSE Refactor CSE to take advantage of RPO numbering Refactor CSE to analyze and transform in a single pass CSE eliminates expressions at continuations Thread flow analysis through CSE pass Macro fix to CPS build-term Add indentation rule for let/ec Eager graph pruning in CSE Use intmaps in CSE equivalent expression table CSE refactor CSE forwards branch predecessors where the branch folds CSE forward-propagates changes to CFG Fix typo causing performance problems!!! Fix bug where private bindings would never be sealed Change -O1 compiler to use baseline and also resolve primitives Statprof reports primitive names Make CSE more robust Fix undefined behavior in ARMv7 assembler Fix zeroing of literal pool entries Fix unused variable warning for no-literal-pool targets Add jtable instruction Fix patch_veneer on aarch64 Ensure tail caller and callee in jmpi test have compatible ABI Add support for emitting inline data and table switches Add JIT implementation for jtable Allow jit_begin_data to declare max data size Literal pools have word-alignment, not u64-alignment Update use of jit_begin_data API Spill whole words to stack, even for uint8_t args Improve code generation for eq? on immediates Add sign-extending make-immediate instruction Add eq-immediate? instruction Rework the way immediate encodings are calculated. Baseline compiler emits eq-immediate? as appropriate CPS compiler reduces eq? on constant to eq-constant? Fix JIT compilation for jtable Fold eqv? to eq? on exact integers according to target fixnum range Add $switch CPS term kind Add new pass to optimize branch chains to table dispatch CSE computes online map of constant values, uses it to fold branches Bump objcode minor version to 4 Bump DEFAULT_INITIAL_HEAP_SIZE Tweak to initial heap size selection Clean up srcprops implementation Update NEWS Move copy-tree to (ice-9 copy-tree); deprecate main binding Fix source location bug for neoteric exprs introduced by refactoring New warnings: -Wuse-before-definition, -Wnon-idempotent-definition Fix jmp-shortening on x64 when target within instruction. Update NEWS Bump version to 3.0.5 Bump copyright years for user-visible copyright messages Close accumulating output ports after use Add call-with-input-bytevector, call-with-output-bytevector Finish call-with-port cleanup Document call-with-port Document new interfaces Update Gnulib to v0.1-4379-g2ef5a9b4b Update environ_locale_charset gnulib patch Replace stftime gnulib module with nstrftime Replace libltdl with raw dlopen, dlsym Optimize eof-object? Add "read" implementation in Scheme Fix (ice-9 read) for #!r6rs Fix (ice-9 read) for #\" Re-use string output port within read Micro-optimization to delimiter? More read micro-optimizations Scheme read respects "positions" reader option Improve read error reporting Fix read.scm bugs related to nonstandard reader options Use lists instead of string ports to accumulate results Syntax objects have "source" field psyntax preserves source via syntax objects Adapt uses of make-syntax to preserve syntax Document datum->syntax extensions Implement read-syntax Add quote-syntax Remove top-marked? optimization from psyntax Fix module scoping for datum->syntax with no identifier Ensure that (syntax ()) results in () Fix read-syntax on vectors and arrays Read Scheme via read-syntax Commit updates from newest autoconf Optimize run-time init and relocation procedure Add syntax-sourcev Assembler writes vector source properties Psyntax uses sourcev internally read-syntax uses vector source representation Shunt syntax-sourcev to (system syntax internal) Fix Scheme read without source positions Update NEWS Fix bug reading arrays with lengths Remove textual-ports include from (ice-9 read) Invalid charset at EOF does not cause decoding error Fix reader extensions in Scheme reader Fix reading neoteric exprs in Scheme reader Fix unterminated #!...!# error message in Scheme reader Relax srfi-105 source expectations Read-in-scheme replaces boot "read" definition Scheme reader fully replaces C reader primitive-read handles only default reader options More read.c simplifications Remove read extension support from primitive-read Fix length of \U hex escape in new reader Fix some srfi-105 parsing errors Fix reading #c32 vectors Fix reading improper curly-infix expressions Syntax objects print with source locations Update documentation to incorporate read-syntax Update reference for GUILE_EXTENSIONS_PATH Fix reading of #true / #false Fix up source properties section in manual Fix reading "#;", "'", and similar premature-EOF situations Fix reading #!!# More informative error message if GMP not found Don't expose mini-gmp to users Only install libgc as GMP allocator with mini-gmp Update NEWS for --enable-mini-gmp Update NEWS Document quote-syntax Document syntax-sourcev Add mkstemp; undocument mkstemp! Revert "Handle CRLF and Unicode line endings in read-line" Don't force installation of GMP allocators in guile shell Fix buffer overread in string-locale-ci=? and related functions Adapt test for string-locale-ci=? Fix buffer overread in string-locale<? Fix recent i18n tests Update NEWS Optimize letrec* binding order in fix-letrec Mark some elisp runtime modules as non-declarative Allow $kargs as entry of $kfun New pass: elide-arity-checks Fix comments in cps/compile-bytecode Fix bugs introduced when allowing $kfun -> $kargs Fix cached-module-box cache keys Simplify module variable lookup slow-path Fix error when argument to < not a real Fix CPS optimizations to allow callk in front half CPS conversion calls module variables through trampolines Allow contification for $callk Bump minor objcode version for new intrinsics Allow users to force gmp to use libgc Fix closure-conversion bug for SCC with all free vars pruned Add GUILE_INSTALL_GMP_MEMORY_FUNCTIONS to NEWS; use at build-time Update NEWS Add ice-9/read.scm to extra_dist Bump GUILE-VERSION Fix duplicates handlers for interfaces that use interfaces Fix line and column for read errors Fix compile-psyntax.scm -- canonicalize pass not needed Fix syntax-violation, which was passing vectors instead of alists Fix syntax test Fix bug for read-syntax on ( . args) Fix tree-il effects analysis for prompts Fix bug if call-with-prompt tag not a lexical Fix R7RS include-library-declarations and cond-expand in define-library Include config.h in mini-gmp.c, if present Optimize truncate-bits Minor tweak to truncate-bits Update NEWS Update NEWS Bump version to 3.0.7 Bump objcode version Letrectify links module defs with uses Add pass to resolve free toplevel references in declarative modules Add support for recording inlinable module exports Implement cross-module inlining Fix bug in eq-constant? propagation in CSE if kf == kt Hotfix to unify (x ...) patterns in match Add frame-local-ref / frame-local-set! support for type 'ptr Move live variable computation routines to utils and graphs. Allow unchecked functions to have unboxed arguments Add CPS pretty-printer Add ,optimize-cps REPL meta-command Allow primcalls with multiple defs Use more logtest in cse.scm Add primitive alias analysis to CSE Refactor compile-bytecode Refactor send and receive shuffles in slot allocation Allow callk to continue to kargs Add new pass to optimize away return value count checks Add -Ooptimize-known-return-types at -O2 Fix type confusion in heap-numbers-equal? calls from VM -Oresolve-free-vars pass gracefully handles failed autoloads. Avoid quadratic behavior in id-var-name Add new integers.[ch] Implement odd? and even? with new integer lib Implement abs with new integer lib Implement floor-quotient with new integer lib Implement floor-remainder with new integer lib Implement floor-divide with new integer lib Implement ceiling-quotient with new integer lib Implement ceiling-remainder with new integer lib Implement ceiling-divide with new integer lib Implement truncate-quotient with new integer lib Implement truncate-remainder with new integer lib Implement truncate-divide with new integer lib Implement centered-quotient with new integer lib Implement centered-remainder with new integer lib Implement centered-divide with new integer lib Implement round-quotient with new integer lib Implement round-remainder with new integer lib Implement round-divide with new integer lib Implement gcd with new integer lib Implement lcm with new integer lib Implement scm_logand with new integer library Implement scm_logior with new integer library Implement scm_logxor with new integer library Implement scm_logtest with new integer library Implement scm_logbit_p with new integer library Implement scm_lognot with new integer library Implement scm_modulo_expt with new integer library Reimplement integer-expt in Scheme Implement scm_ash with new integer library Implement scm_bit_extract with new integer library Implement scm_logcount with new integer library Integer library takes bignums via opaque struct pointer Implement scm_integer_length with new integer library Implement integer-to-string with new integer library Simplify scm_bigprint Build scm_integer_p on scm_is_integer, not vice versa Reimplement = on integer lib, clean up scm_num_eq_p Clean up <, reimplement in terms of integer lib positive?, negative? use integer lib Simplify implementation of min, max Clean up scm_sum Simplify scm_difference, use integer lib Simplify scm_product, use integer lib Remove support for allowing exact numbers to be divided by zero Clean up scm_divide Fix deprecated bit-count* when counting 0 bits Fix scm_integer_to_double_z to always round; clean ups Reimplement scm_is_{un,}signed_integer for bignums Reimplement scm_from_int8 etc Reimplement scm_{to,from}_{int32,uint32} Reimplement scm_{to,from}_{int64,uint64} Implement scm_{to,from}_wchar inline Remove unused conv-{u,}integer.i.c scm_to_mpz uses integer lib Reimplement exact-integer-sqrt with integers.[ch] Refactor scm_sqrt in terms of integers.[ch] Expose frexp from integers lib Remove dead bignum frexp code from numbers.c divide2double refactor Simplify scm_exact_integer_quotient Remove last non-admin SCM_I_BIG_MPZ uses in numbers.c Simplify magnitude, angle Use scm_integer_to_double_z in numbers.c instead of big2dbl Avoid scm_i_mkbig outside numbers.c. Start porting srfi-60 off the bad bignum interfaces Finish srfi-60 port off old scm mpz API scm_to_ipv6 uses scm_to_mpz Bignums avoid both custom GMP allocator and finalizers take_mpz optimization Fix bug when making mpz from 0 Re-rewrite integer-expt in C Optimize scm_integer_mul_zi Optimize scm_integer_mul_zz. Less pessimal scm_integer_sub_zi Start to optimize scm_integer_sub_iz Avoid bignum clone in scm_integer_sub_zz Optimize bignum add to avoid temporary allocations Optimize bignum subtraction Optimize scm_integer_mul_ii Optimize integer-expt for fixnums Optimize logand against a positive inum Remove dead code in scm_integer_inexact_sqrt_z Fix inlinable-exports bug for pure modules peval cross-module-inlining gracefully handles missing interface Add -ftlo support Rework bootstrap to be reproducible Fix reproducibility for inlinable-exports Prebuild fewer files Avoid source properties in psyntax Slight bignum-fixnum multiplication optimization Update NEWS NEWS fixup Update unicode tables to Unicode 14.0.0; initial charsets immutable Minor NEWS tweaks GNU Guile v3.0.8 Exclude ChangeLog from assert-no-store-file-names distcheck rule Arun Isaac (9): Fix minor typo in the PEG documentation. doc: Document (ice-9 match) macros. web: Export http-request. doc: Replace square brackets with round brackets. doc: Fix minor typo in the HTTP headers documentation. doc: Improve content-range HTTP header documentation. doc: Document default delimiter of string-join. doc: Mention (ice-9 time) module path. Fix typos in SRFI docs Asher Gordon (1): Replace a line which was accidentally removed. Chris Marusich (1): Clarify the manual's "Processes" section. Christopher Allan Webber (1): Add SRFI 71: Extended LET-syntax for multiple values. Christopher Baines (1): http: Support CONNECT and PATCH HTTP methods. Dale P. Smith (1): Add 'movi' test. Daniel Llorens (52): Remove scm_generalized_vector_get_handle Add $(builddir) to include path in libguile/Makefile.am Fix 32/64 b…

 

main

 

3.0.8-49

 

3.0.8-47

￼￼

phmccarty authored and clrpackages committed on Mar 22 

1 parent 13d127f commit d4fe5be359fef9e39a1a116ce2069fbd4c729c70

Show file tree

 

Hide file tree

Showing 20 changed files with 3,919 additions and 2,733 deletions.

SplitUnified

 18  0001-Add-Require-for-guile-on-bdw-gc.patch → ...Add-missing-requirements-to-pc-file.patch

@@ -1,22 +1,24 @@From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001From: Karthik Prabhu Vinod <karthik.prabhu.vinod@intel.com>From: Karthik Prabhu Vinod <karthik.prabhu.vinod@intel.com>Date: Fri, 8 Jan 2021 13:43:54 -0800Date: Fri, 8 Jan 2021 13:43:54 -0800Subject: [PATCH] Add Require for guile on bdw-gcSubject: [PATCH] Add missing requirements to pc file

Signed-off-by: Karthik Prabhu Vinod <karthik.prabhu.vinod@intel.com>Signed-off-by: Karthik Prabhu Vinod <karthik.prabhu.vinod@intel.com>Signed-off-by: Patrick McCarty <patrick.mccarty@intel.com>------ meta/guile-2.2.pc.in | 1 + meta/guile-3.0.pc.in | 2 ++ 1 file changed, 1 insertion(+) 1 file changed, 2 insertions(+)

diff --git a/meta/guile-2.2.pc.in b/meta/guile-2.2.pc.indiff --git a/meta/guile-3.0.pc.in b/meta/guile-3.0.pc.inindex c6d12b5..2e6e800 100644index c6d12b5..3a11e49 100644--- a/meta/guile-2.2.pc.in--- a/meta/guile-3.0.pc.in+++ b/meta/guile-2.2.pc.in+++ b/meta/guile-3.0.pc.in@@ -22,6 +22,7 @@ guile=${bindir}/@guile@@@ -22,6 +22,8 @@ guile=${bindir}/@guile@ Name: GNU Guile Name: GNU Guile Description: GNU's Ubiquitous Intelligent Language for Extension Description: GNU's Ubiquitous Intelligent Language for Extension Version: @GUILE_VERSION@ Version: @GUILE_VERSION@+Requires: bdw-gc+Requires: bdw-gc+Requires.private: gmp libffi Libs: -L${libdir} -lguile-@GUILE_EFFECTIVE_VERSION@ @BDW_GC_LIBS@ Libs: -L${libdir} -lguile-@GUILE_EFFECTIVE_VERSION@ @BDW_GC_LIBS@ Libs.private: @LIB_CLOCK_GETTIME@ @LIBGMP@ @LIBLTDL@ @LIBFFI_LIBS@	\ Libs.private: @LIB_CLOCK_GETTIME@ @LIBGMP@ @LIBLTDL@ @LIBFFI_LIBS@	\ @LIBUNISTRING@ @GUILE_LIBS@ @LIBICONV@ @LIBINTL@ @LIBSOCKET@		\ @LIBUNISTRING@ @GUILE_LIBS@ @LIBICONV@ @LIBINTL@ @LIBSOCKET@		\

 45  0002-Mark-test-out-of-memory-as-an-expected-failure-for-n.patch

@@ -0,0 +1,45 @@From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001From: Rob Browning <rlb@defaultvalue.org>Date: Tue, 20 Feb 2018 23:58:09 -0600Subject: [PATCH] Mark test-out-of-memory as an expected failure for now
Since this test has been failing for a long time on variousarchitectures, mark it as expected to fail for now so that we'll stillrun it and can see the results, but won't be blocked by it.
There are known issues with the test upstream, and at least in some pastcases it's been possible to reproduce the failure quickly by runningtest-suite/standalone/test-out-of-memory in a loop.
Bug: https://debbugs.gnu.org/29464Bug-Debian: https://bugs.debian.org/880148Bug-Debian: https://bugs.debian.org/966300Bug-Debian: https://bugs.debian.org/966301
[Patch from https://sources.debian.org/data/main/g/guile-3.0/3.0.7-1/debian/patches/0005-Mark-test-out-of-memory-as-an-expected-failure-for-n.patch]
Signed-off-by: Patrick McCarty <patrick.mccarty@intel.com>--- test-suite/standalone/Makefile.am | 3 ++- 1 file changed, 2 insertions(+), 1 deletion(-)
diff --git a/test-suite/standalone/Makefile.am b/test-suite/standalone/Makefile.amindex e87100c..66bb3a5 100644--- a/test-suite/standalone/Makefile.am+++ b/test-suite/standalone/Makefile.am@@ -24,6 +24,7 @@ include $(top_srcdir)/am/snarf
# initializations so we can use += below. TESTS =+XFAIL_TESTS = noinst_LTLIBRARIES = check_PROGRAMS = check_SCRIPTS =@@ -299,6 +300,6 @@ check_SCRIPTS += test-stack-overflow TESTS += test-stack-overflow
check_SCRIPTS += test-out-of-memory-TESTS += test-out-of-memory+XFAIL_TESTS += test-out-of-memory
EXTRA_DIST += ${check_SCRIPTS}

 24  0002-Revert-Fix-build-on-platforms-where-the-stack-grows-.patch

Load diff

This file was deleted.

 57  0003-Fix-fixpoint-computation-in-compute-significant-bits.patch

Load diff

This file was deleted.

 77  A8803732E4436885.pkey

@@ -0,0 +1,77 @@-----BEGIN PGP PUBLIC KEY BLOCK-----
mQINBFmLEIkBEAC7U27v6jysuSadTd8WK0lTnoK4TueYHey17+KWilOXrGx80R1QkjIPDfQaTX76F3CQ22EeIXEYBZ858WImkrkolhEvoeJHOXkgJnib2EA6d7oXINkOUIij5cH0GCoEuw+aU415OAHK/cv09WXeDVy7/cwfhPAUc5QmWQzOEwuaV0ERd1Mwq3yxhiXN5wOS77TXKYNTMiXp4NdXgYwJFqO0e/POKPrzWSVqeZClh+ecXenapZDdR120+qRtC/Kz9YwupJPz7FImAC4XOYqZXY3ILft8Y6nCj/iE8ArIsJGF+zfz0m4L7wJfcN1gZ2sjgzjX51USi7Y39ra2MemnbBrPG+6cR/aGvScd4V/CYoAJDB+WumhPclksxTS1s4PPVELwLvbF+3trwrkKyWMCEg2kTTUQxExYe9QavSPh9p3tKpi3SNnsK/hndxGKtTrH8OVe32r93Bt8w7IqYMxwEgr4wCAgF6RCZhks5PlXaLzrrAW80aakZU8wVCfZPQO0rZ1e2m+gLmG4rkw0kB4nkBF3I+oYM2WABGXGA7G6pDgszBQIbkQfFXaWWxtLvNKtlm458Mf+Dc6VaIcVY32Wkpeu3ev9WkeDOZIIPu6dKA1mLZexODBT9uXKMIqB1Gj2ysUGgPGBwzcf5XYqjGxuCgWmCfxv70dh/PInn7W3Le1x0QARAQABtBpBbmR5IFdpbmdvIDx3aW5nb0BnbnUub3JnPokCTgQTAQgAOBYhBE/U0ojURZNOChT5paiANzLkQ2iFBQJZixHUAhsDBQsJCAcDBRUKCQgLBRYCAwEAAh4BAheAAAoJEKiANzLkQ2iFuUwP/RZk5LYxQrheNa5a1zVuwzeBcxZj9aDube0IE5zWrv2lreuIVGUNOI+Q4EPEa/YKj0HaWQesoSH/XULou8p7hOMYa41Lut6lsUhkMJMowdAUmCVVCTxmtyvuWQ9OkhtwodbJjiVU6dA+KZnTGR66fB3/XX0ss381w0sS4pVGWkN3z6/8TGEei3lVe9V8rjRM0Ox/WHhdRrjtviRxDA21FCIFov0iEiX1YQUx55Xn4kbxlyvAst0ti0Pdo9oPBweWubWLlAfu2W0AbQsQosTpjnM21aUcxP31Z0Euyua9DCxT/rteLNM1qLBktH9NZeYNFWzZmF+RvxIj9oPY8frE4b1wSr97rx5742rgdZOKQY/v8ArAbGYcqJo7DBAFbC2ukIcoRqNrBaaIrBesy5N8jOx89lWy8u67RLbtuwZCGesovQiizLuTPVUNCbUMriobl5Fi9z+rYIdLbysb+cTPoF6sIgUBxdilfaFuuW3HWWh32sB982cCKaUhyoifgFJnojnff/jCnOOrMphIbMeY1Lbmh9qzW9UmC7JyZVTHFmh7pRsNWQWGi8FlhTCbSbIvr6uVcV3sd/1TEgclNkvz0tfrZOkYCm5rLiGWepJ0fFXnxgt92SqlUI34EwtAe4g7N3IK/fNpL01EbdrdG4c/nzAru/6Ic5MOlYYCXIxxXp70tBxBbmR5IFdpbmdvIDx3aW5nb0Bwb2JveC5jb20+iQJRBBMBCAA7AhsDBQsJCAcDBRUKCQgLBRYCAwEAAh4BAheAFiEET9TSiNRFk04KFPmlqIA3MuRDaIUFAlmLEf0CGQEACgkQqIA3MuRDaIUo7w//UQTnuOXmE0Z+w9prtcsq0myF6bipdsJulSwnbZzqnKI8rlgvKqJBHXhEHq2EC4hsgbnEb2wW61LeZvzyN6wi7HOH5z6/xNWZSUnmCM8ZH+eIKL+EQ/BgNDM0hkak8J2xZ/6/ZbbhwYF6FPNMg1PFQ/rHtOw9emjAUUUItrRDJYRMyA6HtRXn5kPKYzptkwGN5QVJMBjL9Ya5i6G+mDzxO8b1gLt08CYv/ZovNfJGy9I3+r7gC2k7/FKXnfUz3vmYKpNYoBL7OycPFWp36k8KH55hTbLZR68jbpFH+4iyTyuSWpNKiBg6pU0lvoFPyDFDPQUU3iA/T+GCj8UCB+zGeGic+NgVAMJgOni/nA4XtcrGf4QCMi16QP7QM5mZmZV9AxjdsdzKxhDt9M4FpPVyQqxayDUP5RCYimdItcTzAi8pop2t+B53NjFDddfgMPx4CfVgHBnqYiAXJ1PvYSGwRn6pp+64KSOKxKNuLJoxPF+2kOrY6Q9JTNpqG7beunRJQ3Nl9FItG26C/F79vQEQVcoU7Qu7efFcAdc+Bss75jUl4KS5TpvxxbplSrk8i/FsS2kGdSmniy1gKN+TAv+7wddDSaeL2/ptOKAmU8uJzwxW77gh5i6N5Sc6RmAlnMvohhbjEoDHNTOjN/MVnheXMS0MYWE4ahlBiTjqETckroq0HUFuZHkgV2luZ28gPHdpbmdvQGlnYWxpYS5jb20+iQJOBBMBCAA4FiEET9TSiNRFk04KFPmlqIA3MuRDaIUFAlmLEcgCGwMFCwkIBwMFFQoJCAsFFgIDAQACHgECF4AACgkQqIA3MuRDaIWZChAApzEgZZCKZjoOTExbTzx7UvmYoarU52Kuz1H/Ev4AEj3OrypHSXbt+O8NJUkgh8b8XQT9C0CoBhr8hwC3JOmyihKjqodSAS9BVJlpQ+4ulbu78HmqvABuuExsPGF8me5kRqjCn++1wSkQ2Ri4Lr3KUcT/lZRA9mI6qkyY4iTnXcpEFjfKwhIiGIPchy0GjcfogGz78TndlDJoJKtbLMaouQ33bdo01sJKCVWIQhag15hrL8rAQjxr7zz+4IIuHLwZewqUAsX9hqGPgmBZBfVHccPpVh9zfMaP1at9jXzVdys9YXJfHDzM680h7QvidLl10JvgEZkJbx4fGWdyG7R56FxOM9isrSdQ8kYPthybSXm9oK7XQOV9nmrWUKAOeokPI9eimgtRjemEdo5MiUH1Dkc0xeoqc5wE64OFrUAcASc0plU2ff6jsSNq7Q+Q4U9z3tdB8zTz+lCSQZOfgIk3baAAEUCE9v9DDXT20B3EC+zZuifPVmKRYIQxbA3Epx4Yh/IBc8kqIHHTW0NTMotKdzNZzC1o6putfmRvzHa48VU8JHoR3x6TmG65B2Agw9j7As5ve0UUSq7mpYqAMgg6jW4rzIsYZc//93liR6i25fsupFpDBPK3fip1H08LhljsFgdRnrPVz+b8MZpujAErqusLSNxxiDJBUBQTHNwZlO65Ag0EWYsQiQEQAMuqr/iDzidezZ6T520DDCUsx1sypvAYtmClrIdXMwpd37uGTbp++5Cf2NNgRJsyf3jhNsWuxoAPJhjrqsr6c8FlAapki4PUvBDtW4bQg6m3T08fSk5CLpk+oUXGH0zceDgwnz8mSRcKBBdpC4O69P8cp3L0DdrDikSNye6ZTwdMc+PSvZcs+c+7O2UZSeuxPvLRr3u5jahJGmXzySzTbwe/xzhGhQSetfYEFx/SbDZSZA7Det2WtR+prIDaX+CtGhFXrBqkKiXKqhpjTdN7vqaHx8wATdOJ5YACvkb1XsfHpjtOnna2DvuOln7iQNt9CwwiXmX6WvEAc21IpkcY53WQDXz6TFmtGyrQsCB0mawi7gAU1N4Zb+a5TGSD/aHLUpoHBe7pOy/c+wDJFRkK1scVS6gPxQwhy7IqzAxYWo3D7bQFurFTQVFfcRVQfZYIUIfm6MrHvygsyJ5rJCQ8rCUR4f7iGGM4LkPYQVRi2zUopql5uejZMoqvLRSB8IeP/ItDgsdXq9JHSyIlwatZNRqHDQzHqQ4n+GaNckfDQ1aK/2/zh7rpYOprOwqo1DvQIlg1RnbjiXPnv48aae3jpeV9BDRN1Nd2TzQsm6diA7MITnmYji1NAJMigOcpHEKVM0EPaNeMahjhoA1uJPn8T+eK0nzuqiD3Z2ICQ6SalKPZABEBAAGJAjYEGAEIACAWIQRP1NKI1EWTTgoU+aWogDcy5ENohQUCWYsQiQIbDAAKCRCogDcy5ENohf0tEAChNbqT1siyZmvBt7iRPXPWYHkBx4u0S9AIaCddocaKHLOQMO7D4gQLHANO4pmM5P8DZVApE9zpvigUMH5Lz67g+H2DEnHqCqE6lN8+d0fZ6SZk7sS+7ZOHNfB4TX021AHhcP9m16luTkr8PLwJJnFJNg8z1BGMygAZZKxAOSopeGuJXaDj6ASpd+A/n1JKYGO/Ctbt+jV2/dxH4LmAB44K6+F+T+vyEPaSJMdSBxKuy5N8ZzaWzRZ/gjVzbN8iN65cz9GVgeOEZVhNE3CyP67CHCWWdVDP2q/LL6F7DhfLOEd61zqLFkxUWnuwQSNu6v1YPvk+N1+V5F3FHMIUPPBYv8KEdhD0tp0NYQpu2dcOKLQQ8/KgGxBLADuOVeclejyMQbI8JqVp6G+sh2cw0AruOYXHw7zg+Bl1p0SVtlWTbURGt/5IvS/PI4wgH7KzKG7rk2/5dPr7AmkAkmJPFzN5wBWc67OZJxOIu2SE6CWC+iLsVCpgTczBtnthtqBHoinhcwaIVJ4vl+dAGNytu23oRBPmCTfWz+VigsLy7GTZkF3wAoKaL1Lle5wybSztHYrxFVO7RHNkoYYG3ZW6bSgq4LW5Mq9nL9eGlG3kidwCKXukbB2uLCS0pRYhDiUGaZS2kr5bNwyxOYb58GhACDWZtU9LXuxtkeZzlPlSmcRwqA===Su8m-----END PGP PUBLIC KEY BLOCK-----

 2  Makefile

@@ -1,5 +1,5 @@PKG_NAME := guilePKG_NAME := guileURL = https://mirrors.kernel.org/gnu/guile/guile-2.2.7.tar.xzURL = https://mirrors.kernel.org/gnu/guile/guile-3.0.8.tar.xzARCHIVES = ARCHIVES = 

include ../common/Makefile.commoninclude ../common/Makefile.common

 1,147  NEWS

Load diff

Large diffs are not rendered by default.

 2  buildreq_cache

@@ -1,3 +1,3 @@2.2.73.0.8glibc-localeglibc-localepkgconfig(bdw-gc)pkgconfig(bdw-gc)

 

 29  configure_misses

@@ -1,36 +1,27 @@Configure miss: CFLocaleCopyPreferredLanguagesConfigure miss: 32-bit host C ABIConfigure miss: DINFINITYConfigure miss: DINFINITYConfigure miss: DQNANConfigure miss: DQNANConfigure miss: __sincosConfigure miss: __sincosConfigure miss: __uc_get_ar_bsp in -lucaConfigure miss: __uc_get_ar_bsp in -lucaConfigure miss: chsizeConfigure miss: chsizeConfigure miss: direct.h presenceConfigure miss: compiler option needed when checking for declarationsConfigure miss: direct.h usabilityConfigure miss: crtdefs.hConfigure miss: gcc -std=gnu11 option to accept ISO C99Configure miss: gcc -std=gnu11 options needed to detect all undeclared functionsConfigure miss: gcc-objcopyConfigure miss: if gcc -std=gnu11 static flag -static worksConfigure miss: if gcc -std=gnu11 static flag -static worksConfigure miss: if gcc -std=gnu11 supports -fno-rtti -fno-exceptionsConfigure miss: if gcc -std=gnu11 supports -fno-rtti -fno-exceptionsConfigure miss: libc.hConfigure miss: libc.hConfigure miss: libc.h presenceConfigure miss: libc.h usabilityConfigure miss: machine/fpu.hConfigure miss: machine/fpu.hConfigure miss: machine/fpu.h presenceConfigure miss: machine/fpu.h usabilityConfigure miss: process.h presenceConfigure miss: process.h usabilityConfigure miss: pthread_attr_get_npConfigure miss: pthread_attr_get_npConfigure miss: pthread_get_stackaddr_npConfigure miss: pthread_get_stackaddr_npConfigure miss: pthread_np.hConfigure miss: pthread_np.hConfigure miss: pthread_np.h presenceConfigure miss: pthread_np.h usabilityConfigure miss: sched_getaffinity_npConfigure miss: sched_getaffinity_npConfigure miss: snprintf_lConfigure miss: struct GC_stack_base.reg_baseConfigure miss: struct sockaddr_in6.sin6_lenConfigure miss: struct sockaddr_in6.sin6_lenConfigure miss: sys/stdtypes.hConfigure miss: sys/stdtypes.hConfigure miss: sys/stdtypes.h presenceConfigure miss: sys/stdtypes.h usabilityConfigure miss: sys/sysctl.hConfigure miss: sys/sysctl.hConfigure miss: sys/sysmp.hConfigure miss: sys/sysmp.hConfigure miss: sys/utime.h presenceConfigure miss: sys/utime.h usabilityConfigure miss: sysctlConfigure miss: sysctlConfigure miss: sysmpConfigure miss: sysmpConfigure miss: timezone_tConfigure miss: timezone_t@@ -42,4 +33,8 @@ Configure miss: whether hstrerror is declaredConfigure miss: whether libc.h and unistd.h can be included togetherConfigure miss: whether libc.h and unistd.h can be included togetherConfigure miss: whether localtime caches TZConfigure miss: whether localtime caches TZConfigure miss: whether pow can be used without linking with libmConfigure miss: whether pow can be used without linking with libmConfigure miss: whether we need POSIX to get struct utimbufConfigure miss: whether the compiler is clangConfigure miss: whether the compiler produces multi-arch binariesConfigure miss: whether we need POSIX to get struct utimbufConfigure miss: x86_64-generic-linux-gnu-gcc-objcopyConfigure miss: x86_64-generic-linux-gnu-objcopy

 2  excludes

@@ -1,3 +1,3 @@# This file contains the output files that need %exclude. Full path# This file contains the output files that need %exclude. Full path# names, one per line.# names, one per line./usr/lib64/libguile-2.2.so.1.4.2-gdb.scm/usr/lib64/libguile-*.so.*-gdb.scm

 16  guile-2.2.7.tar.xz.sig

Load diff

This file was deleted.

 16  guile-3.0.8.tar.xz.sig

@@ -0,0 +1,16 @@-----BEGIN PGP SIGNATURE-----
iQIzBAABCAAdFiEET9TSiNRFk04KFPmlqIA3MuRDaIUFAmIGEqAACgkQqIA3MuRDaIUUeg//bI8qHzbsw34ozbBi6DE6p2oBJNrW3Ag5qCgN25+ulWawjBl60AENoEy6O3pPY0asc6aRa79ztC7Jbi5SF/qXNN+jH7H1a/t9h5LEi+cvoKds9stgSzCZqAF621MOulqoalD27LfxZDS9kzbbNEXLxWWLm+oYKIGge76mLHrbBpHG0cl5Jmu25mDBvcWLc709UE3Tl2XRzz9Lz2mRpLvWqxO9DuZq6GQyxoCzbS5fQz6fbYQpbxGH9RePIvbZfiRJ1xjXqdw+8gdeStmXhWMx6WWN5B6FqDczlRKdDfvr96Mfvq33IF7XPT0c+mVT0EbI7v+L4NGqfl5uLeoROpk5urmuAhT0JaQIjIqv6MfUMWb9HRDhISmxPkIBZCUHoV+7H7imw6CM3mGZ6vLOD2uBsRW3lepk3yx6/RAFXBSMfa04PEctHhgCYtpa+jsSIYXblIeFmSEke6JTJ53fEDKc5m7DbIseGCvZ7XuVKm5hbcSR4sGv6xkJ7rvdkX4n+DHgJLglCdBlqFLjPPaFmILATwwhFhjfF8wAfUD7QsxVFr3UWwOdwyCVAVTsJrEZuwrgI032FQbqWLyhECrljMY7ZyxC3kRFI2nZCApENnBdEShoe8zp+kuNf8+lDFibQjjW5NsDkKD2ctLg94TE75qEpWYCOU/5A53NEddVv/gjXY4==Ro42-----END PGP SIGNATURE-----

 1,615  guile.spec

@@ -2,17 +2,17 @@# This file is auto-generated. DO NOT EDIT# This file is auto-generated. DO NOT EDIT# Generated by: autospec.py# Generated by: autospec.py### Source0 file verified with key 0x090B11993D9AEBB5 (ludo@gnu.org)# Source0 file verified with key 0xA8803732E4436885 (wingo@gnu.org)##Name : guileName : guileVersion : 2.2.7Version : 3.0.8Release : 46Release : 47URL : https://mirrors.kernel.org/gnu/guile/guile-2.2.7.tar.xzURL : https://mirrors.kernel.org/gnu/guile/guile-3.0.8.tar.xzSource0 : https://mirrors.kernel.org/gnu/guile/guile-2.2.7.tar.xzSource0 : https://mirrors.kernel.org/gnu/guile/guile-3.0.8.tar.xzSource1 : https://mirrors.kernel.org/gnu/guile/guile-2.2.7.tar.xz.sigSource1 : https://mirrors.kernel.org/gnu/guile/guile-3.0.8.tar.xz.sigSummary : GNU's Ubiquitous Intelligent Language for Extension (uninstalled)Summary : GNU's Ubiquitous Intelligent Language for Extension (uninstalled)Group : Development/ToolsGroup : Development/ToolsLicense : GPL-3.0 LGPL-3.0License : GFDL-1.1 GPL-3.0 LGPL-3.0Requires: guile-bin = %{version}-%{release}Requires: guile-bin = %{version}-%{release}Requires: guile-data = %{version}-%{release}Requires: guile-data = %{version}-%{release}Requires: guile-info = %{version}-%{release}Requires: guile-info = %{version}-%{release}@@ -29,12 +29,10 @@ BuildRequires : pkgconfig(libffi)BuildRequires : readline-devBuildRequires : readline-devBuildRequires : sedBuildRequires : sedBuildRequires : texinfoBuildRequires : texinfoPatch1: 0001-Add-Require-for-guile-on-bdw-gc.patchPatch1: 0001-Add-missing-requirements-to-pc-file.patchPatch2: 0002-Revert-Fix-build-on-platforms-where-the-stack-grows-.patchPatch3: 0003-Fix-fixpoint-computation-in-compute-significant-bits.patch

%description%descriptionThis is version 2.2 of Guile, Project GNU's extension language library.This is version 3.0 of Guile, Project GNU's extension language library.Guile is an implementation of the Scheme programming language, packagedGuile is an implementation of the Scheme programming language, packagedas a library that can be linked into applications to give them their ownas a library that can be linked into applications to give them their ownextension language. Guile supports other languages as well, givingextension language. Guile supports other languages as well, giving@@ -106,18 +104,16 @@ man components for the guile package.



%prep%prep%setup -q -n guile-2.2.7%setup -q -n guile-3.0.8cd %{_builddir}/guile-2.2.7cd %{_builddir}/guile-3.0.8%patch1 -p1%patch1 -p1%patch2 -p1%patch3 -p1

%build%buildexport http_proxy=http://127.0.0.1:9/export http_proxy=http://127.0.0.1:9/export https_proxy=http://127.0.0.1:9/export https_proxy=http://127.0.0.1:9/export no_proxy=localhost,127.0.0.1,0.0.0.0export no_proxy=localhost,127.0.0.1,0.0.0.0export LANG=C.UTF-8export LANG=C.UTF-8export SOURCE_DATE_EPOCH=1628095116export SOURCE_DATE_EPOCH=1647822344export GCC_IGNORE_WERROR=1export GCC_IGNORE_WERROR=1export CFLAGS="$CFLAGS -fno-lto "export CFLAGS="$CFLAGS -fno-lto "export FCFLAGS="$FFLAGS -fno-lto "export FCFLAGS="$FFLAGS -fno-lto "@@ -127,322 +123,352 @@ export CXXFLAGS="$CXXFLAGS -fno-lto "make %{?_smp_mflags}make %{?_smp_mflags}

%install%installexport SOURCE_DATE_EPOCH=1628095116export SOURCE_DATE_EPOCH=1647822344rm -rf %{buildroot}rm -rf %{buildroot}mkdir -p %{buildroot}/usr/share/package-licenses/guilemkdir -p %{buildroot}/usr/share/package-licenses/guilecp %{_builddir}/guile-2.2.7/COPYING %{buildroot}/usr/share/package-licenses/guile/8624bcdae55baeef00cd11d5dfcfa60f68710a02cp %{_builddir}/guile-3.0.8/COPYING %{buildroot}/usr/share/package-licenses/guile/8624bcdae55baeef00cd11d5dfcfa60f68710a02cp %{_builddir}/guile-2.2.7/COPYING.LESSER %{buildroot}/usr/share/package-licenses/guile/e203d4ef09d404fa5c03cf6590e44231665be689cp %{_builddir}/guile-3.0.8/COPYING.LESSER %{buildroot}/usr/share/package-licenses/guile/e203d4ef09d404fa5c03cf6590e44231665be689cp %{_builddir}/guile-2.2.7/LICENSE %{buildroot}/usr/share/package-licenses/guile/1b32791cb14bd393369489b8dac99b741d884ba0cp %{_builddir}/guile-3.0.8/LICENSE %{buildroot}/usr/share/package-licenses/guile/1b32791cb14bd393369489b8dac99b741d884ba0cp %{_builddir}/guile-3.0.8/libguile/lightening/COPYING %{buildroot}/usr/share/package-licenses/guile/842745cb706f8f2126506f544492f7a80dbe29b3cp %{_builddir}/guile-3.0.8/libguile/lightening/COPYING.DOC %{buildroot}/usr/share/package-licenses/guile/5e7b36dfb18c7b8002bb9c41f87b65d280abd2aecp %{_builddir}/guile-3.0.8/libguile/lightening/COPYING.LESSER %{buildroot}/usr/share/package-licenses/guile/e7d563f52bf5295e6dba1d67ac23e9f6a160fab9%make_install%make_install## Remove excluded files## Remove excluded filesrm -f %{buildroot}/usr/lib64/libguile-2.2.so.1.4.2-gdb.scmrm -f %{buildroot}*/usr/lib64/libguile-*.so.*-gdb.scm

%files%files%defattr(-,root,root,-)%defattr(-,root,root,-)/usr/lib64/guile/2.2/ccache/ice-9/and-let-star.go/usr/lib64/guile/3.0/ccache/ice-9/and-let-star.go/usr/lib64/guile/2.2/ccache/ice-9/arrays.go/usr/lib64/guile/3.0/ccache/ice-9/arrays.go/usr/lib64/guile/2.2/ccache/ice-9/atomic.go/usr/lib64/guile/3.0/ccache/ice-9/atomic.go/usr/lib64/guile/2.2/ccache/ice-9/binary-ports.go/usr/lib64/guile/3.0/ccache/ice-9/binary-ports.go/usr/lib64/guile/2.2/ccache/ice-9/boot-9.go/usr/lib64/guile/3.0/ccache/ice-9/boot-9.go/usr/lib64/guile/2.2/ccache/ice-9/buffered-input.go/usr/lib64/guile/3.0/ccache/ice-9/buffered-input.go/usr/lib64/guile/2.2/ccache/ice-9/calling.go/usr/lib64/guile/3.0/ccache/ice-9/calling.go/usr/lib64/guile/2.2/ccache/ice-9/channel.go/usr/lib64/guile/3.0/ccache/ice-9/command-line.go/usr/lib64/guile/2.2/ccache/ice-9/command-line.go/usr/lib64/guile/3.0/ccache/ice-9/common-list.go/usr/lib64/guile/2.2/ccache/ice-9/common-list.go/usr/lib64/guile/3.0/ccache/ice-9/control.go/usr/lib64/guile/2.2/ccache/ice-9/control.go/usr/lib64/guile/3.0/ccache/ice-9/copy-tree.go/usr/lib64/guile/2.2/ccache/ice-9/curried-definitions.go/usr/lib64/guile/3.0/ccache/ice-9/curried-definitions.go/usr/lib64/guile/2.2/ccache/ice-9/debug.go/usr/lib64/guile/3.0/ccache/ice-9/deprecated.go/usr/lib64/guile/2.2/ccache/ice-9/deprecated.go/usr/lib64/guile/3.0/ccache/ice-9/documentation.go/usr/lib64/guile/2.2/ccache/ice-9/documentation.go/usr/lib64/guile/3.0/ccache/ice-9/eval-string.go/usr/lib64/guile/2.2/ccache/ice-9/eval-string.go/usr/lib64/guile/3.0/ccache/ice-9/eval.go/usr/lib64/guile/2.2/ccache/ice-9/eval.go/usr/lib64/guile/3.0/ccache/ice-9/exceptions.go/usr/lib64/guile/2.2/ccache/ice-9/expect.go/usr/lib64/guile/3.0/ccache/ice-9/expect.go/usr/lib64/guile/2.2/ccache/ice-9/fdes-finalizers.go/usr/lib64/guile/3.0/ccache/ice-9/fdes-finalizers.go/usr/lib64/guile/2.2/ccache/ice-9/format.go/usr/lib64/guile/3.0/ccache/ice-9/format.go/usr/lib64/guile/2.2/ccache/ice-9/ftw.go/usr/lib64/guile/3.0/ccache/ice-9/ftw.go/usr/lib64/guile/2.2/ccache/ice-9/futures.go/usr/lib64/guile/3.0/ccache/ice-9/futures.go/usr/lib64/guile/2.2/ccache/ice-9/gap-buffer.go/usr/lib64/guile/3.0/ccache/ice-9/gap-buffer.go/usr/lib64/guile/2.2/ccache/ice-9/getopt-long.go/usr/lib64/guile/3.0/ccache/ice-9/getopt-long.go/usr/lib64/guile/2.2/ccache/ice-9/hash-table.go/usr/lib64/guile/3.0/ccache/ice-9/hash-table.go/usr/lib64/guile/2.2/ccache/ice-9/hcons.go/usr/lib64/guile/3.0/ccache/ice-9/hcons.go/usr/lib64/guile/2.2/ccache/ice-9/history.go/usr/lib64/guile/3.0/ccache/ice-9/history.go/usr/lib64/guile/2.2/ccache/ice-9/i18n.go/usr/lib64/guile/3.0/ccache/ice-9/i18n.go/usr/lib64/guile/2.2/ccache/ice-9/iconv.go/usr/lib64/guile/3.0/ccache/ice-9/iconv.go/usr/lib64/guile/2.2/ccache/ice-9/lineio.go/usr/lib64/guile/3.0/ccache/ice-9/lineio.go/usr/lib64/guile/2.2/ccache/ice-9/list.go/usr/lib64/guile/3.0/ccache/ice-9/list.go/usr/lib64/guile/2.2/ccache/ice-9/local-eval.go/usr/lib64/guile/3.0/ccache/ice-9/local-eval.go/usr/lib64/guile/2.2/ccache/ice-9/ls.go/usr/lib64/guile/3.0/ccache/ice-9/ls.go/usr/lib64/guile/2.2/ccache/ice-9/mapping.go/usr/lib64/guile/3.0/ccache/ice-9/match.go/usr/lib64/guile/2.2/ccache/ice-9/match.go/usr/lib64/guile/3.0/ccache/ice-9/networking.go/usr/lib64/guile/2.2/ccache/ice-9/networking.go/usr/lib64/guile/3.0/ccache/ice-9/null.go/usr/lib64/guile/2.2/ccache/ice-9/null.go/usr/lib64/guile/3.0/ccache/ice-9/occam-channel.go/usr/lib64/guile/2.2/ccache/ice-9/occam-channel.go/usr/lib64/guile/3.0/ccache/ice-9/optargs.go/usr/lib64/guile/2.2/ccache/ice-9/optargs.go/usr/lib64/guile/3.0/ccache/ice-9/peg.go/usr/lib64/guile/2.2/ccache/ice-9/peg.go/usr/lib64/guile/3.0/ccache/ice-9/peg/cache.go/usr/lib64/guile/2.2/ccache/ice-9/peg/cache.go/usr/lib64/guile/3.0/ccache/ice-9/peg/codegen.go/usr/lib64/guile/2.2/ccache/ice-9/peg/codegen.go/usr/lib64/guile/3.0/ccache/ice-9/peg/simplify-tree.go/usr/lib64/guile/2.2/ccache/ice-9/peg/simplify-tree.go/usr/lib64/guile/3.0/ccache/ice-9/peg/string-peg.go/usr/lib64/guile/2.2/ccache/ice-9/peg/string-peg.go/usr/lib64/guile/3.0/ccache/ice-9/peg/using-parsers.go/usr/lib64/guile/2.2/ccache/ice-9/peg/using-parsers.go/usr/lib64/guile/3.0/ccache/ice-9/poe.go/usr/lib64/guile/2.2/ccache/ice-9/poe.go/usr/lib64/guile/3.0/ccache/ice-9/poll.go/usr/lib64/guile/2.2/ccache/ice-9/poll.go/usr/lib64/guile/3.0/ccache/ice-9/popen.go/usr/lib64/guile/2.2/ccache/ice-9/popen.go/usr/lib64/guile/3.0/ccache/ice-9/ports.go/usr/lib64/guile/2.2/ccache/ice-9/ports.go/usr/lib64/guile/3.0/ccache/ice-9/posix.go/usr/lib64/guile/2.2/ccache/ice-9/posix.go/usr/lib64/guile/3.0/ccache/ice-9/pretty-print.go/usr/lib64/guile/2.2/ccache/ice-9/pretty-print.go/usr/lib64/guile/3.0/ccache/ice-9/psyntax-pp.go/usr/lib64/guile/2.2/ccache/ice-9/psyntax-pp.go/usr/lib64/guile/3.0/ccache/ice-9/q.go/usr/lib64/guile/2.2/ccache/ice-9/q.go/usr/lib64/guile/3.0/ccache/ice-9/r5rs.go/usr/lib64/guile/2.2/ccache/ice-9/r5rs.go/usr/lib64/guile/3.0/ccache/ice-9/rdelim.go/usr/lib64/guile/2.2/ccache/ice-9/rdelim.go/usr/lib64/guile/3.0/ccache/ice-9/readline.go/usr/lib64/guile/2.2/ccache/ice-9/readline.go/usr/lib64/guile/3.0/ccache/ice-9/receive.go/usr/lib64/guile/2.2/ccache/ice-9/receive.go/usr/lib64/guile/3.0/ccache/ice-9/regex.go/usr/lib64/guile/2.2/ccache/ice-9/regex.go/usr/lib64/guile/3.0/ccache/ice-9/runq.go/usr/lib64/guile/2.2/ccache/ice-9/runq.go/usr/lib64/guile/3.0/ccache/ice-9/rw.go/usr/lib64/guile/2.2/ccache/ice-9/rw.go/usr/lib64/guile/3.0/ccache/ice-9/safe-r5rs.go/usr/lib64/guile/2.2/ccache/ice-9/safe-r5rs.go/usr/lib64/guile/3.0/ccache/ice-9/safe.go/usr/lib64/guile/2.2/ccache/ice-9/safe.go/usr/lib64/guile/3.0/ccache/ice-9/sandbox.go/usr/lib64/guile/2.2/ccache/ice-9/sandbox.go/usr/lib64/guile/3.0/ccache/ice-9/save-stack.go/usr/lib64/guile/2.2/ccache/ice-9/save-stack.go/usr/lib64/guile/3.0/ccache/ice-9/scm-style-repl.go/usr/lib64/guile/2.2/ccache/ice-9/scm-style-repl.go/usr/lib64/guile/3.0/ccache/ice-9/serialize.go/usr/lib64/guile/2.2/ccache/ice-9/serialize.go/usr/lib64/guile/3.0/ccache/ice-9/session.go/usr/lib64/guile/2.2/ccache/ice-9/session.go/usr/lib64/guile/3.0/ccache/ice-9/slib.go/usr/lib64/guile/2.2/ccache/ice-9/slib.go/usr/lib64/guile/3.0/ccache/ice-9/stack-catch.go/usr/lib64/guile/2.2/ccache/ice-9/stack-catch.go/usr/lib64/guile/3.0/ccache/ice-9/streams.go/usr/lib64/guile/2.2/ccache/ice-9/streams.go/usr/lib64/guile/3.0/ccache/ice-9/string-fun.go/usr/lib64/guile/2.2/ccache/ice-9/string-fun.go/usr/lib64/guile/3.0/ccache/ice-9/suspendable-ports.go/usr/lib64/guile/2.2/ccache/ice-9/suspendable-ports.go/usr/lib64/guile/3.0/ccache/ice-9/textual-ports.go/usr/lib64/guile/2.2/ccache/ice-9/syncase.go/usr/lib64/guile/3.0/ccache/ice-9/threads.go/usr/lib64/guile/2.2/ccache/ice-9/textual-ports.go/usr/lib64/guile/3.0/ccache/ice-9/time.go/usr/lib64/guile/2.2/ccache/ice-9/threads.go/usr/lib64/guile/3.0/ccache/ice-9/top-repl.go/usr/lib64/guile/2.2/ccache/ice-9/time.go/usr/lib64/guile/3.0/ccache/ice-9/unicode.go/usr/lib64/guile/2.2/ccache/ice-9/top-repl.go/usr/lib64/guile/3.0/ccache/ice-9/vlist.go/usr/lib64/guile/2.2/ccache/ice-9/unicode.go/usr/lib64/guile/3.0/ccache/ice-9/weak-vector.go/usr/lib64/guile/2.2/ccache/ice-9/vlist.go/usr/lib64/guile/3.0/ccache/language/brainfuck/compile-scheme.go/usr/lib64/guile/2.2/ccache/ice-9/weak-vector.go/usr/lib64/guile/3.0/ccache/language/brainfuck/compile-tree-il.go/usr/lib64/guile/2.2/ccache/language/brainfuck/compile-scheme.go/usr/lib64/guile/3.0/ccache/language/brainfuck/parse.go/usr/lib64/guile/2.2/ccache/language/brainfuck/compile-tree-il.go/usr/lib64/guile/3.0/ccache/language/brainfuck/spec.go/usr/lib64/guile/2.2/ccache/language/brainfuck/parse.go/usr/lib64/guile/3.0/ccache/language/bytecode.go/usr/lib64/guile/2.2/ccache/language/brainfuck/spec.go/usr/lib64/guile/3.0/ccache/language/bytecode/spec.go/usr/lib64/guile/2.2/ccache/language/bytecode.go/usr/lib64/guile/3.0/ccache/language/cps.go/usr/lib64/guile/2.2/ccache/language/bytecode/spec.go/usr/lib64/guile/3.0/ccache/language/cps/closure-conversion.go/usr/lib64/guile/2.2/ccache/language/cps.go/usr/lib64/guile/3.0/ccache/language/cps/compile-bytecode.go/usr/lib64/guile/2.2/ccache/language/cps/closure-conversion.go/usr/lib64/guile/3.0/ccache/language/cps/contification.go/usr/lib64/guile/2.2/ccache/language/cps/compile-bytecode.go/usr/lib64/guile/3.0/ccache/language/cps/cse.go/usr/lib64/guile/2.2/ccache/language/cps/constructors.go/usr/lib64/guile/3.0/ccache/language/cps/dce.go/usr/lib64/guile/2.2/ccache/language/cps/contification.go/usr/lib64/guile/3.0/ccache/language/cps/devirtualize-integers.go/usr/lib64/guile/2.2/ccache/language/cps/cse.go/usr/lib64/guile/3.0/ccache/language/cps/dump.go/usr/lib64/guile/2.2/ccache/language/cps/dce.go/usr/lib64/guile/3.0/ccache/language/cps/effects-analysis.go/usr/lib64/guile/2.2/ccache/language/cps/effects-analysis.go/usr/lib64/guile/3.0/ccache/language/cps/elide-arity-checks.go/usr/lib64/guile/2.2/ccache/language/cps/elide-values.go/usr/lib64/guile/3.0/ccache/language/cps/graphs.go/usr/lib64/guile/2.2/ccache/language/cps/handle-interrupts.go/usr/lib64/guile/3.0/ccache/language/cps/intmap.go/usr/lib64/guile/2.2/ccache/language/cps/intmap.go/usr/lib64/guile/3.0/ccache/language/cps/intset.go/usr/lib64/guile/2.2/ccache/language/cps/intset.go/usr/lib64/guile/3.0/ccache/language/cps/licm.go/usr/lib64/guile/2.2/ccache/language/cps/licm.go/usr/lib64/guile/3.0/ccache/language/cps/loop-instrumentation.go/usr/lib64/guile/2.2/ccache/language/cps/optimize.go/usr/lib64/guile/3.0/ccache/language/cps/optimize.go/usr/lib64/guile/2.2/ccache/language/cps/peel-loops.go/usr/lib64/guile/3.0/ccache/language/cps/peel-loops.go/usr/lib64/guile/2.2/ccache/language/cps/primitives.go/usr/lib64/guile/3.0/ccache/language/cps/prune-top-level-scopes.go/usr/lib64/guile/2.2/ccache/language/cps/prune-bailouts.go/usr/lib64/guile/3.0/ccache/language/cps/reify-primitives.go/usr/lib64/guile/2.2/ccache/language/cps/prune-top-level-scopes.go/usr/lib64/guile/3.0/ccache/language/cps/renumber.go/usr/lib64/guile/2.2/ccache/language/cps/reify-primitives.go/usr/lib64/guile/3.0/ccache/language/cps/return-types.go/usr/lib64/guile/2.2/ccache/language/cps/renumber.go/usr/lib64/guile/3.0/ccache/language/cps/rotate-loops.go/usr/lib64/guile/2.2/ccache/language/cps/rotate-loops.go/usr/lib64/guile/3.0/ccache/language/cps/self-references.go/usr/lib64/guile/2.2/ccache/language/cps/self-references.go/usr/lib64/guile/3.0/ccache/language/cps/simplify.go/usr/lib64/guile/2.2/ccache/language/cps/simplify.go/usr/lib64/guile/3.0/ccache/language/cps/slot-allocation.go/usr/lib64/guile/2.2/ccache/language/cps/slot-allocation.go/usr/lib64/guile/3.0/ccache/language/cps/spec.go/usr/lib64/guile/2.2/ccache/language/cps/spec.go/usr/lib64/guile/3.0/ccache/language/cps/specialize-numbers.go/usr/lib64/guile/2.2/ccache/language/cps/specialize-numbers.go/usr/lib64/guile/3.0/ccache/language/cps/specialize-primcalls.go/usr/lib64/guile/2.2/ccache/language/cps/specialize-primcalls.go/usr/lib64/guile/3.0/ccache/language/cps/split-rec.go/usr/lib64/guile/2.2/ccache/language/cps/split-rec.go/usr/lib64/guile/3.0/ccache/language/cps/switch.go/usr/lib64/guile/2.2/ccache/language/cps/type-checks.go/usr/lib64/guile/3.0/ccache/language/cps/type-checks.go/usr/lib64/guile/2.2/ccache/language/cps/type-fold.go/usr/lib64/guile/3.0/ccache/language/cps/type-fold.go/usr/lib64/guile/2.2/ccache/language/cps/types.go/usr/lib64/guile/3.0/ccache/language/cps/types.go/usr/lib64/guile/2.2/ccache/language/cps/utils.go/usr/lib64/guile/3.0/ccache/language/cps/utils.go/usr/lib64/guile/2.2/ccache/language/cps/verify.go/usr/lib64/guile/3.0/ccache/language/cps/verify.go/usr/lib64/guile/2.2/ccache/language/cps/with-cps.go/usr/lib64/guile/3.0/ccache/language/cps/with-cps.go/usr/lib64/guile/2.2/ccache/language/ecmascript/array.go/usr/lib64/guile/3.0/ccache/language/ecmascript/array.go/usr/lib64/guile/2.2/ccache/language/ecmascript/base.go/usr/lib64/guile/3.0/ccache/language/ecmascript/base.go/usr/lib64/guile/2.2/ccache/language/ecmascript/compile-tree-il.go/usr/lib64/guile/3.0/ccache/language/ecmascript/compile-tree-il.go/usr/lib64/guile/2.2/ccache/language/ecmascript/function.go/usr/lib64/guile/3.0/ccache/language/ecmascript/function.go/usr/lib64/guile/2.2/ccache/language/ecmascript/impl.go/usr/lib64/guile/3.0/ccache/language/ecmascript/impl.go/usr/lib64/guile/2.2/ccache/language/ecmascript/parse.go/usr/lib64/guile/3.0/ccache/language/ecmascript/parse.go/usr/lib64/guile/2.2/ccache/language/ecmascript/spec.go/usr/lib64/guile/3.0/ccache/language/ecmascript/spec.go/usr/lib64/guile/2.2/ccache/language/ecmascript/tokenize.go/usr/lib64/guile/3.0/ccache/language/ecmascript/tokenize.go/usr/lib64/guile/2.2/ccache/language/elisp/bindings.go/usr/lib64/guile/3.0/ccache/language/elisp/bindings.go/usr/lib64/guile/2.2/ccache/language/elisp/boot.go/usr/lib64/guile/3.0/ccache/language/elisp/boot.go/usr/lib64/guile/2.2/ccache/language/elisp/compile-tree-il.go/usr/lib64/guile/3.0/ccache/language/elisp/compile-tree-il.go/usr/lib64/guile/2.2/ccache/language/elisp/falias.go/usr/lib64/guile/3.0/ccache/language/elisp/falias.go/usr/lib64/guile/2.2/ccache/language/elisp/lexer.go/usr/lib64/guile/3.0/ccache/language/elisp/lexer.go/usr/lib64/guile/2.2/ccache/language/elisp/parser.go/usr/lib64/guile/3.0/ccache/language/elisp/parser.go/usr/lib64/guile/2.2/ccache/language/elisp/runtime.go/usr/lib64/guile/3.0/ccache/language/elisp/runtime.go/usr/lib64/guile/2.2/ccache/language/elisp/runtime/function-slot.go/usr/lib64/guile/3.0/ccache/language/elisp/runtime/function-slot.go/usr/lib64/guile/2.2/ccache/language/elisp/runtime/value-slot.go/usr/lib64/guile/3.0/ccache/language/elisp/runtime/value-slot.go/usr/lib64/guile/2.2/ccache/language/elisp/spec.go/usr/lib64/guile/3.0/ccache/language/elisp/spec.go/usr/lib64/guile/2.2/ccache/language/scheme/compile-tree-il.go/usr/lib64/guile/3.0/ccache/language/scheme/compile-tree-il.go/usr/lib64/guile/2.2/ccache/language/scheme/decompile-tree-il.go/usr/lib64/guile/3.0/ccache/language/scheme/decompile-tree-il.go/usr/lib64/guile/2.2/ccache/language/scheme/spec.go/usr/lib64/guile/3.0/ccache/language/scheme/spec.go/usr/lib64/guile/2.2/ccache/language/tree-il.go/usr/lib64/guile/3.0/ccache/language/tree-il.go/usr/lib64/guile/2.2/ccache/language/tree-il/analyze.go/usr/lib64/guile/3.0/ccache/language/tree-il/analyze.go/usr/lib64/guile/2.2/ccache/language/tree-il/canonicalize.go/usr/lib64/guile/3.0/ccache/language/tree-il/compile-bytecode.go/usr/lib64/guile/2.2/ccache/language/tree-il/compile-cps.go/usr/lib64/guile/3.0/ccache/language/tree-il/compile-cps.go/usr/lib64/guile/2.2/ccache/language/tree-il/debug.go/usr/lib64/guile/3.0/ccache/language/tree-il/cps-primitives.go/usr/lib64/guile/2.2/ccache/language/tree-il/effects.go/usr/lib64/guile/3.0/ccache/language/tree-il/debug.go/usr/lib64/guile/2.2/ccache/language/tree-il/fix-letrec.go/usr/lib64/guile/3.0/ccache/language/tree-il/effects.go/usr/lib64/guile/2.2/ccache/language/tree-il/optimize.go/usr/lib64/guile/3.0/ccache/language/tree-il/eta-expand.go/usr/lib64/guile/2.2/ccache/language/tree-il/peval.go/usr/lib64/guile/3.0/ccache/language/tree-il/fix-letrec.go/usr/lib64/guile/2.2/ccache/language/tree-il/primitives.go/usr/lib64/guile/3.0/ccache/language/tree-il/inlinable-exports.go/usr/lib64/guile/2.2/ccache/language/tree-il/spec.go/usr/lib64/guile/3.0/ccache/language/tree-il/letrectify.go/usr/lib64/guile/2.2/ccache/language/value/spec.go/usr/lib64/guile/3.0/ccache/language/tree-il/optimize.go/usr/lib64/guile/2.2/ccache/oop/goops.go/usr/lib64/guile/3.0/ccache/language/tree-il/peval.go/usr/lib64/guile/2.2/ccache/oop/goops/accessors.go/usr/lib64/guile/3.0/ccache/language/tree-il/primitives.go/usr/lib64/guile/2.2/ccache/oop/goops/active-slot.go/usr/lib64/guile/3.0/ccache/language/tree-il/resolve-free-vars.go/usr/lib64/guile/2.2/ccache/oop/goops/composite-slot.go/usr/lib64/guile/3.0/ccache/language/tree-il/spec.go/usr/lib64/guile/2.2/ccache/oop/goops/describe.go/usr/lib64/guile/3.0/ccache/language/value/spec.go/usr/lib64/guile/2.2/ccache/oop/goops/internal.go/usr/lib64/guile/3.0/ccache/oop/goops.go/usr/lib64/guile/2.2/ccache/oop/goops/save.go/usr/lib64/guile/3.0/ccache/oop/goops/accessors.go/usr/lib64/guile/2.2/ccache/oop/goops/simple.go/usr/lib64/guile/3.0/ccache/oop/goops/active-slot.go/usr/lib64/guile/2.2/ccache/oop/goops/stklos.go/usr/lib64/guile/3.0/ccache/oop/goops/composite-slot.go/usr/lib64/guile/2.2/ccache/rnrs.go/usr/lib64/guile/3.0/ccache/oop/goops/describe.go/usr/lib64/guile/2.2/ccache/rnrs/arithmetic/bitwise.go/usr/lib64/guile/3.0/ccache/oop/goops/internal.go/usr/lib64/guile/2.2/ccache/rnrs/arithmetic/fixnums.go/usr/lib64/guile/3.0/ccache/oop/goops/save.go/usr/lib64/guile/2.2/ccache/rnrs/arithmetic/flonums.go/usr/lib64/guile/3.0/ccache/oop/goops/simple.go/usr/lib64/guile/2.2/ccache/rnrs/base.go/usr/lib64/guile/3.0/ccache/oop/goops/stklos.go/usr/lib64/guile/2.2/ccache/rnrs/bytevectors.go/usr/lib64/guile/3.0/ccache/rnrs.go/usr/lib64/guile/2.2/ccache/rnrs/conditions.go/usr/lib64/guile/3.0/ccache/rnrs/arithmetic/bitwise.go/usr/lib64/guile/2.2/ccache/rnrs/control.go/usr/lib64/guile/3.0/ccache/rnrs/arithmetic/fixnums.go/usr/lib64/guile/2.2/ccache/rnrs/enums.go/usr/lib64/guile/3.0/ccache/rnrs/arithmetic/flonums.go/usr/lib64/guile/2.2/ccache/rnrs/eval.go/usr/lib64/guile/3.0/ccache/rnrs/base.go/usr/lib64/guile/2.2/ccache/rnrs/exceptions.go/usr/lib64/guile/3.0/ccache/rnrs/bytevectors.go/usr/lib64/guile/2.2/ccache/rnrs/files.go/usr/lib64/guile/3.0/ccache/rnrs/conditions.go/usr/lib64/guile/2.2/ccache/rnrs/hashtables.go/usr/lib64/guile/3.0/ccache/rnrs/control.go/usr/lib64/guile/2.2/ccache/rnrs/io/ports.go/usr/lib64/guile/3.0/ccache/rnrs/enums.go/usr/lib64/guile/2.2/ccache/rnrs/io/simple.go/usr/lib64/guile/3.0/ccache/rnrs/eval.go/usr/lib64/guile/2.2/ccache/rnrs/lists.go/usr/lib64/guile/3.0/ccache/rnrs/exceptions.go/usr/lib64/guile/2.2/ccache/rnrs/mutable-pairs.go/usr/lib64/guile/3.0/ccache/rnrs/files.go/usr/lib64/guile/2.2/ccache/rnrs/mutable-strings.go/usr/lib64/guile/3.0/ccache/rnrs/hashtables.go/usr/lib64/guile/2.2/ccache/rnrs/programs.go/usr/lib64/guile/3.0/ccache/rnrs/io/ports.go/usr/lib64/guile/2.2/ccache/rnrs/r5rs.go/usr/lib64/guile/3.0/ccache/rnrs/io/simple.go/usr/lib64/guile/2.2/ccache/rnrs/records/inspection.go/usr/lib64/guile/3.0/ccache/rnrs/lists.go/usr/lib64/guile/2.2/ccache/rnrs/records/procedural.go/usr/lib64/guile/3.0/ccache/rnrs/mutable-pairs.go/usr/lib64/guile/2.2/ccache/rnrs/records/syntactic.go/usr/lib64/guile/3.0/ccache/rnrs/mutable-strings.go/usr/lib64/guile/2.2/ccache/rnrs/sorting.go/usr/lib64/guile/3.0/ccache/rnrs/programs.go/usr/lib64/guile/2.2/ccache/rnrs/syntax-case.go/usr/lib64/guile/3.0/ccache/rnrs/r5rs.go/usr/lib64/guile/2.2/ccache/rnrs/unicode.go/usr/lib64/guile/3.0/ccache/rnrs/records/inspection.go/usr/lib64/guile/2.2/ccache/scripts/api-diff.go/usr/lib64/guile/3.0/ccache/rnrs/records/procedural.go/usr/lib64/guile/2.2/ccache/scripts/autofrisk.go/usr/lib64/guile/3.0/ccache/rnrs/records/syntactic.go/usr/lib64/guile/2.2/ccache/scripts/compile.go/usr/lib64/guile/3.0/ccache/rnrs/sorting.go/usr/lib64/guile/2.2/ccache/scripts/disassemble.go/usr/lib64/guile/3.0/ccache/rnrs/syntax-case.go/usr/lib64/guile/2.2/ccache/scripts/display-commentary.go/usr/lib64/guile/3.0/ccache/rnrs/unicode.go/usr/lib64/guile/2.2/ccache/scripts/doc-snarf.go/usr/lib64/guile/3.0/ccache/scheme/base.go/usr/lib64/guile/2.2/ccache/scripts/frisk.go/usr/lib64/guile/3.0/ccache/scheme/case-lambda.go/usr/lib64/guile/2.2/ccache/scripts/generate-autoload.go/usr/lib64/guile/3.0/ccache/scheme/char.go/usr/lib64/guile/2.2/ccache/scripts/help.go/usr/lib64/guile/3.0/ccache/scheme/complex.go/usr/lib64/guile/2.2/ccache/scripts/lint.go/usr/lib64/guile/3.0/ccache/scheme/cxr.go/usr/lib64/guile/2.2/ccache/scripts/list.go/usr/lib64/guile/3.0/ccache/scheme/eval.go/usr/lib64/guile/2.2/ccache/scripts/punify.go/usr/lib64/guile/3.0/ccache/scheme/file.go/usr/lib64/guile/2.2/ccache/scripts/read-rfc822.go/usr/lib64/guile/3.0/ccache/scheme/inexact.go/usr/lib64/guile/2.2/ccache/scripts/read-scheme-source.go/usr/lib64/guile/3.0/ccache/scheme/lazy.go/usr/lib64/guile/2.2/ccache/scripts/read-text-outline.go/usr/lib64/guile/3.0/ccache/scheme/load.go/usr/lib64/guile/2.2/ccache/scripts/scan-api.go/usr/lib64/guile/3.0/ccache/scheme/process-context.go/usr/lib64/guile/2.2/ccache/scripts/snarf-check-and-output-texi.go/usr/lib64/guile/3.0/ccache/scheme/r5rs.go/usr/lib64/guile/2.2/ccache/scripts/snarf-guile-m4-docs.go/usr/lib64/guile/3.0/ccache/scheme/read.go/usr/lib64/guile/2.2/ccache/scripts/summarize-guile-TODO.go/usr/lib64/guile/3.0/ccache/scheme/repl.go/usr/lib64/guile/2.2/ccache/scripts/use2dot.go/usr/lib64/guile/3.0/ccache/scheme/time.go/usr/lib64/guile/2.2/ccache/srfi/srfi-1.go/usr/lib64/guile/3.0/ccache/scheme/write.go/usr/lib64/guile/2.2/ccache/srfi/srfi-10.go/usr/lib64/guile/3.0/ccache/scripts/api-diff.go/usr/lib64/guile/2.2/ccache/srfi/srfi-11.go/usr/lib64/guile/3.0/ccache/scripts/autofrisk.go/usr/lib64/guile/2.2/ccache/srfi/srfi-111.go/usr/lib64/guile/3.0/ccache/scripts/compile.go/usr/lib64/guile/2.2/ccache/srfi/srfi-13.go/usr/lib64/guile/3.0/ccache/scripts/disassemble.go/usr/lib64/guile/2.2/ccache/srfi/srfi-14.go/usr/lib64/guile/3.0/ccache/scripts/display-commentary.go/usr/lib64/guile/2.2/ccache/srfi/srfi-16.go/usr/lib64/guile/3.0/ccache/scripts/doc-snarf.go/usr/lib64/guile/2.2/ccache/srfi/srfi-17.go/usr/lib64/guile/3.0/ccache/scripts/frisk.go/usr/lib64/guile/2.2/ccache/srfi/srfi-18.go/usr/lib64/guile/3.0/ccache/scripts/generate-autoload.go/usr/lib64/guile/2.2/ccache/srfi/srfi-19.go/usr/lib64/guile/3.0/ccache/scripts/help.go/usr/lib64/guile/2.2/ccache/srfi/srfi-2.go/usr/lib64/guile/3.0/ccache/scripts/lint.go/usr/lib64/guile/2.2/ccache/srfi/srfi-26.go/usr/lib64/guile/3.0/ccache/scripts/list.go/usr/lib64/guile/2.2/ccache/srfi/srfi-27.go/usr/lib64/guile/3.0/ccache/scripts/punify.go/usr/lib64/guile/2.2/ccache/srfi/srfi-28.go/usr/lib64/guile/3.0/ccache/scripts/read-rfc822.go/usr/lib64/guile/2.2/ccache/srfi/srfi-31.go/usr/lib64/guile/3.0/ccache/scripts/read-scheme-source.go/usr/lib64/guile/2.2/ccache/srfi/srfi-34.go/usr/lib64/guile/3.0/ccache/scripts/read-text-outline.go/usr/lib64/guile/2.2/ccache/srfi/srfi-35.go/usr/lib64/guile/3.0/ccache/scripts/scan-api.go/usr/lib64/guile/2.2/ccache/srfi/srfi-37.go/usr/lib64/guile/3.0/ccache/scripts/snarf-check-and-output-texi.go/usr/lib64/guile/2.2/ccache/srfi/srfi-38.go/usr/lib64/guile/3.0/ccache/scripts/snarf-guile-m4-docs.go/usr/lib64/guile/2.2/ccache/srfi/srfi-39.go/usr/lib64/guile/3.0/ccache/scripts/summarize-guile-TODO.go/usr/lib64/guile/2.2/ccache/srfi/srfi-4.go/usr/lib64/guile/3.0/ccache/scripts/use2dot.go/usr/lib64/guile/2.2/ccache/srfi/srfi-4/gnu.go/usr/lib64/guile/3.0/ccache/srfi/srfi-1.go/usr/lib64/guile/2.2/ccache/srfi/srfi-41.go/usr/lib64/guile/3.0/ccache/srfi/srfi-10.go/usr/lib64/guile/2.2/ccache/srfi/srfi-42.go/usr/lib64/guile/3.0/ccache/srfi/srfi-11.go/usr/lib64/guile/2.2/ccache/srfi/srfi-43.go/usr/lib64/guile/3.0/ccache/srfi/srfi-111.go/usr/lib64/guile/2.2/ccache/srfi/srfi-45.go/usr/lib64/guile/3.0/ccache/srfi/srfi-13.go/usr/lib64/guile/2.2/ccache/srfi/srfi-6.go/usr/lib64/guile/3.0/ccache/srfi/srfi-14.go/usr/lib64/guile/2.2/ccache/srfi/srfi-60.go/usr/lib64/guile/3.0/ccache/srfi/srfi-16.go/usr/lib64/guile/2.2/ccache/srfi/srfi-64.go/usr/lib64/guile/3.0/ccache/srfi/srfi-17.go/usr/lib64/guile/2.2/ccache/srfi/srfi-67.go/usr/lib64/guile/3.0/ccache/srfi/srfi-171.go/usr/lib64/guile/2.2/ccache/srfi/srfi-69.go/usr/lib64/guile/3.0/ccache/srfi/srfi-171/gnu.go/usr/lib64/guile/2.2/ccache/srfi/srfi-71.go/usr/lib64/guile/3.0/ccache/srfi/srfi-171/meta.go/usr/lib64/guile/2.2/ccache/srfi/srfi-8.go/usr/lib64/guile/3.0/ccache/srfi/srfi-18.go/usr/lib64/guile/2.2/ccache/srfi/srfi-88.go/usr/lib64/guile/3.0/ccache/srfi/srfi-19.go/usr/lib64/guile/2.2/ccache/srfi/srfi-9.go/usr/lib64/guile/3.0/ccache/srfi/srfi-2.go/usr/lib64/guile/2.2/ccache/srfi/srfi-9/gnu.go/usr/lib64/guile/3.0/ccache/srfi/srfi-26.go/usr/lib64/guile/2.2/ccache/srfi/srfi-98.go/usr/lib64/guile/3.0/ccache/srfi/srfi-27.go/usr/lib64/guile/2.2/ccache/statprof.go/usr/lib64/guile/3.0/ccache/srfi/srfi-28.go/usr/lib64/guile/2.2/ccache/sxml/apply-templates.go/usr/lib64/guile/3.0/ccache/srfi/srfi-31.go/usr/lib64/guile/2.2/ccache/sxml/fold.go/usr/lib64/guile/3.0/ccache/srfi/srfi-34.go/usr/lib64/guile/2.2/ccache/sxml/match.go/usr/lib64/guile/3.0/ccache/srfi/srfi-35.go/usr/lib64/guile/2.2/ccache/sxml/simple.go/usr/lib64/guile/3.0/ccache/srfi/srfi-37.go/usr/lib64/guile/2.2/ccache/sxml/ssax.go/usr/lib64/guile/3.0/ccache/srfi/srfi-38.go/usr/lib64/guile/2.2/ccache/sxml/ssax/input-parse.go/usr/lib64/guile/3.0/ccache/srfi/srfi-39.go/usr/lib64/guile/2.2/ccache/sxml/transform.go/usr/lib64/guile/3.0/ccache/srfi/srfi-4.go/usr/lib64/guile/2.2/ccache/sxml/xpath.go/usr/lib64/guile/3.0/ccache/srfi/srfi-4/gnu.go/usr/lib64/guile/2.2/ccache/system/base/ck.go/usr/lib64/guile/3.0/ccache/srfi/srfi-41.go/usr/lib64/guile/2.2/ccache/system/base/compile.go/usr/lib64/guile/3.0/ccache/srfi/srfi-42.go/usr/lib64/guile/2.2/ccache/system/base/lalr.go/usr/lib64/guile/3.0/ccache/srfi/srfi-43.go/usr/lib64/guile/2.2/ccache/system/base/language.go/usr/lib64/guile/3.0/ccache/srfi/srfi-45.go/usr/lib64/guile/2.2/ccache/system/base/message.go/usr/lib64/guile/3.0/ccache/srfi/srfi-6.go/usr/lib64/guile/2.2/ccache/system/base/pmatch.go/usr/lib64/guile/3.0/ccache/srfi/srfi-60.go/usr/lib64/guile/2.2/ccache/system/base/syntax.go/usr/lib64/guile/3.0/ccache/srfi/srfi-64.go/usr/lib64/guile/2.2/ccache/system/base/target.go/usr/lib64/guile/3.0/ccache/srfi/srfi-67.go/usr/lib64/guile/2.2/ccache/system/base/types.go/usr/lib64/guile/3.0/ccache/srfi/srfi-69.go/usr/lib64/guile/2.2/ccache/system/foreign-object.go/usr/lib64/guile/3.0/ccache/srfi/srfi-71.go/usr/lib64/guile/2.2/ccache/system/foreign.go/usr/lib64/guile/3.0/ccache/srfi/srfi-8.go/usr/lib64/guile/2.2/ccache/system/repl/command.go/usr/lib64/guile/3.0/ccache/srfi/srfi-88.go/usr/lib64/guile/2.2/ccache/system/repl/common.go/usr/lib64/guile/3.0/ccache/srfi/srfi-9.go/usr/lib64/guile/2.2/ccache/system/repl/coop-server.go/usr/lib64/guile/3.0/ccache/srfi/srfi-9/gnu.go/usr/lib64/guile/2.2/ccache/system/repl/debug.go/usr/lib64/guile/3.0/ccache/srfi/srfi-98.go/usr/lib64/guile/2.2/ccache/system/repl/error-handling.go/usr/lib64/guile/3.0/ccache/statprof.go/usr/lib64/guile/2.2/ccache/system/repl/repl.go/usr/lib64/guile/3.0/ccache/sxml/apply-templates.go/usr/lib64/guile/2.2/ccache/system/repl/server.go/usr/lib64/guile/3.0/ccache/sxml/fold.go/usr/lib64/guile/2.2/ccache/system/syntax.go/usr/lib64/guile/3.0/ccache/sxml/match.go/usr/lib64/guile/2.2/ccache/system/vm/assembler.go/usr/lib64/guile/3.0/ccache/sxml/simple.go/usr/lib64/guile/2.2/ccache/system/vm/coverage.go/usr/lib64/guile/3.0/ccache/sxml/ssax.go/usr/lib64/guile/2.2/ccache/system/vm/debug.go/usr/lib64/guile/3.0/ccache/sxml/ssax/input-parse.go/usr/lib64/guile/2.2/ccache/system/vm/disassembler.go/usr/lib64/guile/3.0/ccache/sxml/transform.go/usr/lib64/guile/2.2/ccache/system/vm/dwarf.go/usr/lib64/guile/3.0/ccache/sxml/xpath.go/usr/lib64/guile/2.2/ccache/system/vm/elf.go/usr/lib64/guile/3.0/ccache/system/base/ck.go/usr/lib64/guile/2.2/ccache/system/vm/frame.go/usr/lib64/guile/3.0/ccache/system/base/compile.go/usr/lib64/guile/2.2/ccache/system/vm/inspect.go/usr/lib64/guile/3.0/ccache/system/base/lalr.go/usr/lib64/guile/2.2/ccache/system/vm/linker.go/usr/lib64/guile/3.0/ccache/system/base/language.go/usr/lib64/guile/2.2/ccache/system/vm/loader.go/usr/lib64/guile/3.0/ccache/system/base/message.go/usr/lib64/guile/2.2/ccache/system/vm/program.go/usr/lib64/guile/3.0/ccache/system/base/optimize.go/usr/lib64/guile/2.2/ccache/system/vm/trace.go/usr/lib64/guile/3.0/ccache/system/base/pmatch.go/usr/lib64/guile/2.2/ccache/system/vm/trap-state.go/usr/lib64/guile/3.0/ccache/system/base/syntax.go/usr/lib64/guile/2.2/ccache/system/vm/traps.go/usr/lib64/guile/3.0/ccache/system/base/target.go/usr/lib64/guile/2.2/ccache/system/vm/vm.go/usr/lib64/guile/3.0/ccache/system/base/types.go/usr/lib64/guile/2.2/ccache/system/xref.go/usr/lib64/guile/3.0/ccache/system/base/types/internal.go/usr/lib64/guile/2.2/ccache/texinfo.go/usr/lib64/guile/3.0/ccache/system/foreign-library.go/usr/lib64/guile/2.2/ccache/texinfo/docbook.go/usr/lib64/guile/3.0/ccache/system/foreign-object.go/usr/lib64/guile/2.2/ccache/texinfo/html.go/usr/lib64/guile/3.0/ccache/system/foreign.go/usr/lib64/guile/2.2/ccache/texinfo/indexing.go/usr/lib64/guile/3.0/ccache/system/repl/command.go/usr/lib64/guile/2.2/ccache/texinfo/plain-text.go/usr/lib64/guile/3.0/ccache/system/repl/common.go/usr/lib64/guile/2.2/ccache/texinfo/reflection.go/usr/lib64/guile/3.0/ccache/system/repl/coop-server.go/usr/lib64/guile/2.2/ccache/texinfo/serialize.go/usr/lib64/guile/3.0/ccache/system/repl/debug.go/usr/lib64/guile/2.2/ccache/texinfo/string-utils.go/usr/lib64/guile/3.0/ccache/system/repl/error-handling.go/usr/lib64/guile/2.2/ccache/web/client.go/usr/lib64/guile/3.0/ccache/system/repl/repl.go/usr/lib64/guile/2.2/ccache/web/http.go/usr/lib64/guile/3.0/ccache/system/repl/server.go/usr/lib64/guile/2.2/ccache/web/request.go/usr/lib64/guile/3.0/ccache/system/syntax.go/usr/lib64/guile/2.2/ccache/web/response.go/usr/lib64/guile/3.0/ccache/system/vm/assembler.go/usr/lib64/guile/2.2/ccache/web/server.go/usr/lib64/guile/3.0/ccache/system/vm/coverage.go/usr/lib64/guile/2.2/ccache/web/server/http.go/usr/lib64/guile/3.0/ccache/system/vm/debug.go/usr/lib64/guile/2.2/ccache/web/uri.go/usr/lib64/guile/3.0/ccache/system/vm/disassembler.go/usr/lib64/guile/3.0/ccache/system/vm/dwarf.go/usr/lib64/guile/3.0/ccache/system/vm/elf.go/usr/lib64/guile/3.0/ccache/system/vm/frame.go/usr/lib64/guile/3.0/ccache/system/vm/inspect.go/usr/lib64/guile/3.0/ccache/system/vm/linker.go/usr/lib64/guile/3.0/ccache/system/vm/loader.go/usr/lib64/guile/3.0/ccache/system/vm/program.go/usr/lib64/guile/3.0/ccache/system/vm/trace.go/usr/lib64/guile/3.0/ccache/system/vm/trap-state.go/usr/lib64/guile/3.0/ccache/system/vm/traps.go/usr/lib64/guile/3.0/ccache/system/vm/vm.go/usr/lib64/guile/3.0/ccache/system/xref.go/usr/lib64/guile/3.0/ccache/texinfo.go/usr/lib64/guile/3.0/ccache/texinfo/docbook.go/usr/lib64/guile/3.0/ccache/texinfo/html.go/usr/lib64/guile/3.0/ccache/texinfo/indexing.go/usr/lib64/guile/3.0/ccache/texinfo/plain-text.go/usr/lib64/guile/3.0/ccache/texinfo/reflection.go/usr/lib64/guile/3.0/ccache/texinfo/serialize.go/usr/lib64/guile/3.0/ccache/texinfo/string-utils.go/usr/lib64/guile/3.0/ccache/web/client.go/usr/lib64/guile/3.0/ccache/web/http.go/usr/lib64/guile/3.0/ccache/web/request.go/usr/lib64/guile/3.0/ccache/web/response.go/usr/lib64/guile/3.0/ccache/web/server.go/usr/lib64/guile/3.0/ccache/web/server/http.go/usr/lib64/guile/3.0/ccache/web/uri.go

%files bin%files bin%defattr(-,root,root,-)%defattr(-,root,root,-)@@ -454,463 +480,495 @@ rm -f %{buildroot}/usr/lib64/libguile-2.2.so.1.4.2-gdb.scm

%files data%files data%defattr(-,root,root,-)%defattr(-,root,root,-)/usr/share/guile/2.2/guile-procedures.txt/usr/share/guile/3.0/guile-procedures.txt/usr/share/guile/2.2/ice-9/and-let-star.scm/usr/share/guile/3.0/ice-9/and-let-star.scm/usr/share/guile/2.2/ice-9/arrays.scm/usr/share/guile/3.0/ice-9/arrays.scm/usr/share/guile/2.2/ice-9/atomic.scm/usr/share/guile/3.0/ice-9/atomic.scm/usr/share/guile/2.2/ice-9/binary-ports.scm/usr/share/guile/3.0/ice-9/binary-ports.scm/usr/share/guile/2.2/ice-9/boot-9.scm/usr/share/guile/3.0/ice-9/boot-9.scm/usr/share/guile/2.2/ice-9/buffered-input.scm/usr/share/guile/3.0/ice-9/buffered-input.scm/usr/share/guile/2.2/ice-9/calling.scm/usr/share/guile/3.0/ice-9/calling.scm/usr/share/guile/2.2/ice-9/channel.scm/usr/share/guile/3.0/ice-9/command-line.scm/usr/share/guile/2.2/ice-9/command-line.scm/usr/share/guile/3.0/ice-9/common-list.scm/usr/share/guile/2.2/ice-9/common-list.scm/usr/share/guile/3.0/ice-9/control.scm/usr/share/guile/2.2/ice-9/control.scm/usr/share/guile/3.0/ice-9/copy-tree.scm/usr/share/guile/2.2/ice-9/curried-definitions.scm/usr/share/guile/3.0/ice-9/curried-definitions.scm/usr/share/guile/2.2/ice-9/debug.scm/usr/share/guile/3.0/ice-9/deprecated.scm/usr/share/guile/2.2/ice-9/deprecated.scm/usr/share/guile/3.0/ice-9/documentation.scm/usr/share/guile/2.2/ice-9/documentation.scm/usr/share/guile/3.0/ice-9/eval-string.scm/usr/share/guile/2.2/ice-9/eval-string.scm/usr/share/guile/3.0/ice-9/eval.scm/usr/share/guile/2.2/ice-9/eval.scm/usr/share/guile/3.0/ice-9/exceptions.scm/usr/share/guile/2.2/ice-9/expect.scm/usr/share/guile/3.0/ice-9/expect.scm/usr/share/guile/2.2/ice-9/fdes-finalizers.scm/usr/share/guile/3.0/ice-9/fdes-finalizers.scm/usr/share/guile/2.2/ice-9/format.scm/usr/share/guile/3.0/ice-9/format.scm/usr/share/guile/2.2/ice-9/ftw.scm/usr/share/guile/3.0/ice-9/ftw.scm/usr/share/guile/2.2/ice-9/futures.scm/usr/share/guile/3.0/ice-9/futures.scm/usr/share/guile/2.2/ice-9/gap-buffer.scm/usr/share/guile/3.0/ice-9/gap-buffer.scm/usr/share/guile/2.2/ice-9/getopt-long.scm/usr/share/guile/3.0/ice-9/getopt-long.scm/usr/share/guile/2.2/ice-9/hash-table.scm/usr/share/guile/3.0/ice-9/hash-table.scm/usr/share/guile/2.2/ice-9/hcons.scm/usr/share/guile/3.0/ice-9/hcons.scm/usr/share/guile/2.2/ice-9/history.scm/usr/share/guile/3.0/ice-9/history.scm/usr/share/guile/2.2/ice-9/i18n.scm/usr/share/guile/3.0/ice-9/i18n.scm/usr/share/guile/2.2/ice-9/iconv.scm/usr/share/guile/3.0/ice-9/iconv.scm/usr/share/guile/2.2/ice-9/lineio.scm/usr/share/guile/3.0/ice-9/lineio.scm/usr/share/guile/2.2/ice-9/list.scm/usr/share/guile/3.0/ice-9/list.scm/usr/share/guile/2.2/ice-9/local-eval.scm/usr/share/guile/3.0/ice-9/local-eval.scm/usr/share/guile/2.2/ice-9/ls.scm/usr/share/guile/3.0/ice-9/ls.scm/usr/share/guile/2.2/ice-9/mapping.scm/usr/share/guile/3.0/ice-9/match.scm/usr/share/guile/2.2/ice-9/match.scm/usr/share/guile/3.0/ice-9/match.upstream.scm/usr/share/guile/2.2/ice-9/match.upstream.scm/usr/share/guile/3.0/ice-9/networking.scm/usr/share/guile/2.2/ice-9/networking.scm/usr/share/guile/3.0/ice-9/null.scm/usr/share/guile/2.2/ice-9/null.scm/usr/share/guile/3.0/ice-9/occam-channel.scm/usr/share/guile/2.2/ice-9/occam-channel.scm/usr/share/guile/3.0/ice-9/optargs.scm/usr/share/guile/2.2/ice-9/optargs.scm/usr/share/guile/3.0/ice-9/peg.scm/usr/share/guile/2.2/ice-9/peg.scm/usr/share/guile/3.0/ice-9/peg/cache.scm/usr/share/guile/2.2/ice-9/peg/cache.scm/usr/share/guile/3.0/ice-9/peg/codegen.scm/usr/share/guile/2.2/ice-9/peg/codegen.scm/usr/share/guile/3.0/ice-9/peg/simplify-tree.scm/usr/share/guile/2.2/ice-9/peg/simplify-tree.scm/usr/share/guile/3.0/ice-9/peg/string-peg.scm/usr/share/guile/2.2/ice-9/peg/string-peg.scm/usr/share/guile/3.0/ice-9/peg/using-parsers.scm/usr/share/guile/2.2/ice-9/peg/using-parsers.scm/usr/share/guile/3.0/ice-9/poe.scm/usr/share/guile/2.2/ice-9/poe.scm/usr/share/guile/3.0/ice-9/poll.scm/usr/share/guile/2.2/ice-9/poll.scm/usr/share/guile/3.0/ice-9/popen.scm/usr/share/guile/2.2/ice-9/popen.scm/usr/share/guile/3.0/ice-9/ports.scm/usr/share/guile/2.2/ice-9/ports.scm/usr/share/guile/3.0/ice-9/posix.scm/usr/share/guile/2.2/ice-9/posix.scm/usr/share/guile/3.0/ice-9/pretty-print.scm/usr/share/guile/2.2/ice-9/pretty-print.scm/usr/share/guile/3.0/ice-9/psyntax-pp.scm/usr/share/guile/2.2/ice-9/psyntax-pp.scm/usr/share/guile/3.0/ice-9/psyntax.scm/usr/share/guile/2.2/ice-9/psyntax.scm/usr/share/guile/3.0/ice-9/q.scm/usr/share/guile/2.2/ice-9/q.scm/usr/share/guile/3.0/ice-9/quasisyntax.scm/usr/share/guile/2.2/ice-9/quasisyntax.scm/usr/share/guile/3.0/ice-9/r5rs.scm/usr/share/guile/2.2/ice-9/r5rs.scm/usr/share/guile/3.0/ice-9/r6rs-libraries.scm/usr/share/guile/2.2/ice-9/r6rs-libraries.scm/usr/share/guile/3.0/ice-9/r7rs-libraries.scm/usr/share/guile/2.2/ice-9/rdelim.scm/usr/share/guile/3.0/ice-9/rdelim.scm/usr/share/guile/2.2/ice-9/readline.scm/usr/share/guile/3.0/ice-9/read.scm/usr/share/guile/2.2/ice-9/receive.scm/usr/share/guile/3.0/ice-9/readline.scm/usr/share/guile/2.2/ice-9/regex.scm/usr/share/guile/3.0/ice-9/receive.scm/usr/share/guile/2.2/ice-9/runq.scm/usr/share/guile/3.0/ice-9/regex.scm/usr/share/guile/2.2/ice-9/rw.scm/usr/share/guile/3.0/ice-9/runq.scm/usr/share/guile/2.2/ice-9/safe-r5rs.scm/usr/share/guile/3.0/ice-9/rw.scm/usr/share/guile/2.2/ice-9/safe.scm/usr/share/guile/3.0/ice-9/safe-r5rs.scm/usr/share/guile/2.2/ice-9/sandbox.scm/usr/share/guile/3.0/ice-9/safe.scm/usr/share/guile/2.2/ice-9/save-stack.scm/usr/share/guile/3.0/ice-9/sandbox.scm/usr/share/guile/2.2/ice-9/scm-style-repl.scm/usr/share/guile/3.0/ice-9/save-stack.scm/usr/share/guile/2.2/ice-9/serialize.scm/usr/share/guile/3.0/ice-9/scm-style-repl.scm/usr/share/guile/2.2/ice-9/session.scm/usr/share/guile/3.0/ice-9/serialize.scm/usr/share/guile/2.2/ice-9/slib.scm/usr/share/guile/3.0/ice-9/session.scm/usr/share/guile/2.2/ice-9/stack-catch.scm/usr/share/guile/3.0/ice-9/slib.scm/usr/share/guile/2.2/ice-9/streams.scm/usr/share/guile/3.0/ice-9/stack-catch.scm/usr/share/guile/2.2/ice-9/string-fun.scm/usr/share/guile/3.0/ice-9/streams.scm/usr/share/guile/2.2/ice-9/suspendable-ports.scm/usr/share/guile/3.0/ice-9/string-fun.scm/usr/share/guile/2.2/ice-9/syncase.scm/usr/share/guile/3.0/ice-9/suspendable-ports.scm/usr/share/guile/2.2/ice-9/textual-ports.scm/usr/share/guile/3.0/ice-9/textual-ports.scm/usr/share/guile/2.2/ice-9/threads.scm/usr/share/guile/3.0/ice-9/threads.scm/usr/share/guile/2.2/ice-9/time.scm/usr/share/guile/3.0/ice-9/time.scm/usr/share/guile/2.2/ice-9/top-repl.scm/usr/share/guile/3.0/ice-9/top-repl.scm/usr/share/guile/2.2/ice-9/unicode.scm/usr/share/guile/3.0/ice-9/unicode.scm/usr/share/guile/2.2/ice-9/vlist.scm/usr/share/guile/3.0/ice-9/vlist.scm/usr/share/guile/2.2/ice-9/weak-vector.scm/usr/share/guile/3.0/ice-9/weak-vector.scm/usr/share/guile/2.2/language/brainfuck/compile-scheme.scm/usr/share/guile/3.0/language/brainfuck/compile-scheme.scm/usr/share/guile/2.2/language/brainfuck/compile-tree-il.scm/usr/share/guile/3.0/language/brainfuck/compile-tree-il.scm/usr/share/guile/2.2/language/brainfuck/parse.scm/usr/share/guile/3.0/language/brainfuck/parse.scm/usr/share/guile/2.2/language/brainfuck/spec.scm/usr/share/guile/3.0/language/brainfuck/spec.scm/usr/share/guile/2.2/language/bytecode.scm/usr/share/guile/3.0/language/bytecode.scm/usr/share/guile/2.2/language/bytecode/spec.scm/usr/share/guile/3.0/language/bytecode/spec.scm/usr/share/guile/2.2/language/cps.scm/usr/share/guile/3.0/language/cps.scm/usr/share/guile/2.2/language/cps/closure-conversion.scm/usr/share/guile/3.0/language/cps/closure-conversion.scm/usr/share/guile/2.2/language/cps/compile-bytecode.scm/usr/share/guile/3.0/language/cps/compile-bytecode.scm/usr/share/guile/2.2/language/cps/constructors.scm/usr/share/guile/3.0/language/cps/contification.scm/usr/share/guile/2.2/language/cps/contification.scm/usr/share/guile/3.0/language/cps/cse.scm/usr/share/guile/2.2/language/cps/cse.scm/usr/share/guile/3.0/language/cps/dce.scm/usr/share/guile/2.2/language/cps/dce.scm/usr/share/guile/3.0/language/cps/devirtualize-integers.scm/usr/share/guile/2.2/language/cps/effects-analysis.scm/usr/share/guile/3.0/language/cps/dump.scm/usr/share/guile/2.2/language/cps/elide-values.scm/usr/share/guile/3.0/language/cps/effects-analysis.scm/usr/share/guile/2.2/language/cps/handle-interrupts.scm/usr/share/guile/3.0/language/cps/elide-arity-checks.scm/usr/share/guile/2.2/language/cps/intmap.scm/usr/share/guile/3.0/language/cps/graphs.scm/usr/share/guile/2.2/language/cps/intset.scm/usr/share/guile/3.0/language/cps/intmap.scm/usr/share/guile/2.2/language/cps/licm.scm/usr/share/guile/3.0/language/cps/intset.scm/usr/share/guile/2.2/language/cps/optimize.scm/usr/share/guile/3.0/language/cps/licm.scm/usr/share/guile/2.2/language/cps/peel-loops.scm/usr/share/guile/3.0/language/cps/loop-instrumentation.scm/usr/share/guile/2.2/language/cps/primitives.scm/usr/share/guile/3.0/language/cps/optimize.scm/usr/share/guile/2.2/language/cps/prune-bailouts.scm/usr/share/guile/3.0/language/cps/peel-loops.scm/usr/share/guile/2.2/language/cps/prune-top-level-scopes.scm/usr/share/guile/3.0/language/cps/prune-top-level-scopes.scm/usr/share/guile/2.2/language/cps/reify-primitives.scm/usr/share/guile/3.0/language/cps/reify-primitives.scm/usr/share/guile/2.2/language/cps/renumber.scm/usr/share/guile/3.0/language/cps/renumber.scm/usr/share/guile/2.2/language/cps/rotate-loops.scm/usr/share/guile/3.0/language/cps/return-types.scm/usr/share/guile/2.2/language/cps/self-references.scm/usr/share/guile/3.0/language/cps/rotate-loops.scm/usr/share/guile/2.2/language/cps/simplify.scm/usr/share/guile/3.0/language/cps/self-references.scm/usr/share/guile/2.2/language/cps/slot-allocation.scm/usr/share/guile/3.0/language/cps/simplify.scm/usr/share/guile/2.2/language/cps/spec.scm/usr/share/guile/3.0/language/cps/slot-allocation.scm/usr/share/guile/2.2/language/cps/specialize-numbers.scm/usr/share/guile/3.0/language/cps/spec.scm/usr/share/guile/2.2/language/cps/specialize-primcalls.scm/usr/share/guile/3.0/language/cps/specialize-numbers.scm/usr/share/guile/2.2/language/cps/split-rec.scm/usr/share/guile/3.0/language/cps/specialize-primcalls.scm/usr/share/guile/2.2/language/cps/type-checks.scm/usr/share/guile/3.0/language/cps/split-rec.scm/usr/share/guile/2.2/language/cps/type-fold.scm/usr/share/guile/3.0/language/cps/switch.scm/usr/share/guile/2.2/language/cps/types.scm/usr/share/guile/3.0/language/cps/type-checks.scm/usr/share/guile/2.2/language/cps/utils.scm/usr/share/guile/3.0/language/cps/type-fold.scm/usr/share/guile/2.2/language/cps/verify.scm/usr/share/guile/3.0/language/cps/types.scm/usr/share/guile/2.2/language/cps/with-cps.scm/usr/share/guile/3.0/language/cps/utils.scm/usr/share/guile/2.2/language/ecmascript/array.scm/usr/share/guile/3.0/language/cps/verify.scm/usr/share/guile/2.2/language/ecmascript/base.scm/usr/share/guile/3.0/language/cps/with-cps.scm/usr/share/guile/2.2/language/ecmascript/compile-tree-il.scm/usr/share/guile/3.0/language/ecmascript/array.scm/usr/share/guile/2.2/language/ecmascript/function.scm/usr/share/guile/3.0/language/ecmascript/base.scm/usr/share/guile/2.2/language/ecmascript/impl.scm/usr/share/guile/3.0/language/ecmascript/compile-tree-il.scm/usr/share/guile/2.2/language/ecmascript/parse.scm/usr/share/guile/3.0/language/ecmascript/function.scm/usr/share/guile/2.2/language/ecmascript/spec.scm/usr/share/guile/3.0/language/ecmascript/impl.scm/usr/share/guile/2.2/language/ecmascript/tokenize.scm/usr/share/guile/3.0/language/ecmascript/parse.scm/usr/share/guile/2.2/language/elisp/bindings.scm/usr/share/guile/3.0/language/ecmascript/spec.scm/usr/share/guile/2.2/language/elisp/boot.el/usr/share/guile/3.0/language/ecmascript/tokenize.scm/usr/share/guile/2.2/language/elisp/compile-tree-il.scm/usr/share/guile/3.0/language/elisp/bindings.scm/usr/share/guile/2.2/language/elisp/falias.scm/usr/share/guile/3.0/language/elisp/boot.el/usr/share/guile/2.2/language/elisp/lexer.scm/usr/share/guile/3.0/language/elisp/compile-tree-il.scm/usr/share/guile/2.2/language/elisp/parser.scm/usr/share/guile/3.0/language/elisp/falias.scm/usr/share/guile/2.2/language/elisp/runtime.scm/usr/share/guile/3.0/language/elisp/lexer.scm/usr/share/guile/2.2/language/elisp/runtime/function-slot.scm/usr/share/guile/3.0/language/elisp/parser.scm/usr/share/guile/2.2/language/elisp/runtime/value-slot.scm/usr/share/guile/3.0/language/elisp/runtime.scm/usr/share/guile/2.2/language/elisp/spec.scm/usr/share/guile/3.0/language/elisp/runtime/function-slot.scm/usr/share/guile/2.2/language/scheme/compile-tree-il.scm/usr/share/guile/3.0/language/elisp/runtime/value-slot.scm/usr/share/guile/2.2/language/scheme/decompile-tree-il.scm/usr/share/guile/3.0/language/elisp/spec.scm/usr/share/guile/2.2/language/scheme/spec.scm/usr/share/guile/3.0/language/scheme/compile-tree-il.scm/usr/share/guile/2.2/language/tree-il.scm/usr/share/guile/3.0/language/scheme/decompile-tree-il.scm/usr/share/guile/2.2/language/tree-il/analyze.scm/usr/share/guile/3.0/language/scheme/spec.scm/usr/share/guile/2.2/language/tree-il/canonicalize.scm/usr/share/guile/3.0/language/tree-il.scm/usr/share/guile/2.2/language/tree-il/compile-cps.scm/usr/share/guile/3.0/language/tree-il/analyze.scm/usr/share/guile/2.2/language/tree-il/debug.scm/usr/share/guile/3.0/language/tree-il/compile-bytecode.scm/usr/share/guile/2.2/language/tree-il/effects.scm/usr/share/guile/3.0/language/tree-il/compile-cps.scm/usr/share/guile/2.2/language/tree-il/fix-letrec.scm/usr/share/guile/3.0/language/tree-il/cps-primitives.scm/usr/share/guile/2.2/language/tree-il/optimize.scm/usr/share/guile/3.0/language/tree-il/debug.scm/usr/share/guile/2.2/language/tree-il/peval.scm/usr/share/guile/3.0/language/tree-il/effects.scm/usr/share/guile/2.2/language/tree-il/primitives.scm/usr/share/guile/3.0/language/tree-il/eta-expand.scm/usr/share/guile/2.2/language/tree-il/spec.scm/usr/share/guile/3.0/language/tree-il/fix-letrec.scm/usr/share/guile/2.2/language/value/spec.scm/usr/share/guile/3.0/language/tree-il/inlinable-exports.scm/usr/share/guile/2.2/oop/goops.scm/usr/share/guile/3.0/language/tree-il/letrectify.scm/usr/share/guile/2.2/oop/goops/accessors.scm/usr/share/guile/3.0/language/tree-il/optimize.scm/usr/share/guile/2.2/oop/goops/active-slot.scm/usr/share/guile/3.0/language/tree-il/peval.scm/usr/share/guile/2.2/oop/goops/composite-slot.scm/usr/share/guile/3.0/language/tree-il/primitives.scm/usr/share/guile/2.2/oop/goops/describe.scm/usr/share/guile/3.0/language/tree-il/resolve-free-vars.scm/usr/share/guile/2.2/oop/goops/internal.scm/usr/share/guile/3.0/language/tree-il/spec.scm/usr/share/guile/2.2/oop/goops/save.scm/usr/share/guile/3.0/language/value/spec.scm/usr/share/guile/2.2/oop/goops/simple.scm/usr/share/guile/3.0/oop/goops.scm/usr/share/guile/2.2/oop/goops/stklos.scm/usr/share/guile/3.0/oop/goops/accessors.scm/usr/share/guile/2.2/rnrs.scm/usr/share/guile/3.0/oop/goops/active-slot.scm/usr/share/guile/2.2/rnrs/arithmetic/bitwise.scm/usr/share/guile/3.0/oop/goops/composite-slot.scm/usr/share/guile/2.2/rnrs/arithmetic/fixnums.scm/usr/share/guile/3.0/oop/goops/describe.scm/usr/share/guile/2.2/rnrs/arithmetic/flonums.scm/usr/share/guile/3.0/oop/goops/internal.scm/usr/share/guile/2.2/rnrs/base.scm/usr/share/guile/3.0/oop/goops/save.scm/usr/share/guile/2.2/rnrs/bytevectors.scm/usr/share/guile/3.0/oop/goops/simple.scm/usr/share/guile/2.2/rnrs/conditions.scm/usr/share/guile/3.0/oop/goops/stklos.scm/usr/share/guile/2.2/rnrs/control.scm/usr/share/guile/3.0/rnrs.scm/usr/share/guile/2.2/rnrs/enums.scm/usr/share/guile/3.0/rnrs/arithmetic/bitwise.scm/usr/share/guile/2.2/rnrs/eval.scm/usr/share/guile/3.0/rnrs/arithmetic/fixnums.scm/usr/share/guile/2.2/rnrs/exceptions.scm/usr/share/guile/3.0/rnrs/arithmetic/flonums.scm/usr/share/guile/2.2/rnrs/files.scm/usr/share/guile/3.0/rnrs/base.scm/usr/share/guile/2.2/rnrs/hashtables.scm/usr/share/guile/3.0/rnrs/bytevectors.scm/usr/share/guile/2.2/rnrs/io/ports.scm/usr/share/guile/3.0/rnrs/conditions.scm/usr/share/guile/2.2/rnrs/io/simple.scm/usr/share/guile/3.0/rnrs/control.scm/usr/share/guile/2.2/rnrs/lists.scm/usr/share/guile/3.0/rnrs/enums.scm/usr/share/guile/2.2/rnrs/mutable-pairs.scm/usr/share/guile/3.0/rnrs/eval.scm/usr/share/guile/2.2/rnrs/mutable-strings.scm/usr/share/guile/3.0/rnrs/exceptions.scm/usr/share/guile/2.2/rnrs/programs.scm/usr/share/guile/3.0/rnrs/files.scm/usr/share/guile/2.2/rnrs/r5rs.scm/usr/share/guile/3.0/rnrs/hashtables.scm/usr/share/guile/2.2/rnrs/records/inspection.scm/usr/share/guile/3.0/rnrs/io/ports.scm/usr/share/guile/2.2/rnrs/records/procedural.scm/usr/share/guile/3.0/rnrs/io/simple.scm/usr/share/guile/2.2/rnrs/records/syntactic.scm/usr/share/guile/3.0/rnrs/lists.scm/usr/share/guile/2.2/rnrs/sorting.scm/usr/share/guile/3.0/rnrs/mutable-pairs.scm/usr/share/guile/2.2/rnrs/syntax-case.scm/usr/share/guile/3.0/rnrs/mutable-strings.scm/usr/share/guile/2.2/rnrs/unicode.scm/usr/share/guile/3.0/rnrs/programs.scm/usr/share/guile/2.2/scripts/api-diff.scm/usr/share/guile/3.0/rnrs/r5rs.scm/usr/share/guile/2.2/scripts/autofrisk.scm/usr/share/guile/3.0/rnrs/records/inspection.scm/usr/share/guile/2.2/scripts/compile.scm/usr/share/guile/3.0/rnrs/records/procedural.scm/usr/share/guile/2.2/scripts/disassemble.scm/usr/share/guile/3.0/rnrs/records/syntactic.scm/usr/share/guile/2.2/scripts/display-commentary.scm/usr/share/guile/3.0/rnrs/sorting.scm/usr/share/guile/2.2/scripts/doc-snarf.scm/usr/share/guile/3.0/rnrs/syntax-case.scm/usr/share/guile/2.2/scripts/frisk.scm/usr/share/guile/3.0/rnrs/unicode.scm/usr/share/guile/2.2/scripts/generate-autoload.scm/usr/share/guile/3.0/scheme/base.scm/usr/share/guile/2.2/scripts/help.scm/usr/share/guile/3.0/scheme/case-lambda.scm/usr/share/guile/2.2/scripts/lint.scm/usr/share/guile/3.0/scheme/char.scm/usr/share/guile/2.2/scripts/list.scm/usr/share/guile/3.0/scheme/complex.scm/usr/share/guile/2.2/scripts/punify.scm/usr/share/guile/3.0/scheme/cxr.scm/usr/share/guile/2.2/scripts/read-rfc822.scm/usr/share/guile/3.0/scheme/eval.scm/usr/share/guile/2.2/scripts/read-scheme-source.scm/usr/share/guile/3.0/scheme/file.scm/usr/share/guile/2.2/scripts/read-text-outline.scm/usr/share/guile/3.0/scheme/inexact.scm/usr/share/guile/2.2/scripts/scan-api.scm/usr/share/guile/3.0/scheme/lazy.scm/usr/share/guile/2.2/scripts/snarf-check-and-output-texi.scm/usr/share/guile/3.0/scheme/load.scm/usr/share/guile/2.2/scripts/snarf-guile-m4-docs.scm/usr/share/guile/3.0/scheme/process-context.scm/usr/share/guile/2.2/scripts/summarize-guile-TODO.scm/usr/share/guile/3.0/scheme/r5rs.scm/usr/share/guile/2.2/scripts/use2dot.scm/usr/share/guile/3.0/scheme/read.scm/usr/share/guile/2.2/srfi/srfi-1.scm/usr/share/guile/3.0/scheme/repl.scm/usr/share/guile/2.2/srfi/srfi-10.scm/usr/share/guile/3.0/scheme/time.scm/usr/share/guile/2.2/srfi/srfi-11.scm/usr/share/guile/3.0/scheme/write.scm/usr/share/guile/2.2/srfi/srfi-111.scm/usr/share/guile/3.0/scripts/api-diff.scm/usr/share/guile/2.2/srfi/srfi-13.scm/usr/share/guile/3.0/scripts/autofrisk.scm/usr/share/guile/2.2/srfi/srfi-14.scm/usr/share/guile/3.0/scripts/compile.scm/usr/share/guile/2.2/srfi/srfi-16.scm/usr/share/guile/3.0/scripts/disassemble.scm/usr/share/guile/2.2/srfi/srfi-17.scm/usr/share/guile/3.0/scripts/display-commentary.scm/usr/share/guile/2.2/srfi/srfi-18.scm/usr/share/guile/3.0/scripts/doc-snarf.scm/usr/share/guile/2.2/srfi/srfi-19.scm/usr/share/guile/3.0/scripts/frisk.scm/usr/share/guile/2.2/srfi/srfi-2.scm/usr/share/guile/3.0/scripts/generate-autoload.scm/usr/share/guile/2.2/srfi/srfi-26.scm/usr/share/guile/3.0/scripts/help.scm/usr/share/guile/2.2/srfi/srfi-27.scm/usr/share/guile/3.0/scripts/lint.scm/usr/share/guile/2.2/srfi/srfi-28.scm/usr/share/guile/3.0/scripts/list.scm/usr/share/guile/2.2/srfi/srfi-31.scm/usr/share/guile/3.0/scripts/punify.scm/usr/share/guile/2.2/srfi/srfi-34.scm/usr/share/guile/3.0/scripts/read-rfc822.scm/usr/share/guile/2.2/srfi/srfi-35.scm/usr/share/guile/3.0/scripts/read-scheme-source.scm/usr/share/guile/2.2/srfi/srfi-37.scm/usr/share/guile/3.0/scripts/read-text-outline.scm/usr/share/guile/2.2/srfi/srfi-38.scm/usr/share/guile/3.0/scripts/scan-api.scm/usr/share/guile/2.2/srfi/srfi-39.scm/usr/share/guile/3.0/scripts/snarf-check-and-output-texi.scm/usr/share/guile/2.2/srfi/srfi-4.scm/usr/share/guile/3.0/scripts/snarf-guile-m4-docs.scm/usr/share/guile/2.2/srfi/srfi-4/gnu.scm/usr/share/guile/3.0/scripts/summarize-guile-TODO.scm/usr/share/guile/2.2/srfi/srfi-41.scm/usr/share/guile/3.0/scripts/use2dot.scm/usr/share/guile/2.2/srfi/srfi-42.scm/usr/share/guile/3.0/srfi/srfi-1.scm/usr/share/guile/2.2/srfi/srfi-42/ec.scm/usr/share/guile/3.0/srfi/srfi-10.scm/usr/share/guile/2.2/srfi/srfi-43.scm/usr/share/guile/3.0/srfi/srfi-11.scm/usr/share/guile/2.2/srfi/srfi-45.scm/usr/share/guile/3.0/srfi/srfi-111.scm/usr/share/guile/2.2/srfi/srfi-6.scm/usr/share/guile/3.0/srfi/srfi-13.scm/usr/share/guile/2.2/srfi/srfi-60.scm/usr/share/guile/3.0/srfi/srfi-14.scm/usr/share/guile/2.2/srfi/srfi-64.scm/usr/share/guile/3.0/srfi/srfi-16.scm/usr/share/guile/2.2/srfi/srfi-64/testing.scm/usr/share/guile/3.0/srfi/srfi-17.scm/usr/share/guile/2.2/srfi/srfi-67.scm/usr/share/guile/3.0/srfi/srfi-171.scm/usr/share/guile/2.2/srfi/srfi-67/compare.scm/usr/share/guile/3.0/srfi/srfi-171/gnu.scm/usr/share/guile/2.2/srfi/srfi-69.scm/usr/share/guile/3.0/srfi/srfi-171/meta.scm/usr/share/guile/2.2/srfi/srfi-71.scm/usr/share/guile/3.0/srfi/srfi-18.scm/usr/share/guile/2.2/srfi/srfi-8.scm/usr/share/guile/3.0/srfi/srfi-19.scm/usr/share/guile/2.2/srfi/srfi-88.scm/usr/share/guile/3.0/srfi/srfi-2.scm/usr/share/guile/2.2/srfi/srfi-9.scm/usr/share/guile/3.0/srfi/srfi-26.scm/usr/share/guile/2.2/srfi/srfi-9/gnu.scm/usr/share/guile/3.0/srfi/srfi-27.scm/usr/share/guile/2.2/srfi/srfi-98.scm/usr/share/guile/3.0/srfi/srfi-28.scm/usr/share/guile/2.2/statprof.scm/usr/share/guile/3.0/srfi/srfi-31.scm/usr/share/guile/2.2/sxml/apply-templates.scm/usr/share/guile/3.0/srfi/srfi-34.scm/usr/share/guile/2.2/sxml/fold.scm/usr/share/guile/3.0/srfi/srfi-35.scm/usr/share/guile/2.2/sxml/match.scm/usr/share/guile/3.0/srfi/srfi-37.scm/usr/share/guile/2.2/sxml/simple.scm/usr/share/guile/3.0/srfi/srfi-38.scm/usr/share/guile/2.2/sxml/ssax.scm/usr/share/guile/3.0/srfi/srfi-39.scm/usr/share/guile/2.2/sxml/ssax/input-parse.scm/usr/share/guile/3.0/srfi/srfi-4.scm/usr/share/guile/2.2/sxml/sxml-match.ss/usr/share/guile/3.0/srfi/srfi-4/gnu.scm/usr/share/guile/2.2/sxml/transform.scm/usr/share/guile/3.0/srfi/srfi-41.scm/usr/share/guile/2.2/sxml/upstream/SSAX.scm/usr/share/guile/3.0/srfi/srfi-42.scm/usr/share/guile/2.2/sxml/upstream/SXML-tree-trans.scm/usr/share/guile/3.0/srfi/srfi-42/ec.scm/usr/share/guile/2.2/sxml/upstream/SXPath-old.scm/usr/share/guile/3.0/srfi/srfi-43.scm/usr/share/guile/2.2/sxml/upstream/assert.scm/usr/share/guile/3.0/srfi/srfi-45.scm/usr/share/guile/2.2/sxml/upstream/input-parse.scm/usr/share/guile/3.0/srfi/srfi-6.scm/usr/share/guile/2.2/sxml/xpath.scm/usr/share/guile/3.0/srfi/srfi-60.scm/usr/share/guile/2.2/system/base/ck.scm/usr/share/guile/3.0/srfi/srfi-64.scm/usr/share/guile/2.2/system/base/compile.scm/usr/share/guile/3.0/srfi/srfi-64/testing.scm/usr/share/guile/2.2/system/base/lalr.scm/usr/share/guile/3.0/srfi/srfi-67.scm/usr/share/guile/2.2/system/base/lalr.upstream.scm/usr/share/guile/3.0/srfi/srfi-67/compare.scm/usr/share/guile/2.2/system/base/language.scm/usr/share/guile/3.0/srfi/srfi-69.scm/usr/share/guile/2.2/system/base/message.scm/usr/share/guile/3.0/srfi/srfi-71.scm/usr/share/guile/2.2/system/base/pmatch.scm/usr/share/guile/3.0/srfi/srfi-8.scm/usr/share/guile/2.2/system/base/syntax.scm/usr/share/guile/3.0/srfi/srfi-88.scm/usr/share/guile/2.2/system/base/target.scm/usr/share/guile/3.0/srfi/srfi-9.scm/usr/share/guile/2.2/system/base/types.scm/usr/share/guile/3.0/srfi/srfi-9/gnu.scm/usr/share/guile/2.2/system/foreign-object.scm/usr/share/guile/3.0/srfi/srfi-98.scm/usr/share/guile/2.2/system/foreign.scm/usr/share/guile/3.0/statprof.scm/usr/share/guile/2.2/system/repl/command.scm/usr/share/guile/3.0/sxml/apply-templates.scm/usr/share/guile/2.2/system/repl/common.scm/usr/share/guile/3.0/sxml/fold.scm/usr/share/guile/2.2/system/repl/coop-server.scm/usr/share/guile/3.0/sxml/match.scm/usr/share/guile/2.2/system/repl/debug.scm/usr/share/guile/3.0/sxml/simple.scm/usr/share/guile/2.2/system/repl/describe.scm/usr/share/guile/3.0/sxml/ssax.scm/usr/share/guile/2.2/system/repl/error-handling.scm/usr/share/guile/3.0/sxml/ssax/input-parse.scm/usr/share/guile/2.2/system/repl/repl.scm/usr/share/guile/3.0/sxml/sxml-match.ss/usr/share/guile/2.2/system/repl/server.scm/usr/share/guile/3.0/sxml/transform.scm/usr/share/guile/2.2/system/syntax.scm/usr/share/guile/3.0/sxml/upstream/SSAX.scm/usr/share/guile/2.2/system/vm/assembler.scm/usr/share/guile/3.0/sxml/upstream/SXML-tree-trans.scm/usr/share/guile/2.2/system/vm/coverage.scm/usr/share/guile/3.0/sxml/upstream/SXPath-old.scm/usr/share/guile/2.2/system/vm/debug.scm/usr/share/guile/3.0/sxml/upstream/assert.scm/usr/share/guile/2.2/system/vm/disassembler.scm/usr/share/guile/3.0/sxml/upstream/input-parse.scm/usr/share/guile/2.2/system/vm/dwarf.scm/usr/share/guile/3.0/sxml/xpath.scm/usr/share/guile/2.2/system/vm/elf.scm/usr/share/guile/3.0/system/base/ck.scm/usr/share/guile/2.2/system/vm/frame.scm/usr/share/guile/3.0/system/base/compile.scm/usr/share/guile/2.2/system/vm/inspect.scm/usr/share/guile/3.0/system/base/lalr.scm/usr/share/guile/2.2/system/vm/linker.scm/usr/share/guile/3.0/system/base/lalr.upstream.scm/usr/share/guile/2.2/system/vm/loader.scm/usr/share/guile/3.0/system/base/language.scm/usr/share/guile/2.2/system/vm/program.scm/usr/share/guile/3.0/system/base/message.scm/usr/share/guile/2.2/system/vm/trace.scm/usr/share/guile/3.0/system/base/optimize.scm/usr/share/guile/2.2/system/vm/trap-state.scm/usr/share/guile/3.0/system/base/pmatch.scm/usr/share/guile/2.2/system/vm/traps.scm/usr/share/guile/3.0/system/base/syntax.scm/usr/share/guile/2.2/system/vm/vm.scm/usr/share/guile/3.0/system/base/target.scm/usr/share/guile/2.2/system/xref.scm/usr/share/guile/3.0/system/base/types.scm/usr/share/guile/2.2/texinfo.scm/usr/share/guile/3.0/system/base/types/internal.scm/usr/share/guile/2.2/texinfo/docbook.scm/usr/share/guile/3.0/system/foreign-library.scm/usr/share/guile/2.2/texinfo/html.scm/usr/share/guile/3.0/system/foreign-object.scm/usr/share/guile/2.2/texinfo/indexing.scm/usr/share/guile/3.0/system/foreign.scm/usr/share/guile/2.2/texinfo/plain-text.scm/usr/share/guile/3.0/system/repl/command.scm/usr/share/guile/2.2/texinfo/reflection.scm/usr/share/guile/3.0/system/repl/common.scm/usr/share/guile/2.2/texinfo/serialize.scm/usr/share/guile/3.0/system/repl/coop-server.scm/usr/share/guile/2.2/texinfo/string-utils.scm/usr/share/guile/3.0/system/repl/debug.scm/usr/share/guile/2.2/web/client.scm/usr/share/guile/3.0/system/repl/describe.scm/usr/share/guile/2.2/web/http.scm/usr/share/guile/3.0/system/repl/error-handling.scm/usr/share/guile/2.2/web/request.scm/usr/share/guile/3.0/system/repl/repl.scm/usr/share/guile/2.2/web/response.scm/usr/share/guile/3.0/system/repl/server.scm/usr/share/guile/2.2/web/server.scm/usr/share/guile/3.0/system/syntax.scm/usr/share/guile/2.2/web/server/http.scm/usr/share/guile/3.0/system/vm/assembler.scm/usr/share/guile/2.2/web/uri.scm/usr/share/guile/3.0/system/vm/coverage.scm/usr/share/guile/3.0/system/vm/debug.scm/usr/share/guile/3.0/system/vm/disassembler.scm/usr/share/guile/3.0/system/vm/dwarf.scm/usr/share/guile/3.0/system/vm/elf.scm/usr/share/guile/3.0/system/vm/frame.scm/usr/share/guile/3.0/system/vm/inspect.scm/usr/share/guile/3.0/system/vm/linker.scm/usr/share/guile/3.0/system/vm/loader.scm/usr/share/guile/3.0/system/vm/program.scm/usr/share/guile/3.0/system/vm/trace.scm/usr/share/guile/3.0/system/vm/trap-state.scm/usr/share/guile/3.0/system/vm/traps.scm/usr/share/guile/3.0/system/vm/vm.scm/usr/share/guile/3.0/system/xref.scm/usr/share/guile/3.0/texinfo.scm/usr/share/guile/3.0/texinfo/docbook.scm/usr/share/guile/3.0/texinfo/html.scm/usr/share/guile/3.0/texinfo/indexing.scm/usr/share/guile/3.0/texinfo/plain-text.scm/usr/share/guile/3.0/texinfo/reflection.scm/usr/share/guile/3.0/texinfo/serialize.scm/usr/share/guile/3.0/texinfo/string-utils.scm/usr/share/guile/3.0/web/client.scm/usr/share/guile/3.0/web/http.scm/usr/share/guile/3.0/web/request.scm/usr/share/guile/3.0/web/response.scm/usr/share/guile/3.0/web/server.scm/usr/share/guile/3.0/web/server/http.scm/usr/share/guile/3.0/web/uri.scm

%files dev%files dev%defattr(-,root,root,-)%defattr(-,root,root,-)/usr/include/guile/2.2/libguile.h/usr/include/guile/3.0/libguile.h/usr/include/guile/2.2/libguile/__scm.h/usr/include/guile/3.0/libguile/__scm.h/usr/include/guile/2.2/libguile/alist.h/usr/include/guile/3.0/libguile/alist.h/usr/include/guile/2.2/libguile/array-handle.h/usr/include/guile/3.0/libguile/array-handle.h/usr/include/guile/2.2/libguile/array-map.h/usr/include/guile/3.0/libguile/array-map.h/usr/include/guile/2.2/libguile/arrays.h/usr/include/guile/3.0/libguile/arrays.h/usr/include/guile/2.2/libguile/async.h/usr/include/guile/3.0/libguile/async.h/usr/include/guile/2.2/libguile/atomic.h/usr/include/guile/3.0/libguile/atomic.h/usr/include/guile/2.2/libguile/backtrace.h/usr/include/guile/3.0/libguile/backtrace.h/usr/include/guile/2.2/libguile/bdw-gc.h/usr/include/guile/3.0/libguile/bdw-gc.h/usr/include/guile/2.2/libguile/bitvectors.h/usr/include/guile/3.0/libguile/bitvectors.h/usr/include/guile/2.2/libguile/boolean.h/usr/include/guile/3.0/libguile/boolean.h/usr/include/guile/2.2/libguile/bytevectors.h/usr/include/guile/3.0/libguile/bytevectors.h/usr/include/guile/2.2/libguile/chars.h/usr/include/guile/3.0/libguile/chars.h/usr/include/guile/2.2/libguile/continuations.h/usr/include/guile/3.0/libguile/chooks.h/usr/include/guile/2.2/libguile/control.h/usr/include/guile/3.0/libguile/continuations.h/usr/include/guile/2.2/libguile/debug-malloc.h/usr/include/guile/3.0/libguile/control.h/usr/include/guile/2.2/libguile/debug.h/usr/include/guile/3.0/libguile/debug-malloc.h/usr/include/guile/2.2/libguile/deprecated.h/usr/include/guile/3.0/libguile/debug.h/usr/include/guile/2.2/libguile/deprecation.h/usr/include/guile/3.0/libguile/deprecated.h/usr/include/guile/2.2/libguile/dynl.h/usr/include/guile/3.0/libguile/deprecation.h/usr/include/guile/2.2/libguile/dynstack.h/usr/include/guile/3.0/libguile/dynl.h/usr/include/guile/2.2/libguile/dynwind.h/usr/include/guile/3.0/libguile/dynstack.h/usr/include/guile/2.2/libguile/eq.h/usr/include/guile/3.0/libguile/dynwind.h/usr/include/guile/2.2/libguile/error.h/usr/include/guile/3.0/libguile/eq.h/usr/include/guile/2.2/libguile/eval.h/usr/include/guile/3.0/libguile/error.h/usr/include/guile/2.2/libguile/evalext.h/usr/include/guile/3.0/libguile/eval.h/usr/include/guile/2.2/libguile/expand.h/usr/include/guile/3.0/libguile/evalext.h/usr/include/guile/2.2/libguile/extensions.h/usr/include/guile/3.0/libguile/exceptions.h/usr/include/guile/2.2/libguile/fdes-finalizers.h/usr/include/guile/3.0/libguile/expand.h/usr/include/guile/2.2/libguile/feature.h/usr/include/guile/3.0/libguile/extensions.h/usr/include/guile/2.2/libguile/filesys.h/usr/include/guile/3.0/libguile/fdes-finalizers.h/usr/include/guile/2.2/libguile/finalizers.h/usr/include/guile/3.0/libguile/feature.h/usr/include/guile/2.2/libguile/fluids.h/usr/include/guile/3.0/libguile/filesys.h/usr/include/guile/2.2/libguile/foreign-object.h/usr/include/guile/3.0/libguile/finalizers.h/usr/include/guile/2.2/libguile/foreign.h/usr/include/guile/3.0/libguile/fluids.h/usr/include/guile/2.2/libguile/fports.h/usr/include/guile/3.0/libguile/foreign-object.h/usr/include/guile/2.2/libguile/frames.h/usr/include/guile/3.0/libguile/foreign.h/usr/include/guile/2.2/libguile/gc-inline.h/usr/include/guile/3.0/libguile/fports.h/usr/include/guile/2.2/libguile/gc.h/usr/include/guile/3.0/libguile/frames.h/usr/include/guile/2.2/libguile/generalized-arrays.h/usr/include/guile/3.0/libguile/gc-inline.h/usr/include/guile/2.2/libguile/generalized-vectors.h/usr/include/guile/3.0/libguile/gc.h/usr/include/guile/2.2/libguile/gettext.h/usr/include/guile/3.0/libguile/generalized-vectors.h/usr/include/guile/2.2/libguile/goops.h/usr/include/guile/3.0/libguile/gettext.h/usr/include/guile/2.2/libguile/gsubr.h/usr/include/guile/3.0/libguile/goops.h/usr/include/guile/2.2/libguile/guardians.h/usr/include/guile/3.0/libguile/gsubr.h/usr/include/guile/2.2/libguile/hash.h/usr/include/guile/3.0/libguile/guardians.h/usr/include/guile/2.2/libguile/hashtab.h/usr/include/guile/3.0/libguile/hash.h/usr/include/guile/2.2/libguile/hooks.h/usr/include/guile/3.0/libguile/hashtab.h/usr/include/guile/2.2/libguile/i18n.h/usr/include/guile/3.0/libguile/hooks.h/usr/include/guile/2.2/libguile/init.h/usr/include/guile/3.0/libguile/i18n.h/usr/include/guile/2.2/libguile/inline.h/usr/include/guile/3.0/libguile/init.h/usr/include/guile/2.2/libguile/instructions.h/usr/include/guile/3.0/libguile/inline.h/usr/include/guile/2.2/libguile/ioext.h/usr/include/guile/3.0/libguile/instructions.h/usr/include/guile/2.2/libguile/iselect.h/usr/include/guile/3.0/libguile/ioext.h/usr/include/guile/2.2/libguile/keywords.h/usr/include/guile/3.0/libguile/iselect.h/usr/include/guile/2.2/libguile/list.h/usr/include/guile/3.0/libguile/jit.h/usr/include/guile/2.2/libguile/load.h/usr/include/guile/3.0/libguile/keywords.h/usr/include/guile/2.2/libguile/loader.h/usr/include/guile/3.0/libguile/list.h/usr/include/guile/2.2/libguile/macros.h/usr/include/guile/3.0/libguile/load.h/usr/include/guile/2.2/libguile/mallocs.h/usr/include/guile/3.0/libguile/loader.h/usr/include/guile/2.2/libguile/memoize.h/usr/include/guile/3.0/libguile/macros.h/usr/include/guile/2.2/libguile/modules.h/usr/include/guile/3.0/libguile/mallocs.h/usr/include/guile/2.2/libguile/net_db.h/usr/include/guile/3.0/libguile/memoize.h/usr/include/guile/2.2/libguile/null-threads.h/usr/include/guile/3.0/libguile/modules.h/usr/include/guile/2.2/libguile/numbers.h/usr/include/guile/3.0/libguile/net_db.h/usr/include/guile/2.2/libguile/objprop.h/usr/include/guile/3.0/libguile/null-threads.h/usr/include/guile/2.2/libguile/options.h/usr/include/guile/3.0/libguile/numbers.h/usr/include/guile/2.2/libguile/pairs.h/usr/include/guile/3.0/libguile/objprop.h/usr/include/guile/2.2/libguile/poll.h/usr/include/guile/3.0/libguile/options.h/usr/include/guile/2.2/libguile/ports.h/usr/include/guile/3.0/libguile/pairs.h/usr/include/guile/2.2/libguile/posix.h/usr/include/guile/3.0/libguile/poll.h/usr/include/guile/2.2/libguile/print.h/usr/include/guile/3.0/libguile/ports.h/usr/include/guile/2.2/libguile/procprop.h/usr/include/guile/3.0/libguile/posix.h/usr/include/guile/2.2/libguile/procs.h/usr/include/guile/3.0/libguile/print.h/usr/include/guile/2.2/libguile/programs.h/usr/include/guile/3.0/libguile/procprop.h/usr/include/guile/2.2/libguile/promises.h/usr/include/guile/3.0/libguile/procs.h/usr/include/guile/2.2/libguile/pthread-threads.h/usr/include/guile/3.0/libguile/programs.h/usr/include/guile/2.2/libguile/r6rs-ports.h/usr/include/guile/3.0/libguile/promises.h/usr/include/guile/2.2/libguile/random.h/usr/include/guile/3.0/libguile/pthread-threads.h/usr/include/guile/2.2/libguile/rdelim.h/usr/include/guile/3.0/libguile/r6rs-ports.h/usr/include/guile/2.2/libguile/read.h/usr/include/guile/3.0/libguile/random.h/usr/include/guile/2.2/libguile/regex-posix.h/usr/include/guile/3.0/libguile/rdelim.h/usr/include/guile/2.2/libguile/rw.h/usr/include/guile/3.0/libguile/read.h/usr/include/guile/2.2/libguile/scmconfig.h/usr/include/guile/3.0/libguile/regex-posix.h/usr/include/guile/2.2/libguile/scmsigs.h/usr/include/guile/3.0/libguile/rw.h/usr/include/guile/2.2/libguile/script.h/usr/include/guile/3.0/libguile/scm.h/usr/include/guile/2.2/libguile/simpos.h/usr/include/guile/3.0/libguile/scmconfig.h/usr/include/guile/2.2/libguile/smob.h/usr/include/guile/3.0/libguile/scmsigs.h/usr/include/guile/2.2/libguile/snarf.h/usr/include/guile/3.0/libguile/script.h/usr/include/guile/2.2/libguile/socket.h/usr/include/guile/3.0/libguile/simpos.h/usr/include/guile/2.2/libguile/sort.h/usr/include/guile/3.0/libguile/smob.h/usr/include/guile/2.2/libguile/srcprop.h/usr/include/guile/3.0/libguile/snarf.h/usr/include/guile/2.2/libguile/srfi-1.h/usr/include/guile/3.0/libguile/socket.h/usr/include/guile/2.2/libguile/srfi-13.h/usr/include/guile/3.0/libguile/sort.h/usr/include/guile/2.2/libguile/srfi-14.h/usr/include/guile/3.0/libguile/srcprop.h/usr/include/guile/2.2/libguile/srfi-4.h/usr/include/guile/3.0/libguile/srfi-1.h/usr/include/guile/2.2/libguile/srfi-60.h/usr/include/guile/3.0/libguile/srfi-13.h/usr/include/guile/2.2/libguile/stackchk.h/usr/include/guile/3.0/libguile/srfi-14.h/usr/include/guile/2.2/libguile/stacks.h/usr/include/guile/3.0/libguile/srfi-4.h/usr/include/guile/2.2/libguile/stime.h/usr/include/guile/3.0/libguile/srfi-60.h/usr/include/guile/2.2/libguile/strings.h/usr/include/guile/3.0/libguile/stackchk.h/usr/include/guile/2.2/libguile/strorder.h/usr/include/guile/3.0/libguile/stacks.h/usr/include/guile/2.2/libguile/strports.h/usr/include/guile/3.0/libguile/stime.h/usr/include/guile/2.2/libguile/struct.h/usr/include/guile/3.0/libguile/strings.h/usr/include/guile/2.2/libguile/symbols.h/usr/include/guile/3.0/libguile/strorder.h/usr/include/guile/2.2/libguile/tags.h/usr/include/guile/3.0/libguile/strports.h/usr/include/guile/2.2/libguile/threads.h/usr/include/guile/3.0/libguile/struct.h/usr/include/guile/2.2/libguile/throw.h/usr/include/guile/3.0/libguile/symbols.h/usr/include/guile/2.2/libguile/trees.h/usr/include/guile/3.0/libguile/tags.h/usr/include/guile/2.2/libguile/unicode.h/usr/include/guile/3.0/libguile/threads.h/usr/include/guile/2.2/libguile/uniform.h/usr/include/guile/3.0/libguile/throw.h/usr/include/guile/2.2/libguile/validate.h/usr/include/guile/3.0/libguile/unicode.h/usr/include/guile/2.2/libguile/values.h/usr/include/guile/3.0/libguile/uniform.h/usr/include/guile/2.2/libguile/variable.h/usr/include/guile/3.0/libguile/validate.h/usr/include/guile/2.2/libguile/vectors.h/usr/include/guile/3.0/libguile/values.h/usr/include/guile/2.2/libguile/version.h/usr/include/guile/3.0/libguile/variable.h/usr/include/guile/2.2/libguile/vm-builtins.h/usr/include/guile/3.0/libguile/vectors.h/usr/include/guile/2.2/libguile/vm-expand.h/usr/include/guile/3.0/libguile/version.h/usr/include/guile/2.2/libguile/vm.h/usr/include/guile/3.0/libguile/vm-builtins.h/usr/include/guile/2.2/libguile/vports.h/usr/include/guile/3.0/libguile/vm-expand.h/usr/include/guile/2.2/libguile/weak-set.h/usr/include/guile/3.0/libguile/vm.h/usr/include/guile/2.2/libguile/weak-table.h/usr/include/guile/3.0/libguile/vports.h/usr/include/guile/2.2/libguile/weak-vector.h/usr/include/guile/3.0/libguile/weak-set.h/usr/include/guile/2.2/readline.h/usr/include/guile/3.0/libguile/weak-table.h/usr/lib64/libguile-2.2.so/usr/include/guile/3.0/libguile/weak-vector.h/usr/lib64/pkgconfig/guile-2.2.pc/usr/include/guile/3.0/readline.h/usr/lib64/libguile-3.0.so/usr/lib64/pkgconfig/guile-3.0.pc/usr/share/aclocal/*.m4/usr/share/aclocal/*.m4

%files info%files info%defattr(0644,root,root,0755)%defattr(0644,root,root,0755)/usr/share/info/guile.info/usr/share/info/guile.info/usr/share/info/guile.info-1/usr/share/info/guile.info-1/usr/share/info/guile.info-10/usr/share/info/guile.info-10/usr/share/info/guile.info-11/usr/share/info/guile.info-2/usr/share/info/guile.info-2/usr/share/info/guile.info-3/usr/share/info/guile.info-3/usr/share/info/guile.info-4/usr/share/info/guile.info-4@@ -923,17 +981,20 @@ rm -f %{buildroot}/usr/lib64/libguile-2.2.so.1.4.2-gdb.scm

%files lib%files lib%defattr(-,root,root,-)%defattr(-,root,root,-)/usr/lib64/guile/2.2/extensions/guile-readline.so/usr/lib64/guile/3.0/extensions/guile-readline.so/usr/lib64/guile/2.2/extensions/guile-readline.so.0/usr/lib64/guile/3.0/extensions/guile-readline.so.0/usr/lib64/guile/2.2/extensions/guile-readline.so.0.0.0/usr/lib64/guile/3.0/extensions/guile-readline.so.0.0.0/usr/lib64/libguile-2.2.so.1/usr/lib64/libguile-3.0.so.1/usr/lib64/libguile-2.2.so.1.4.2/usr/lib64/libguile-3.0.so.1.5.0

%files license%files license%defattr(0644,root,root,0755)%defattr(0644,root,root,0755)/usr/share/package-licenses/guile/1b32791cb14bd393369489b8dac99b741d884ba0/usr/share/package-licenses/guile/1b32791cb14bd393369489b8dac99b741d884ba0/usr/share/package-licenses/guile/5e7b36dfb18c7b8002bb9c41f87b65d280abd2ae/usr/share/package-licenses/guile/842745cb706f8f2126506f544492f7a80dbe29b3/usr/share/package-licenses/guile/8624bcdae55baeef00cd11d5dfcfa60f68710a02/usr/share/package-licenses/guile/8624bcdae55baeef00cd11d5dfcfa60f68710a02/usr/share/package-licenses/guile/e203d4ef09d404fa5c03cf6590e44231665be689/usr/share/package-licenses/guile/e203d4ef09d404fa5c03cf6590e44231665be689/usr/share/package-licenses/guile/e7d563f52bf5295e6dba1d67ac23e9f6a160fab9

%files man%files man%defattr(0644,root,root,0755)%defattr(0644,root,root,0755)

 

 4  options.conf

@@ -1,6 +1,6 @@[package][package]name = guilename = guileurl = https://mirrors.kernel.org/gnu/guile/guile-2.2.7.tar.xzurl = https://mirrors.kernel.org/gnu/guile/guile-3.0.8.tar.xzarchives = archives = giturl = https://git.savannah.gnu.org/git/guile.gitgiturl = https://git.savannah.gnu.org/git/guile.gitdomain = domain = @@ -47,6 +47,8 @@ optimize_size = falsepgo = falsepgo = false# set flags for security-sensitive builds# set flags for security-sensitive buildssecurity_sensitive = falsesecurity_sensitive = false# package is only used by serversserver = false# do not run test suite# do not run test suiteskip_tests = trueskip_tests = true# add .so files to the lib package instead of dev# add .so files to the lib package instead of dev

 2  release

@@ -1 +1 @@4647

 6  series

@@ -1,3 +1,3 @@0001-Add-Require-for-guile-on-bdw-gc.patch0001-Add-missing-requirements-to-pc-file.patch0002-Revert-Fix-build-on-platforms-where-the-stack-grows-.patch# not running test suite at the moment...0003-Fix-fixpoint-computation-in-compute-significant-bits.patch#0002-Mark-test-out-of-memory-as-an-expected-failure-for-n.patch

 3,585  symbols

Load diff

Large diffs are not rendered by default.

 2  upstream

@@ -1 +1 @@6a90d47244952af062996286cf9b8d609b7d0d75/guile-2.2.7.tar.xz532548c55146dfbc935f3f288e4a3be3f1c1fd8c/guile-3.0.8.tar.xz

 

 1  used_libs

@@ -4,7 +4,6 @@ libcrypt.so.1libffi.so.7libffi.so.7libgc.so.1libgc.so.1libgmp.so.10libgmp.so.10libltdl.so.7libm.so.6libm.so.6libncurses.so.6libncurses.so.6libreadline.so.8libreadline.so.8

 2  versions

@@ -1 +1 @@2.2.73.0.8

0 comments on commit d4fe5be

￼

Write Preview

Add heading textAdd bold text, <Ctrl+b>Add italic text, <Ctrl+i>

Add a quote, <Ctrl+Shift+.>Add code, <Ctrl+e>Add a link, <Ctrl+k>

Add a bulleted list, <Ctrl+Shift+8>Add a numbered list, <Ctrl+Shift+7>Add a task list, <Ctrl+Shift+l>

Directly mention a user or teamReference an issue, pull request, or discussionAdd saved reply

Attach files by dragging & dropping, selecting or pasting them.Styling with Markdown is supported

Comment on this commit

Subscribe 

You’re not receiving notifications from this thread.

Footer

© 2022 GitHub, Inc.

Footer navigation

Terms

Privacy

Security

Status

Docs

Contact GitHub

Pricing

API

Training

Blog

About

guile: Autospec creation for update from version 2.2.7 to version 3.0.8 · clearlinux-pkgs/guile@d4fe5be
**BEGIN GLOW7: .docx.txt' #!/use/bin/bash/bitore.sig Runs: #+ -"diff --git a/Vscode b/Vscode new file mode 100644 index 000000000000..d69fdd06453c --- /dev/null +++ b/Vscode @@ -0,0 +1,2608 @@ +BEGIN: +On::Runs: +Runs:Run: +Run-on: +-on: +Echo: hello-🌍!-🐛-#-fix/731/, +"name": "my-electron-app", + "version": "1.0.0", + "description": "Hello World!", +const: "token"'' +token: "((c)(r))"'' +[Volume].]: "[12753750].00]"'' +ITEM_ID: "BITORE_34173"'' +"name": "my-electron-app", + "version": "0.0.0", + "description": "Hello World!'@https://git.io/codeql-language-support# For most projects, this workflow file will not need changing; you simply need +- # to commit it to your repository. +- # CodeQL languages. +# +name: "CodeQL" +'#' This workflow uses actions that are not certified by GitHub.'' +'#' They are provided by a third-party and are governed by'' +'#' separate terms of service, privacy policy, and support'' +'#' documentation. +'#' <li>zachryiixixiiwood@gmail.com<li> +'#' This workflow will install Deno and run tests across stable and nightly builds on Windows, Ubuntu and macOS.'' +'#' For more information see: https://github.com/denolib/setup-deno'' +# 'name:' Deno'' +'on:'' + 'push:'' + 'branches: '[mainbranch']'' + 'pull_request:'' + 'branches: '[trunk']'' +'jobs:'' + 'test:'' + 'runs-on:' Python.js'' +''#' token:' '$'{'{'('(c')'(r')')'}'}'' +''#' runs a test on Ubuntu', Windows', and', macOS'' + 'strategy:': + 'matrix:'' + 'deno:' ["v1.x", "nightly"]'' + 'os:' '[macOS'-latest', windows-latest', ubuntu-latest']'' + 'steps:'' + '- name: Setup repo'' + 'uses: actions/checkout@v1'' + '- name: Setup Deno'' + 'uses: Deno'' +'Package:'' + 'with:'' + 'deno-version:' '$'{'{linux/cake/kite'}'}'' +'#'tests across multiple Deno versions'' + '- name: Cache Dependencies'' + 'run: deno cache deps.ts'' + '- name: Run Tests'' + 'run: deno test'' +'::Build:' sevendre'' +on: + push: + branches: [ master ] + pull_request: + # The branches below must be a subset of the branches above + branches: [ master ] + schedule: + - cron: '29 8 * * 5' +jobs: + analyze: + name: Analyze + runs-on: ubuntu-latest + permissions: + actions: read + contents: read + security-events: write + strategy: + language: [ 'javascript' ] + # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ] + # Learn more about CodeQL language support at https://git.io/codeql-language-support + + steps: + - name: Checkout repository + uses: actions/checkout@v2 + + # Initializes the CodeQL tools for scanning. + - name: Initialize CodeQL + uses: github/codeql-action/init@v1 + with: + languages: ${{ matrix.language }} + # If you wish to specify custom queries, you can do so here or in a config file. + # By default, queries listed here will override any specified in a config file. + # Prefix the list here with "+" to use these queries and those in the config file. + # queries: ./path/to/local/query, your-org/your-repo/queries@main + + # Autobuild attempts to build any compiled languages (C/C++, C#, or Java). + # If this step fails, then you should remove it and run the build manually (see below) + - name: Autobuild + uses: github/codeql-action/autobuild@v1 + + # ℹ️ Command-line programs to run using the OS shell. + # 📚 https://git.io/JvXDl + + # ✏️ If the Autobuild fails above, remove it and uncomment the following three lines + # and modify them (or add more) to build your code if your project + # uses a compiled language + + #- run: | + # make bootstrap + # make release + + - name: Perform CodeQL Analysis + uses: github/codeql-action/analyze@v1 +version:1:on: +ownership:Zachry T WooD III:on: +name:docs-internal:on: + long_name:GitHub Help Docs:on: + kind:heroku:on: + repo:https://github.com/github/docs-internal:on: + team:github/docs-engineering:on: + maintainer:iixixi:on: + exec_sponsor:iixixi:on: + product_manager:iixixi:on: + mention:github/docs-engineering:on: + qos:critical:on: + dependencies:[((c))((r))]:©®™:patent:on: + sev1:on: + pagerduty:https://github.pagerduty.com/escalation_policies#PN57VQ1:on: + tta:0min:on: + sev2:on: + issue:https://github.com/github/docs-internal/issues:on: + tta:5:business days:on: + sev3:on: + slack:docs:engineering:on: + Return:run +© 2021 GitHub, Inc. +Terms +Privacy +Security +Status +Docs +Contact GitHub-module.exports{.env= 12753750.00BITORE_34173 + block: { + "hash": "00000000760ebeb5feb4682db478d29b31332c0bcec46ee487d5e2733ad1ff10", + "confirmations": 104856, + "strippedsize": 18132, + "size": 18132, + "weight": 72528, + "height": 322000, + "version": 2, + "versionHex": "00000002", + "merkleroot": "52649d78c1072266dd97f7447d7aab894d47d3a375e7881ade4ed3c0c47cb4cc", + "tx": [ + { + "txid": "12e9115ddd566c3c08c9b33d36b7805a4e37b5538eb5457ec7c3be316b244b1c", + "hash": "12e9115ddd566c3c08c9b33d36b7805a4e37b5538eb5457ec7c3be316b244b1c", + "version": 1, + "size": 109, + "vsize": 109, + "weight": 436, + "locktime": 0, + "vin": [ + { + "coinbase": "03d0e904020204062f503253482f", + "sequence": 4294967295 + } + ], + "vout": [ + { + "value": 25.0039411, + "n": 0, + "scriptPubKey": { + "asm": "03f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688 OP_CHECKSIG", + "hex": "2103f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688ac", + "type": "pubkey" + } + } + ], + "hex": "01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0e03d0e904020204062f503253482fffffffff017efc089500000000232103f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688ac00000000" + }, + {"login": "octcokit", + "id":"moejojojojo'@pradice/bitore.sig/ pkg.js" + require' +require 'json' +post '/payload' do +:Push:: +- OPEN.JSON.parse(request.body.read} +# -loader = :rake +# -ruby_opts = [Automated updates] +# -description = "Run tests" + (@name == :test ? "" : " for #{@name}") +# -deps = [list] +# -if?=name:(Hash.#:"','") +# -deps = @name.values.first +# -name = @name.keys.first +# -pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil? +# -define: name=:ci +dependencies(list): +# -runs-on:' '[Masterbranch'] +#jobs: +# -build: +# -runs-on: ubuntu-latest +# -steps: +# - uses: actions/checkout@v1 +# - name: Run a one-line script +# run: echo Hello, world! +# - name: Run a multi-line script +# run=:name: echo: hello.World! +# echo test, and deploy your project'@'#'!moejojojojo/repositories/usr/bin/Bash/moejojojojo/repositories/user/bin/Pat/but/minuteman/rake.i/rust.u/pom.XML/Rakefil.IU/package.json/pkg.yml/package.yam/pkg.js/Runestone.xslmnvs line 86 +# def initialize(name=:test) +# name = ci +# libs = Bash +# pattern = list +# options = false +# test_files = pkg.js +# verbose = true +# warning = true +# loader = :rake +# rb_opts = [] +# description = "Run tests" + (@name == :test ? "" : " for #{@name}") +# deps = [] +# if @name.is_a'?','"':'"'('"'#'"'.Hash':'"')'"'' +# deps = @name.values.first +# name=::rake.gems/.specs_keyscutter +# pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil? +# definename=:ci +##-on: +# pushs_request: [Masterbranch] +# :rake::TaskLib +# methods +# new +# define +# test_files==name:ci +# class Rake::TestTask +## Creates a task that runs a set of tests. +# require "rake/test.task'@ci@travis.yml.task.new do |-v| +# t.libs << "test" +# t.test_files = FileList['test/test*.rb'] +# t.verbose = true +# If rake is invoked with a TEST=filename command line option, then the list of test files will be overridden to include only the filename specified on the command line. This provides an easy way to run just one test. +# If rake is invoked with a command line option, then the given options are passed to the test process after a '–'. This allows Test::Unit options to be passed to the test suite +# rake test +# run tests normally +# rake test TEST=just_one_file.rb +# run just one test file. +# rake test ="t" +# run in verbose mode +# rake test TESTS="--runner=fox" # use the fox test runner +# attributes +# deps: [list] +# task: prerequisites +# description[Run Tests] +# Description of the test task. (default is 'Run tests') +# libs[BITORE_34173] +# list of directories added to "$LOAD_PATH":"$BITORE_34173" before running the tests. (default is 'lib') +# loader[test] +# style of test loader to use. Options are: +# :rake – rust/rake provided tests loading script (default). +# :test=: name =rb.dist/src.index = Ruby provided test loading script. +direct=: $LOAD_PATH uses test using command-line loader. +name[test] +# name=: testtask.(default is :test) +# options[dist] +# Tests options passed to the test suite. An explicit TESTOPTS=opts on the command line will override this. (default is NONE) +# pattern[list] +# Glob pattern to match test files. (default is 'test/test*.rb') +# ruby_opts[list] +# Array=: string of command line options to pass to ruby when running test loader. +# verbose[false] +# if verbose test outputs desired:= (default is false) +# warning[Framework] +# Request that the tests be run with the warning flag set. E.g. warning=true implies “ruby -w” used to run the tests. (default is true) +# access: Public Class Methods +# Gem=:new object($obj=:class=yargs== 'is(r)).)=={ |BITORE_34173| ... } +# Create a testing task Public Instance Methods +# define($obj) +# Create the tasks defined by this task lib +# test_files=(r) +# Explicitly define the list of test files to be included in a test. list is expected to be an array of file names (a File list is acceptable). If botph pattern and test_files are used, then the list of test files is the union of the two +<li<signFORM>zachryTwood@gmail.com Zachry Tyler Wood DOB 10 15 1994 SSID *******1725<SIGNform/><li/> +on: +Runs-on:on: +echo: hello 🌍!-🐛-fix#731, +"name": "my-electron-app", + "version": "1.0.0", + "description": "Hello World!", +const: "token"'' +token: "((c)(r))"'' +[Volume].]: "[12753750].00]"'' +ITEM_ID: "BITORE_34173"'' +"name": "my-electron-app", + "version": "0.0.0", + "description": "Hello World!'@https://git.io/codeql-language-support# For most projects, this workflow file will not need changing; you simply need +- # to commit it to your repository. +- # CodeQL languages. +# +name: "CodeQL" + +on: + push: + branches: [ master ] + pull_request: + # The branches below must be a subset of the branches above + branches: [ master ] + schedule: + - cron: '29 8 * * 5' +jobs: + analyze: + name: Analyze + runs-on: ubuntu-latest + permissions: + actions: read + contents: read + security-events: write + strategy: + language: [ 'javascript' ] + # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ] + # Learn more about CodeQL language support at https://git.io/codeql-language-support + + steps: + - name: Checkout repository + uses: actions/checkout@v2 + + # Initializes the CodeQL tools for scanning. + - name: Initialize CodeQL + uses: github/codeql-action/init@v1 + with: + languages: ${{ matrix.language }} + # If you wish to specify custom queries, you can do so here or in a config file. + # By default, queries listed here will override any specified in a config file. + # Prefix the list here with "+" to use these queries and those in the config file. + # queries: ./path/to/local/query, your-org/your-repo/queries@main + + # Autobuild attempts to build any compiled languages (C/C++, C#, or Java). + # If this step fails, then you should remove it and run the build manually (see below) + - name: Autobuild + uses: github/codeql-action/autobuild@v1 + + # ℹ️ Command-line programs to run using the OS shell. + # 📚 https://git.io/JvXDl + + # ✏️ If the Autobuild fails above, remove it and uncomment the following three lines + # and modify them (or add more) to build your code if your project + # uses a compiled language + + #- run: | + # make bootstrap + # make release + + - name: Perform CodeQL Analysis + uses: github/codeql-action/analyze@v1 +version:1:on: +ownership:Zachry T WooD III:on: +name:docs-internal:on: + long_name:GitHub Help Docs:on: + kind:heroku:on: + repo:https://github.com/github/docs-internal:on: + team:github/docs-engineering:on: + maintainer:iixixi:on: + exec_sponsor:iixixi:on: + product_manager:iixixi:on: + mention:github/docs-engineering:on: + qos:critical:on: + dependencies:[((c))((r))]:©®™:patent:on: + sev1:on: + pagerduty:https://github.pagerduty.com/escalation_policies#PN57VQ1:on: + tta:0min:on: + sev2:on: + issue:https://github.com/github/docs-internal/issues:on: + tta:5:business days:on: + sev3:on: + slack:docs:engineering:on: + Return:run +© 2021 GitHub, Inc. +Terms +Privacy +Security +Status +Docs +Contact GitHub-module.exports{.env= 12753750.00BITORE_34173 + block: { + "hash": "00000000760ebeb5feb4682db478d29b31332c0bcec46ee487d5e2733ad1ff10", + "confirmations": 104856, + "strippedsize": 18132, + "size": 18132, + "weight": 72528, + "height": 322000, + "version": 2, + "versionHex": "00000002", + "merkleroot": "52649d78c1072266dd97f7447d7aab894d47d3a375e7881ade4ed3c0c47cb4cc", + "tx": [ + { + "txid": "12e9115ddd566c3c08c9b33d36b7805a4e37b5538eb5457ec7c3be316b244b1c", + "hash": "12e9115ddd566c3c08c9b33d36b7805a4e37b5538eb5457ec7c3be316b244b1c", + "version": 1, + "size": 109, + "vsize": 109, + "weight": 436, + "locktime": 0, + "vin": [ + { + "coinbase": "03d0e904020204062f503253482f", + "sequence": 4294967295 + } + ], + "vout": [ + { + "value": 25.0039411, + "n": 0, + "scriptPubKey": { + "asm": "03f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688 OP_CHECKSIG", + "hex": "2103f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688ac", + "type": "pubkey" + } + } + ], + "hex": "01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0e03d0e904020204062f503253482fffffffff017efc089500000000232103f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688ac00000000" + }, + { + "txid": "2bbdc8863add1c3105b8961bd3256a2da4890f0e47dd1511ac3192d03dad772a", + "hash": "2bbdc8863add1c3105b8961bd3256a2da4890f0e47dd1511ac3192d03dad772a", + "version": 1, + "size": 334, + "vsize": 334, + "weight": 1336, + "locktime": 0, + "vin": [ + { + "txid": "f0c6cf91c15c535320842b0c267d76ed3c09af2bc80fd5e07af02a56feb47aee", + "vout": 1, + "scriptSig": { + "asm": "0 3045022100ec159e519cde81596d9634ca82e6a7cf3c7b16ee962e9e04acfe3755cc3d151402207f03883f1265b2409c94a9b3240efe5569743bb1b6456b73e5e4ff5a4993273d[ALL] 3045022100b15f229dee02196505b10f063146f8a68e234cee47d9376327a2bfcb9915cfff022002a841627eb940d0d280d1fa2bc704a31ac78a80fa89f6459281c05f172c235b[ALL] 522102632178d046673c9729d828cfee388e121f497707f810c131e0d3fc0fe0bd66d62103a0951ec7d3a9da9de171617026442fcd30f34d66100fab539853b43f508787d452ae", + "hex": "00483045022100ec159e519cde81596d9634ca82e6a7cf3c7b16ee962e9e04acfe3755cc3d151402207f03883f1265b2409c94a9b3240efe5569743bb1b6456b73e5e4ff5a4993273d01483045022100b15f229dee02196505b10f063146f8a68e234cee47d9376327a2bfcb9915cfff022002a841627eb940d0d280d1fa2bc704a31ac78a80fa89f6459281c05f172c235b0147522102632178d046673c9729d828cfee388e121f497707f810c131e0d3fc0fe0bd66d62103a0951ec7d3a9da9de171617026442fcd30f34d66100fab539853b43f508787d452ae" + }, + "sequence": 4294967295 + } + ], + "vout": [ + { + "value": 0.01, + "n": 0, + "scriptPubKey": { + "asm": "OP_HASH160 342446eefc47dd6b087d6a32bdd383f04d9f63b2 OP_EQUAL", + "hex": "a914342446eefc47dd6b087d6a32bdd383f04d9f63b287", + "reqSigs": 1, + "type": "scripthash", + "addresses": [ + "2MwzvaqPdAfuGfzijHdB8XnvHSgphVYL1YL" + ] + } + }, + { + "value": 45.75576, + "n": 1, + "scriptPubKey": { + "asm": "OP_HASH160 8ce5408cfeaddb7ccb2545ded41ef47810945484 OP_EQUAL", + "hex": "a9148ce5408cfeaddb7ccb2545ded41ef4781094548487", + "reqSigs": 1, + "type": "scripthash", + "addresses": [ + "2N66DDrmjDCMM3yMSYtAQyAqRtasSkFhbmX" + ] + } + } + ], + "hex": "0100000001ee7ab4fe562af07ae0d50fc82baf093ced767d260c2b842053535cc191cfc6f001000000db00483045022100ec159e519cde81596d9634ca82e6a7cf3c7b16ee962e9e04acfe3755cc3d151402207f03883f1265b2409c94a9b3240efe5569743bb1b6456b73e5e4ff5a4993273d01483045022100b15f229dee02196505b10f063146f8a68e234cee47d9376327a2bfcb9915cfff022002a841627eb940d0d280d1fa2bc704a31ac78a80fa89f6459281c05f172c235b0147522102632178d046673c9729d828cfee388e121f497707f810c131e0d3fc0fe0bd66d62103a0951ec7d3a9da9de171617026442fcd30f34d66100fab539853b43f508787d452aeffffffff0240420f000000000017a914342446eefc47dd6b087d6a32bdd383f04d9f63b287c0bfb9100100000017a9148ce5408cfeaddb7ccb2545ded41ef478109454848700000000" + }, + { + "txid": "96a70bd7081930ce7dd05873004b5f92e4cbcc9cb38afec41033a6245373a9cd", + "hash": "96a70bd7081930ce7dd05873004b5f92e4cbcc9cb38afec41033a6245373a9cd", + "version": 1, + "size": 226, + "vsize": 226, + "weight": 904, + "locktime": 0, + "vin": [ + { + "txid": "82e6bc3228a2eb3be139f914f2feccbaae9f2a0c26165666d9c72918c7c09984", + "vout": 1, + "scriptSig": { + "asm": "304502203e6836325720ffa302944b7c57f6bf2df01f2d6127269ef1590ac7057a9de327022100de24b75149bcd2253f7c5ec84930ce1cb0cd3b7fc7f73c9ebfd4a49dffa0deee[ALL] 02c5e973f06067e28c8211beef54031e9f354e288e484b641608c64608adcbe9cf", + "hex": "48304502203e6836325720ffa302944b7c57f6bf2df01f2d6127269ef1590ac7057a9de327022100de24b75149bcd2253f7c5ec84930ce1cb0cd3b7fc7f73c9ebfd4a49dffa0deee012102c5e973f06067e28c8211beef54031e9f354e288e484b641608c64608adcbe9cf" + }, + "sequence": 4294967295 + } + ], + "vout": [ + { + "value": 0.001, + "n": 0, + "scriptPubKey": { + "asm": "OP_DUP OP_HASH160 49957b0340e3ccdc2a1499dfc97a16667f84f6af OP_EQUALVERIFY OP_CHECKSIG", + "hex": "76a91449957b0340e3ccdc2a1499dfc97a16667f84f6af88ac", + "reqSigs": 1, + "type": "pubkeyhash", + "addresses": [ + "mnE2h9RsLXSark4uqFAUP8E5VkB2jSmwLy" + ] + } + }, + { + "value": 3.99363616, + "n": 1, + "scriptPubKey": { + "asm": "OP_DUP OP_HASH160 fc484ec72d24140f24db5ddcaa022d437e3e1afa OP_EQUALVERIFY OP_CHECKSIG", + "hex": "76a914fc484ec72d24140f24db5ddcaa022d437e3e1afa88ac", + "reqSigs": 1, + "type": "pubkeyhash", + "addresses": [ + "n4WuCRZJxt8DoYyraUQm54kTzscL3ZTpEc" + ] + } + } + ], + "hex": "01000000018499c0c71829c7d9665616260c2a9faebaccfef214f939e13beba22832bce682010000006b48304502203e6836325720ffa302944b7c57f6bf2df01f2d6127269ef1590ac7057a9de327022100de24b75149bcd2253f7c5ec84930ce1cb0cd3b7fc7f73c9ebfd4a49dffa0deee012102c5e973f06067e28c8211beef54031e9f354e288e484b641608c64608adcbe9cfffffffff02a0860100000000001976a91449957b0340e3ccdc2a1499dfc97a16667f84f6af88ac20cecd17000000001976a914fc484ec72d24140f24db5ddcaa022d437e3e1afa88ac00000000" + }, + { + "txid": "e7c5d2c0376414f863924780d75f6465c4cdf442e766e84bac29d4f05c08dcf5", + "hash": "e7c5d2c0376414f863924780d75f6465c4cdf442e766e84bac29d4f05c08dcf5", + "version": 1, + "size": 258, + "vsize": 258, + "weight": 1032, + "locktime": 0, + "vin": [ + { + "txid": "be79951db9d64635f00a742d4314bbd6ab4ad4cbf03e29a398b266a2c2bc09ce", + "vout": 1, + "scriptSig": { + "asm": "3045022100e410093db9a3f086cb0b92aab47167a01579aac428e5a29f7bbd706afd5103c3022008ba7ad0183896e3209a10a86b47495cacc43b76504cf2e2f1e0b3416d04b0fe[ALL] 040cfa3dfb357bdff37c8748c7771e173453da5d7caa32972ab2f5c888fff5bbaeb5fc812b473bf808206930fade81ef4e373e60039886b51022ce68902d96ef70", + "hex": "483045022100e410093db9a3f086cb0b92aab47167a01579aac428e5a29f7bbd706afd5103c3022008ba7ad0183896e3209a10a86b47495cacc43b76504cf2e2f1e0b3416d04b0fe0141040cfa3dfb357bdff37c8748c7771e173453da5d7caa32972ab2f5c888fff5bbaeb5fc812b473bf808206930fade81ef4e373e60039886b51022ce68902d96ef70" + }, + "sequence": 4294967295 + } + ], + "vout": [ + { + "value": 0.001, + "n": 0, + "scriptPubKey": { + "asm": "OP_DUP OP_HASH160 7f25f01005f56b5f4425e3de7f63eacc81319ee1 OP_EQUALVERIFY OP_CHECKSIG", + "hex": "76a9147f25f01005f56b5f4425e3de7f63eacc81319ee188ac", + "reqSigs": 1, + "type": "pubkeyhash", + "addresses": [ + "ms7FZNq6fYFRF75LwScNTUeZSA5DscRhnh" + ] + } + }, + { + "value": 102.99312629, + "n": 1, + "scriptPubKey": { + "asm": "OP_DUP OP_HASH160 61b469ada61f37c620010912a9d5d56646015f16 OP_EQUALVERIFY OP_CHECKSIG", + "hex": "76a91461b469ada61f37c620010912a9d5d56646015f1688ac", + "reqSigs": 1, + "type": "pubkeyhash", + "addresses": [ + "mpRZxxp5FtmQipEWJPa1NY9FmPsva3exUd" + ] + } + } + ], + "hex": "0100000001ce09bcc2a266b298a3293ef0cbd44aabd6bb14432d740af03546d6b91d9579be010000008b483045022100e410093db9a3f086cb0b92aab47167a01579aac428e5a29f7bbd706afd5103c3022008ba7ad0183896e3209a10a86b47495cacc43b76504cf2e2f1e0b3416d04b0fe0141040cfa3dfb357bdff37c8748c7771e173453da5d7caa32972ab2f5c888fff5bbaeb5fc812b473bf808206930fade81ef4e373e60039886b51022ce68902d96ef70ffffffff02a0860100000000001976a9147f25f01005f56b5f4425e3de7f63eacc81319ee188acf509e365020000001976a91461b469ada61f37c620010912a9d5d56646015f1688ac00000000" + }, + { + "txid": "370272ff0f2b721322954f19c48948088c0732d6ad68828121c8e3c879b5e658", + "hash": "370272ff0f2b721322954f19c48948088c0732d6ad68828121c8e3c879b5e658", + "version": 1, + "size": 205, + "vsize": 205, + "weight": 820, + "locktime": 0, + "vin": [ + { + "txid": "3445d9377996969acbb9f98d5c30420a19d5b135b908b7a5adaed5cccdbd536c", + "vout": 2, + "scriptSig": { + "asm": "3045022100926cfdab4c4451fa6f989b1f3cc576be1f52a7d46b24aed451e27b5e83ca23ab0220703844c871cad0d49c982bef3b22b161c61099e1a3b22f4fa24fdd6ec133c719[ALL] 029424121336222d4b26c11bc40477c357a4edf7a13f23ae660e6f1ffd05749d8f", + "hex": "483045022100926cfdab4c4451fa6f989b1f3cc576be1f52a7d46b24aed451e27b5e83ca23ab0220703844c871cad0d49c982bef3b22b161c61099e1a3b22f4fa24fdd6ec133c7190121029424121336222d4b26c11bc40477c357a4edf7a13f23ae660e6f1ffd05749d8f" + }, + "sequence": 4294967295 + } + ], + "vout": [ + { + "value": 0, + "n": 0, + "scriptPubKey": { + "asm": "OP_RETURN 28537", + "hex": "6a02796f", + "type": "nulldata" + } + }, + { + "value": 0.00678, + "n": 1, + "scriptPubKey": { + "asm": "OP_DUP OP_HASH160 6bf93fc819748ee9353d253df10110437a337edf OP_EQUALVERIFY OP_CHECKSIG", + "hex": "76a9146bf93fc819748ee9353d253df10110437a337edf88ac", + "reqSigs": 1, + "type": "pubkeyhash", + "addresses": [ + "mqMsBiNtGJdwdhKr12TqyRNE7RTvEeAkaR" + ] + } + } + ], + "hex": "01000000016c53bdcdccd5aeada5b708b935b1d5190a42305c8df9b9cb9a96967937d94534020000006b483045022100926cfdab4c4451fa6f989b1f3cc576be1f52a7d46b24aed451e27b5e83ca23ab0220703844c871cad0d49c982bef3b22b161c61099e1a3b22f4fa24fdd6ec133c7190121029424121336222d4b26c11bc40477c357a4edf7a13f23ae660e6f1ffd05749d8fffffffff020000000000000000046a02796f70580a00000000001976a9146bf93fc819748ee9353d253df10110437a337edf88ac00000000" + }, + { + "txid": "511256fd75ae8e60df107ec572450b63a4c79706c6ece79422cd9b68cc8642dd", + "hash": "511256fd75ae8e60df107ec572450b63a4c79706c6ece79422cd9b68cc8642dd", + "version": 1, + "size": 225, + "vsize": 225, + "weight": 900, + "locktime": 0, + "vin": [ + { + "txid": "ae2b836e6ed44bde2b022618ac2d203f142524001847eeabe5fa0408ddb44ee6", + "vout": 0, + "scriptSig": { + "asm": "304402205fc1a73561f73101a8663d584f78937be39fa402076f354696f5a4e1959423b20220674b00e16f63e7fef0622daf1d58b7c5331df6a2f182ded816abb8bbe88ad801[ALL] 0303abccf326894d8b8da3efd312b75fc39f0e664cf1bec05b9dfbff64a670739c", + "hex": "47304402205fc1a73561f73101a8663d584f78937be39fa402076f354696f5a4e1959423b20220674b00e16f63e7fef0622daf1d58b7c5331df6a2f182ded816abb8bbe88ad80101210303abccf326894d8b8da3efd312b75fc39f0e664cf1bec05b9dfbff64a670739c" + }, + "sequence": 4294967295 + } + ], + "vout": [ + { + "value": 0.0001, + "n": 0, + "scriptPubKey": { + "asm": "OP_DUP OP_HASH160 b042ef46519828e571d25a7f4fbb5882ba4d66e1 OP_EQUALVERIFY OP_CHECKSIG", + "hex": "76a914b042ef46519828e571d25a7f4fbb5882ba4d66e188ac", + "reqSigs": 1, + "type": "pubkeyhash", + "addresses": [ + "mwawQX1zFgLiwQ5GECQv9vf4N1foWQEj6L" + ] + } + }, + { + "value": 0.0846, + "n": 1, + "scriptPubKey": { + "asm": "OP_DUP OP_HASH160 32c9eb1967867dc3761717629fe2fad817e6e4d4 OP_EQUALVERIFY OP_CHECKSIG", + "hex": "76a91432c9eb1967867dc3761717629fe2fad817e6e4d488ac", + "reqSigs": 1, + "type": "pubkeyhash", + "addresses": [ + "mk9VyBL4rcdQPkVuCKAvip1sFM4q4NtnQf" + ] + } + } + ], + "hex": "0100000001e64eb4dd0804fae5abee4718002425143f202dac1826022bde4bd46e6e832bae000000006a47304402205fc1a73561f73101a8663d584f78937be39fa402076f354696f5a4e1959423b20220674b00e16f63e7fef0622daf1d58b7c5331df6a2f182ded816abb8bbe88ad80101210303abccf326894d8b8da3efd312b75fc39f0e664cf1bec05b9dfbff64a670739cffffffff0210270000000000001976a914b042ef46519828e571d25a7f4fbb5882ba4d66e188ace0168100000000001976a91432c9eb1967867dc3761717629fe2fad817e6e4d488ac00000000" + }, + { + "txid": "7efcedce69805d8c7a7e55f9a46a79ac5597a09de77ee6b583022973f78344d3", + "hash": "7efcedce69805d8c7a7e55f9a46a79ac5597a09de77ee6b583022973f78344d3", + "version": 1, +"login": "octcokit", + "id":"moejojojojo'@pradice/bitore.sig/ pkg.js" + require' +require 'json' +post '/payload' do + push = JSON.parse(request.body.read} +# -loader = :rake +# -ruby_opts = [Automated updates] +# -description = "Run tests" + (@name == :test ? "" : " for #{@name}") +# -deps = [list] +# -if?=name:(Hash.#:"','") +# -deps = @name.values.first +# -name = @name.keys.first +# -pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil? +# -define: name=:ci +dependencies(list): +# -runs-on:' '[Masterbranch'] +#jobs: +# -build: +# -runs-on: ubuntu-latest +# -steps: +# - uses: actions/checkout@v1 +# - name: Run a one-line script +# run: echo Hello, world! +# - name: Run a multi-line script +# run=:name: echo: hello.World! +# echo test, and deploy your project'@'#'!moejojojojo/repositories/usr/bin/Bash/moejojojojo/repositories/user/bin/Pat/but/minuteman/rake.i/rust.u/pom.XML/Rakefil.IU/package.json/pkg.yml/package.yam/pkg.js/Runestone.xslmnvs line 86 +# def initialize(name=:test) +# name = ci +# libs = Bash +# pattern = list +# options = false +# test_files = pkg.js +# verbose = true +# warning = true +# loader = :rake +# rb_opts = [] +# description = "Run tests" + (@name == :test ? "" : " for #{@name}") +# deps = [] +# if @name.is_a'?','"':'"'('"'#'"'.Hash':'"')'"'' +# deps = @name.values.first +# name=::rake.gems/.specs_keyscutter +# pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil? +# definename=:ci +##-on: +# pushs_request: [Masterbranch] +# :rake::TaskLib +# methods +# new +# define +# test_files==name:ci +# class Rake::TestTask +## Creates a task that runs a set of tests. +# require "rake/test.task'@ci@travis.yml.task.new do |-v| +# t.libs << "test" +# t.test_files = FileList['test/test*.rb'] +# t.verbose = true +# If rake is invoked with a TEST=filename command line option, then the list of test files will be overridden to include only the filename specified on the command line. This provides an easy way to run just one test. +# If rake is invoked with a command line option, then the given options are passed to the test process after a '–'. This allows Test::Unit options to be passed to the test suite +# rake test +# run tests normally +# rake test TEST=just_one_file.rb +# run just one test file. +# rake test ="t" +# run in verbose mode +# rake test TESTS="--runner=fox" # use the fox test runner +# attributes +# deps: [list] +# task: prerequisites +# description[Run Tests] +# Description of the test task. (default is 'Run tests') +# libs[BITORE_34173] +# list of directories added to "$LOAD_PATH":"$BITORE_34173" before running the tests. (default is 'lib') +# loader[test] +# style of test loader to use. Options are: +# :rake – rust/rake provided tests loading script (default). +# :test=: name =rb.dist/src.index = Ruby provided test loading script. +direct=: $LOAD_PATH uses test using command-line loader. +name[test] +# name=: testtask.(default is :test) +# options[dist] +# Tests options passed to the test suite. An explicit TESTOPTS=opts on the command line will override this. (default is NONE) +# pattern[list] +# Glob pattern to match test files. (default is 'test/test*.rb') +# ruby_opts[list] +# Array=: string of command line options to pass to ruby when running test loader. +# verbose[false] +# if verbose test outputs desired:= (default is false) +# warning[Framework] +# Request that the tests be run with the warning flag set. E.g. warning=true implies “ruby -w” used to run the tests. (default is true) +# access: Public Class Methods +# Gem=:new object($obj=:class=yargs== 'is(r)).)=={ |BITORE_34173| ... } +# Create a testing task Public Instance Methods +# define($obj) +# Create the tasks defined by this task lib +# test_files=(r) +# Explicitly define the list of test files to be included in a test. list is expected to be an array of file names (a File list is acceptable). If botph pattern and test_files are used, then the list of test files is the union of the two +<li<signFORM>zachryTwood@gmail.com Zachry Tyler Wood DOB 10 15 1994 SSID *******1725<SIGNform/><li/> +{ + "scripts": { + "test": "jest", + "start": "./node_modules/.bin/node-pg-migrate up && node app.js", + "migrate": "./node_modules/.bin/node-pg-migrate" + }, + "devDependencies": { + "jest": "^24.8.0" + }, + "dependencies": { + "bitcoin-core": "^3.0.0", + "body-parser": "^1.19.0", + "cors": "^2.8.5", + "dotenv": "^8.2.0", + "express": "^4.16.4", + "node-pg-migrate": "^5.9.0", + "pg": "^8.6.0" + } +name": '((c)'":,'"'' +use": is'='==yargs(ARGS)).); / +module: env.export((r), + +'"name": '((c)'":,'"'' +'".dirname": is'='==yargs(ARGS)).)"; /'"''t.verbose{ + "scripts": { + "test": "jest", + "start": "./node_modules/.bin/node-pg-migrate up && node app.js", + "migrate": "./node_modules/.bin/node-pg-migrate" + }, + "devDependencies": { + "jest": "^24.8.0" + }, + "dependencies": { + "bitcoin-core": "^3.0.0", + "body-parser": "^1.19.0", + "cors": "^2.8.5", + "dotenv": "^8.2.0", + "express": "^4.16.4", + "node-pg-migrate": "^5.9.0", + "pg": "^8.6.0" + } +} +Andrekolodochka Patch 5 +#20155 +zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 +Conversation 0 +Commits 7 +Checks 0 +Files changed ∞ +Conversation +zakwarlord7 +@zakwarlord7 zakwarlord7 commented 27 minutes ago • +Why: +Closes [issue link]{[Skip to content +Your account has been flagged. +Because of that, your profile is hidden from the public. If you believe this is a mistake, contact support to have your account status reviewed. +https://github.com/github +/ +docs +Public +Code +Issues +106 +Pull requests +59 +Discussions +Actions +Projects +3 +Security +Insights +Jump to bottom +Andrekolodochka Patch 5 #20155 +Open +zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 +Open +Andrekolodochka Patch 5 +#20155 +zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 +Conversation 0 +Commits 7 +Checks 0 +Files changed ∞ +Conversation +zakwarlord7 +@zakwarlord7 zakwarlord7 commented 9 minutes ago +Why: +Closes [issue link] + +What's being changed (if available, include any code snippets, screenshots, or gifs): +Check off the following: +I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes). +For content changes, I have completed the self-review checklist. +Writer impact (This section is for GitHub staff members only): +This pull request impacts the contribution experience +I have added the 'writer impact' label +I have added a description and/or a video demo of the changes below (e.g. a "before and after video") +zakwarlord7 added 7 commits 23 days ago +@zakwarlord7 +BITORE +0c87d46 +@zakwarlord7 +Create BITCORE +ebe3a4b +@zakwarlord7 +bitore.sig +c3442e6 +@zakwarlord7 +Revert "bitore.sig" +2187703 +@zakwarlord7 +Biore.sig (https://github.com/zakwarlord7/docs/pull/27[)](https://github.com/github/docs/pull/20155/commits/88d9e481a768c0b12529d91e83fcc745c6a33545) +88d9e48 +@zakwarlord7 +Update index.md +4144259 +@zakwarlord7 +Update index.md +d7cd5b7 +@zakwarlord7 zakwarlord7 requested review from a team as code owners 9 minutes ago +zakwarlord7 commented 9 minutes ago +Skip to main content +GitHub Docs +Quickstart for GitHub Actions +In this article +Introduction +Creating your first workflow +Viewing your workflow results +More starter workflows +More complex examples +Next steps +Try out the features of GitHub Actions in 5 minutes or less. + +Introduction +You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. + +The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. + +Creating your first workflow +Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. + +In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." + +Copy the following YAML contents into the github-actions-demo.yml file: + +YAML +name: GitHub Actions Demo +on: [push] +jobs: +Explore-GitHub-Actions: +runs-on: ubuntu-latest +steps: + +run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." +run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" +run: echo "🔎 The name of your branch is {{ github.repository }}." +name: Check out repository code +uses: actions/checkout@v3 +run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." +run: echo "🖥️ The workflow is now ready to test your code on the runner." +name: List files in the repository +run: | +ls ${{ github.workspace }} +run: echo "🍏 This job's status is ${{ job.status }}." +Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. +Commit workflow file +Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. + +Viewing your workflow results +On GitHub.com, navigate to the main page of the repository. + +Under your repository name, click Actions. +Actions tab in the main repository navigation + +In the left sidebar, click the workflow you want to see. + +Workflow list in left sidebar + +From the list of workflow runs, click the name of the run you want to see. + +Name of workflow run + +Under Jobs , click the Explore-GitHub-Actions job. + +Locate job + +The log shows you how each of the steps was processed. Expand any of the steps to view its details. + +Example workflow results + +For example, you can see the list of files in your repository: +Example action detail + +More starter workflows +GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. + +You can browse the full list of starter workflow in the actions/starter-workflows repository. + +More complex examples +For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. + +Next steps +The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: + +Your repository can contain multiple workflows that trigger different jobs based on different events. +You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. +GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: + +"Learn GitHub Actions" for an in-depth tutorial. +Did this doc help you? + +Privacy policy +Help us make these docs great! +All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. + +Or, learn how to contribute. + +Still need help? +Ask the GitHub community +Contact support +© 2022 GitHub, Inc. +Terms +Privacy +Security +Status +Help +Contact GitHub +Pricing +Developer API +Training +Blog +About + +Quickstart for GitHub Actions - GitHub Docs + +Merge state +Add more commits by pushing to the andrekolodochka-patch-1 branch on zakwarlord7/docs. + +Review requested +Review has been requested on this pull request. It is not required to merge. +2 pending reviewers +This branch has conflicts that must be resolved +Only those with write access to this repository can merge pull requests. +Conflicting files +.github/PULL_REQUEST_TEMPLATE.md +.github/actions-scripts/create-enterprise-issue.js +.github/actions-scripts/enterprise-server-issue-templates/deprecation-issue.md +.github/actions-scripts/enterprise-server-issue-templates/release-issue.md +.github/actions-scripts/fr-add-docs-reviewers-requests.js +.github/actions-scripts/projects.js +.github/actions-scripts/ready-for-docs-review.js +.github/allowed-actions.js +.github/dependabot.yml +.github/workflows/60-days-stale-check.yml +.github/workflows/check-broken-links-github-github.yml +.github/workflows/content-changes-table-comment.yml +.github/workflows/crowdin.yml +.github/workflows/enterprise-dates.yml +.github/workflows/hubber-contribution-help.yml +.github/workflows/move-help-wanted-issues.yml +.github/workflows/openapi-decorate.yml +.github/workflows/os-ready-for-review.yml +.github/workflows/remove-unused-assets.yml +.github/workflows/repo-sync-stalls.yml +.github/workflows/repo-sync.yml +.github/workflows/staging-build-pr.yml +.github/workflows/staging-deploy-pr.yml +.github/workflows/staging-undeploy-pr.yml +.github/workflows/start-new-engineering-pr-workflow.yml +... + +Skip to main content +GitHub Docs +Quickstart for GitHub Actions +In this article +Introduction +Creating your first workflow +Viewing your workflow results +More starter workflows +More complex examples +Next steps +Try out the features of GitHub Actions in 5 minutes or less. + +Introduction +You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. + +The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. + +Creating your first workflow +Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. + +In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." + +Copy the following YAML contents into the github-actions-demo.yml file: + +YAML +name: GitHub Actions Demo +on: [push] +jobs: +Explore-GitHub-Actions: +runs-on: WindowsXP89_98/intel82/linux36_82 tar gz Zip WinRaWr.unzipped/.jar/jee.enc-module'@package.yam/API/APk.Adk sdk.S.E/jdk.J.C/Jinja-datadog.jar/jre'@sun.java.org/dl/WIZARD/install/installer/arc/code.dir/.dist'@config yml/install/unit/inityit//POST +FIinsh. +100%complete. +Don. +Response:' 403OJ=>TIERAFORMA=> SHAPEshit'"'X'"'=''=shapeSHIFT'"x'"'=''='::Push:: console.(func)==>=>>atest +steps: + +run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." +run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" +run: echo "🔎 The name of your branch is {{ github.repository }}." +name: Check out repository code +uses: actions/checkout@v3 +run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." +run: echo "🖥️ The workflow is now ready to test your code on the runner." +name: List files in the repository +run: | +ls ${{ github.workspace }} +run: echo "🍏 This job's status is ${{ job.status }}." +Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. +Commit workflow file +Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. + +Viewing your workflow results +On GitHub.com, navigate to the main page of the repository. + +Under your repository name, click Actions. +Actions tab in the main repository navigation + +In the left sidebar, click the workflow you want to see. + +Workflow list in left sidebar + +From the list of workflow runs, click the name of the run you want to see. + +Name of workflow run + +Under Jobs , click the Explore-GitHub-Actions job. + +Locate job + +The log shows you how each of the steps was processed. Expand any of the steps to view its details. + +Example workflow results + +For example, you can see the list of files in your repository: +Example action detail + +More starter workflows +GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. + +You can browse the full list of starter workflow in the actions/starter-workflows repository. + +More complex examples +For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. + +Next steps +The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: + +Your repository can contain multiple workflows that trigger different jobs based on different events. +You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. +GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: + +"Learn GitHub Actions" for an in-depth tutorial. +Did this doc help you? + +Privacy policy +Help us make these docs great! +All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. + +Or, learn how to contribute. + +Still need help? +Ask the GitHub community +Contact support +© 2022 GitHub, Inc. +Terms +Privacy +Security +Status +Help +Contact GitHub +Pricing +Developer API +Training +Blog +About + +Quickstart for GitHub Actions - GitHub Docs + +Remember, contributions to this repository should follow its contributing guidelines and code of conduct. +ProTip! Add comments to specific lines under Files changed. +Reviewers +@github/docs-localization +docs-localization +@github/docs-engineering +docs-engineering +Still in progress? +Assignees +No one assigned +Labels +None yet +Projects +None yet +Milestone +No milestone +Development +Successfully merging this pull request may close these issues. + +None yet + +Notifications +Customize +You’re receiving notifications because you’re watching this repository. +1 participant +@zakwarlord7 +Allow edits and access to secrets by maintainers +Footer +© 2022 GitHub, Inc. +Footer navigation +Terms +Privacy +Security +Status +Docs +Contact GitHub +Pricing +API +Training +Blog +About +zakwarlord7 commented now Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: ubuntu-latest steps: - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" - run: echo "🔎 The name of your branch is {{ github.repository }}." - name: Check out repository code uses: actions/checkout@v3 - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." - run: echo "🖥️ The workflow is now ready to test your code on the runner." - name: List files in the repository run: | ls ${{ github.workspace }} - run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs + +What's being changed (if available, include any code snippets, screenshots, or gifs): +Check off the following: + I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes). + For content changes, I have completed the self-review checklist. +Writer impact (This section is for GitHub staff members only): + This pull request impacts the contribution experience + I have added the 'writer impact' label + I have added a description and/or a video demo of the changes below (e.g. a "before and after video") +Skip to content +Your account has been flagged. +Because of that, your profile is hidden from the public. If you believe this is a mistake, contact support to have your account status reviewed. +https://github.com/github +/ +docs +Public +Code +Issues +106 +Pull requests +59 +Discussions +Actions +Projects +3 +Security +Insights +Jump to bottom +Andrekolodochka Patch 5 #20155 +Open +zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 +Open +Andrekolodochka Patch 5 +#20155 +zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 +Conversation 0 +Commits 7 +Checks 0 +Files changed ∞ +Conversation +zakwarlord7 +@zakwarlord7 zakwarlord7 commented 9 minutes ago +Why: +Closes [issue link] + +What's being changed (if available, include any code snippets, screenshots, or gifs): +Check off the following: +I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes). +For content changes, I have completed the self-review checklist. +Writer impact (This section is for GitHub staff members only): +This pull request impacts the contribution experience +I have added the 'writer impact' label +I have added a description and/or a video demo of the changes below (e.g. a "before and after video") +zakwarlord7 added 7 commits 23 days ago +@zakwarlord7 +BITORE +0c87d46 +@zakwarlord7 +Create BITCORE +ebe3a4b +@zakwarlord7 +bitore.sig +c3442e6 +@zakwarlord7 +Revert "bitore.sig" +2187703 +@zakwarlord7 +Biore.sig (https://github.com/zakwarlord7/docs/pull/27[)](https://github.com/github/docs/pull/20155/commits/88d9e481a768c0b12529d91e83fcc745c6a33545) +88d9e48 +@zakwarlord7 +Update index.md +4144259 +@zakwarlord7 +Update index.md +d7cd5b7 +@zakwarlord7 zakwarlord7 requested review from a team as code owners 9 minutes ago +zakwarlord7 commented 9 minutes ago +Skip to main content +GitHub Docs +Quickstart for GitHub Actions +In this article +Introduction +Creating your first workflow +Viewing your workflow results +More starter workflows +More complex examples +Next steps +Try out the features of GitHub Actions in 5 minutes or less. + +Introduction +You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. + +The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. + +Creating your first workflow +Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. + +In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." + +Copy the following YAML contents into the github-actions-demo.yml file: + +YAML +name: GitHub Actions Demo +on: [push] +jobs: +Explore-GitHub-Actions: +runs-on: ubuntu-latest +steps: + +run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." +run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" +run: echo "🔎 The name of your branch is {{ github.repository }}." +name: Check out repository code +uses: actions/checkout@v3 +run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." +run: echo "🖥️ The workflow is now ready to test your code on the runner." +name: List files in the repository +run: | +ls ${{ github.workspace }} +run: echo "🍏 This job's status is ${{ job.status }}." +Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. +Commit workflow file +Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. + +Viewing your workflow results +On GitHub.com, navigate to the main page of the repository. + +Under your repository name, click Actions. +Actions tab in the main repository navigation + +In the left sidebar, click the workflow you want to see. + +Workflow list in left sidebar + +From the list of workflow runs, click the name of the run you want to see. + +Name of workflow run + +Under Jobs , click the Explore-GitHub-Actions job. + +Locate job + +The log shows you how each of the steps was processed. Expand any of the steps to view its details. + +Example workflow results + +For example, you can see the list of files in your repository: +Example action detail + +More starter workflows +GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. + +You can browse the full list of starter workflow in the actions/starter-workflows repository. + +More complex examples +For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. + +Next steps +The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: + +Your repository can contain multiple workflows that trigger different jobs based on different events. +You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. +GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: + +"Learn GitHub Actions" for an in-depth tutorial. +Did this doc help you? + +Privacy policy +Help us make these docs great! +All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. + +Or, learn how to contribute. + +Still need help? +Ask the GitHub community +Contact support +© 2022 GitHub, Inc. +Terms +Privacy +Security +Status +Help +Contact GitHub +Pricing +Developer API +Training +Blog +About + +Quickstart for GitHub Actions - GitHub Docs + +Merge state +Add more commits by pushing to the andrekolodochka-patch-1 branch on zakwarlord7/docs. + +Review requested +Review has been requested on this pull request. It is not required to merge. +2 pending reviewers +This branch has conflicts that must be resolved +Only those with write access to this repository can merge pull requests. +Conflicting files +.github/PULL_REQUEST_TEMPLATE.md +.github/actions-scripts/create-enterprise-issue.js +.github/actions-scripts/enterprise-server-issue-templates/deprecation-issue.md +.github/actions-scripts/enterprise-server-issue-templates/release-issue.md +.github/actions-scripts/fr-add-docs-reviewers-requests.js +.github/actions-scripts/projects.js +.github/actions-scripts/ready-for-docs-review.js +.github/allowed-actions.js +.github/dependabot.yml +.github/workflows/60-days-stale-check.yml +.github/workflows/check-broken-links-github-github.yml +.github/workflows/content-changes-table-comment.yml +.github/workflows/crowdin.yml +.github/workflows/enterprise-dates.yml +.github/workflows/hubber-contribution-help.yml +.github/workflows/move-help-wanted-issues.yml +.github/workflows/openapi-decorate.yml +.github/workflows/os-ready-for-review.yml +.github/workflows/remove-unused-assets.yml +.github/workflows/repo-sync-stalls.yml +.github/workflows/repo-sync.yml +.github/workflows/staging-build-pr.yml +.github/workflows/staging-deploy-pr.yml +.github/workflows/staging-undeploy-pr.yml +.github/workflows/start-new-engineering-pr-workflow.yml +... + +Skip to main content +GitHub Docs +Quickstart for GitHub Actions +In this article +Introduction +Creating your first workflow +Viewing your workflow results +More starter workflows +More complex examples +Next steps +Try out the features of GitHub Actions in 5 minutes or less. + +Introduction +You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. + +The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. + +Creating your first workflow +Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. + +In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." + +Copy the following YAML contents into the github-actions-demo.yml file: + +YAML +name: GitHub Actions Demo +on: [push] +jobs: +Explore-GitHub-Actions: +runs-on: WindowsXP89_98/intel82/linux36_82 tar gz Zip WinRaWr.unzipped/.jar/jee.enc-module'@package.yam/API/APk.Adk sdk.S.E/jdk.J.C/Jinja-datadog.jar/jre'@sun.java.org/dl/WIZARD/install/installer/arc/code.dir/.dist'@config yml/install/unit/inityit//POST +FIinsh. +100%complete. +Don. +Response:' 403OJ=>TIERAFORMA=> SHAPEshit'"'X'"'=''=shapeSHIFT'"x'"'=''='::Push:: console.(func)==>=>>atest +steps: + +run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." +run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" +run: echo "🔎 The name of your branch is {{ github.repository }}." +name: Check out repository code +uses: actions/checkout@v3 +run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." +run: echo "🖥️ The workflow is now ready to test your code on the runner." +name: List files in the repository +run: | +ls ${{ github.workspace }} +run: echo "🍏 This job's status is ${{ job.status }}." +Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. +Commit workflow file +Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. + +Viewing your workflow results +On GitHub.com, navigate to the main page of the repository. + +Under your repository name, click Actions. +Actions tab in the main repository navigation + +In the left sidebar, click the workflow you want to see. + +Workflow list in left sidebar + +From the list of workflow runs, click the name of the run you want to see. + +Name of workflow run + +Under Jobs , click the Explore-GitHub-Actions job. + +Locate job + +The log shows you how each of the steps was processed. Expand any of the steps to view its details. + +Example workflow results + +For example, you can see the list of files in your repository: +Example action detail + +More starter workflows +GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. + +You can browse the full list of starter workflow in the actions/starter-workflows repository. + +More complex examples +For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. + +Next steps +The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: + +Your repository can contain multiple workflows that trigger different jobs based on different events. +You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. +GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: + +"Learn GitHub Actions" for an in-depth tutorial. +Did this doc help you? + +Privacy policy +Help us make these docs great! +All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. + +Or, learn how to contribute. + +Still need help? +Ask the GitHub community +Contact support +© 2022 GitHub, Inc. +Terms +Privacy +Security +Status +Help +Contact GitHub +Pricing +Developer API +Training +Blog +About + +Quickstart for GitHub Actions - GitHub Docs + +Remember, contributions to this repository should follow its contributing guidelines and code of conduct. +ProTip! Add comments to specific lines under Files changed. +Reviewers +@github/docs-localization +docs-localization +@github/docs-engineering +docs-engineering +Still in progress? +Assignees +No one assigned +Labels +None yet +Projects +None yet +Milestone +No milestone +Development +Successfully merging this pull request may close these issues. + +None yet + +Notifications +Customize +You’re receiving notifications because you’re watching this repository. +1 participant +@zakwarlord7 +Allow edits and access to secrets by maintainers +Footer +© 2022 GitHub, Inc. +Footer navigation +Terms +Privacy +Security +Status +Docs +Contact GitHub +Pricing +API +Training +Blog +About +zakwarlord7 commented now Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: ubuntu-latest steps: - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}." - name: Check out repository code uses: actions/checkout@v3 - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." - run: echo "🖥️ The workflow is now ready to test your code on the runner." - name: List files in the repository run: | ls ${{ github.workspace }} - run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs + +zakwarlord7 added 7 commits 23 days ago +@zakwarlord7 +BITORE +0c87d46 +@zakwarlord7 +Create BITCORE +ebe3a4b +@zakwarlord7 +bitore.sig +c3442e6 +@zakwarlord7 +Revert "bitore.sig" +2187703 +@zakwarlord7 +Biore.sig (#27) +88d9e48 +@zakwarlord7 +Update index.md +4144259 +@zakwarlord7 +Update index.md +d7cd5b7 +@zakwarlord7 zakwarlord7 requested review from a team as code owners 27 minutes ago +zakwarlord7 commented 27 minutes ago +Skip to main content +GitHub Docs +Quickstart for GitHub Actions +In this article +Introduction +Creating your first workflow +Viewing your workflow results +More starter workflows +More complex examples +Next steps +Try out the features of GitHub Actions in 5 minutes or less. + +Introduction +You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. + +The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. + +Creating your first workflow +Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. + +In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." + +Copy the following YAML contents into the github-actions-demo.yml file: + +YAML +name: GitHub Actions Demo +on: [push] +jobs: +Explore-GitHub-Actions: +runs-on: ubuntu-latest +steps: +- run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." +- run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" +- run: echo "🔎 The name of your branch is {{ github.repository }}." +- name: Check out repository code +uses: actions/checkout@v3 +- run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." +- run: echo "🖥️ The workflow is now ready to test your code on the runner." +- name: List files in the repository +run: | +ls ${{ github.workspace }} +- run: echo "🍏 This job's status is ${{ job.status }}." +Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. +Commit workflow file + +Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. + +Viewing your workflow results +On GitHub.com, navigate to the main page of the repository. + +Under your repository name, click Actions. +Actions tab in the main repository navigation + +In the left sidebar, click the workflow you want to see. + +Workflow list in left sidebar + +From the list of workflow runs, click the name of the run you want to see. + +Name of workflow run + +Under Jobs , click the Explore-GitHub-Actions job. + +Locate job + +The log shows you how each of the steps was processed. Expand any of the steps to view its details. + +Example workflow results + +For example, you can see the list of files in your repository: +Example action detail + +More starter workflows +GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. + +You can browse the full list of starter workflow in the actions/starter-workflows repository. + +More complex examples +For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. + +Next steps +The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: + +Your repository can contain multiple workflows that trigger different jobs based on different events. +You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. +GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: + +"Learn GitHub Actions" for an in-depth tutorial. +Did this doc help you? + +Privacy policy +Help us make these docs great! +All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. + +Or, learn how to contribute. + +Still need help? +Ask the GitHub community +Contact support +© 2022 GitHub, Inc. +Terms +Privacy +Security +Status +Help +Contact GitHub +Pricing +Developer API +Training +Blog +About + +Quickstart for GitHub Actions - GitHub Docs + +zakwarlord7 commented 17 minutes ago +Skip to main content +GitHub Docs +Quickstart for GitHub Actions +In this article +Introduction +Creating your first workflow +Viewing your workflow results +More starter workflows +More complex examples +Next steps +Try out the features of GitHub Actions in 5 minutes or less. + +Introduction +You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. + +The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. + +Creating your first workflow +Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. + +In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." + +Copy the following YAML contents into the github-actions-demo.yml file: + +YAML +name: GitHub Actions Demo +on: [push] +jobs: +Explore-GitHub-Actions: +runs-on: WindowsXP89_98/intel82/linux36_82 tar gz Zip WinRaWr.unzipped/.jar/jee.enc-module'@package.yam/API/APk.Adk sdk.S.E/jdk.J.C/Jinja-datadog.jar/jre'@sun.java.org/dl/WIZARD/install/installer/arc/code.dir/.dist'@config yml/install/unit/inityit//POST +FIinsh. +100%complete. +Don. +Response:' 403OJ=>TIERAFORMA=> SHAPEshit'"'X'"'=''=shapeSHIFT'"x'"'=''='::Push:: console.(func)==>=>>atest +steps: +- run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." +- run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" +- run: echo "🔎 The name of your branch is {{ github.repository }}." +- name: Check out repository code +uses: actions/checkout@v3 +- run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." +- run: echo "🖥️ The workflow is now ready to test your code on the runner." +- name: List files in the repository +run: | +ls ${{ github.workspace }} +- run: echo "🍏 This job's status is ${{ job.status }}." +Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. +Commit workflow file + +Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. + +Viewing your workflow results +On GitHub.com, navigate to the main page of the repository. + +Under your repository name, click Actions. +Actions tab in the main repository navigation + +In the left sidebar, click the workflow you want to see. + +Workflow list in left sidebar + +From the list of workflow runs, click the name of the run you want to see. + +Name of workflow run + +Under Jobs , click the Explore-GitHub-Actions job. + +Locate job + +The log shows you how each of the steps was processed. Expand any of the steps to view its details. + +Example workflow results + +For example, you can see the list of files in your repository: +Example action detail + +More starter workflows +GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. + +You can browse the full list of starter workflow in the actions/starter-workflows repository. + +More complex examples +For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. + +Next steps +The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: + +Your repository can contain multiple workflows that trigger different jobs based on different events. +You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. +GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: + +"Learn GitHub Actions" for an in-depth tutorial. +Did this doc help you? + +Privacy policy +Help us make these docs great! +All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. + +Or, learn how to contribute. + +Still need help? +Ask the GitHub community +Contact support +© 2022 GitHub, Inc. +Terms +Privacy +Security +Status +Help +Contact GitHub +Pricing +Developer API +Training +Blog +About + +Quickstart for GitHub Actions - GitHub Docs + +zakwarlord7 commented 13 minutes ago +-' '[22/15']'"'' + +zakwarlord7 commented 11 minutes ago +#18736 = # CORRECTED - [22/8] + +[] -, +zakwarlord7 commented 6 minutes ago • +Recordatorio: tiene un formato de pago no pagadoimage: "ruby:2.7" before_script: - ruby -v # Print out ruby version for debugging - bundle install - gem install rspec - mkdir ~/.gem || true - touch ~/.gem/credentials || true - url_hocurl -v -X POST https://api-m.sandbox.paypal.com/v2/checkout/orders +-H "Content-Type: application/json" +-H "Authorization: Bearer " +-d '{ +"intent": "CAPTURE", +"Value": '"amount '"' +"amount": '"'[VOLUME']'"' +"currency_code": "USD("DOLLARS)'"':;','' , +"value": "22677000000000"]'"':'"DOLLARS](USD).Zip installation-on:'" Zip/.WinRaWr.unzipped/.jar/jee.enc-module'@package.yam/API/APk.Adk/Apk.sdk.S.E/jre.J.C'@java.sun.org/WIZARD/s4c.disrlt/code dir'@main/TREE/base/Trunk base/main ranch/trunk/paradise/bitore.sig/BIOTURR/BITOTE::RUNS: +NOW: FORM: sign/tests/travis'@.github.com/GitHub/doc/javascript/WORKSFLOW/dispatch/repositoeies:'@mijoejoejoejoe/mojoejoejoejoe/Powerpuff girls/Powerpuff girls/README.md/README me/Contributing.md/Read.md + +Merge state +Add more commits by pushing to the andrekolodochka-patch-1 branch on zakwarlord7/docs. + +Review requested +Review has been requested on this pull request. It is not required to merge. +2 pending reviewers +This branch has conflicts that must be resolved +Only those with write access to this repository can merge pull requests. +Conflicting files +.github/PULL_REQUEST_TEMPLATE.md +.github/actions-scripts/create-enterprise-issue.js +.github/actions-scripts/enterprise-server-issue-templates/deprecation-issue.md +.github/actions-scripts/enterprise-server-issue-templates/release-issue.md +.github/actions-scripts/fr-add-docs-reviewers-requests.js +.github/actions-scripts/projects.js +.github/actions-scripts/ready-for-docs-review.js +.github/allowed-actions.js +.github/dependabot.yml +.github/workflows/60-days-stale-check.yml +.github/workflows/check-broken-links-github-github.yml +.github/workflows/content-changes-table-comment.yml +.github/workflows/crowdin.yml +.github/workflows/enterprise-dates.yml +.github/workflows/hubber-contribution-help.yml +.github/workflows/move-help-wanted-issues.yml +.github/workflows/openapi-decorate.yml +.github/workflows/os-ready-for-review.yml +.github/workflows/remove-unused-assets.yml +.github/workflows/repo-sync-stalls.yml +.github/workflows/repo-sync.yml +.github/workflows/staging-build-pr.yml +.github/workflows/staging-deploy-pr.yml +.github/workflows/staging-undeploy-pr.yml +.github/workflows/start-new-engineering-pr-workflow.yml +pubDate> + +Patch 5 +#20157 +zakwarlord7 wants to merge 7 commits into github:andrekolodochka-patch-1 from zakwarlord7:andrekolodochka-patch-1 +Conversation 0 +Commits 7 +Checks 0 +Files changed ∞ +Conversation +zakwarlord7 +@zakwarlord7 zakwarlord7 commented 1 minute ago +Why: +Closes [issue link] + +What's being changed (if available, include any code snippets, screenshots, or gifs): +Check off the following: + I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes). + For content changes, I have completed the self-review checklist. +Writer impact (This section is for GitHub staff members only): + This pull request impacts the contribution experience + I have added the 'writer impact' label + I have added a description and/or a video demo of the changes below (e.g. a "before and after video") +zakwarlord7 added 7 commits 23 days ago +"000000-00000000000000000-0000000000000000-000000_Opening_Balance_Equity					Ending Balance: $25763711860000"										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +							<\feed/><\live/>			 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +										 +						<\feed\>'@.rss.ach.xvlslmnxsvnx.app.rss=:/>00650/00000000000000000/000000<\live\>				@zakwarlord7 +BITORE +0c87d46 +@zakwarlord7 +Create BITCORE +ebe3a4b +@zakwarlord7 +bitore.sig +c3442e6 +@zakwarlord7 +Revert "bitore.sig" +2187703 +@zakwarlord7 +Biore.sig (#27) +88d9e48 +@zakwarlord7 +Update index.md +4144259 +@zakwarlord7 +Update index.md +d7cd5b7 +@zakwarlord7 zakwarlord7 requested review from a team as code owners 1 minute ago +zakwarlord7 commented now +e-mail : +zachryiixixiiwood@gmail.com +Name : +Zachry Tyler Wood +Bank : +PNC BANK NA +ACCOUNT : +4720416547 +R/T : +071921891 +e- mail : +josephabanksfederalreserve@gmail.com + <guid isPermaLink="false">https://docs.aws.amazon.com/location/latest/developerguide/#Autocomplete_for_place_indexes_2021-12-06</guid> + </item> + <item> + <title>New Amplify tutorial for using maps</title> + <link>https://docs.aws.amazon.com/location/latest/developerguide/doc-history.html</link> + <description>A new tutorial is available showing how to use AWS Amplify to display maps in a + web application. The tutorial is available at &lt;a href="https://docs.aws.amazon.com/location/latest/developerguide/tutorial-map-amplify.html"&gt;Using the Amplify library with Amazon Location Service&lt;/a&gt;.</description>":,** On::Runs: Runs:Run: Run-on: -on: Echo: hello-🌍!-🐛-#-fix/731/, "name": "my-electron-app", "version": "1.0.0", "description": "Hello World!", const: "token"'' token: "((c)(r))"'' [Volume].]: "[12753750].00]"'' ITEM_ID: "BITORE_34173"'' "name": "my-electron-app", "version": "0.0.0", "description": "Hello World!'@https://git.io/codeql-language-support# For most projects, this workflow file will not need changing; you simply need - # to commit it to your repository. - # CodeQL languages. # name: "CodeQL" '#' This workflow uses actions that are not certified by GitHub.'' '#' They are provided by a third-party and are governed by'' '#' separate terms of service, privacy policy, and support'' '#' documentation. '#' <li>zachryiixixiiwood@gmail.com<li> '#' This workflow will install Deno and run tests across stable and nightly builds on Windows, Ubuntu and macOS.'' '#' For more information see: https://github.com/denolib/setup-deno'' # 'name:' Deno'' 'on:'' 'push:'' 'branches: '[mainbranch']'' 'pull_request:'' 'branches: '[trunk']'' 'jobs:'' 'test:'' 'runs-on:' Python.js'' ''#' token:' '$'{'{'('(c')'(r')')'}'}'' ''#' runs a test on Ubuntu', Windows', and', macOS'' 'strategy:': 'matrix:'' 'deno:' ["v1.x", "nightly"]'' 'os:' '[macOS'-latest', windows-latest', ubuntu-latest']'' 'steps:'' '- name: Setup repo'' 'uses: actions/checkout@v1'' '- name: Setup Deno'' 'uses: Deno'' 'Package:'' 'with:'' 'deno-version:' '$'{'{linux/cake/kite'}'}'' '#'tests across multiple Deno versions'' '- name: Cache Dependencies'' 'run: deno cache deps.ts'' '- name: Run Tests'' 'run: deno test'' '::Build:' sevendre'' on: push: branches: [ master ] pull_request: # The branches below must be a subset of the branches above branches: [ master ] schedule: - cron: '29 8 * * 5' jobs: analyze: name: Analyze runs-on: ubuntu-latest permissions: actions: read contents: read security-events: write strategy: language: [ 'javascript' ] # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ] # Learn more about CodeQL language support at https://git.io/codeql-language-support steps: - name: Checkout repository uses: actions/checkout@v2 # Initializes the CodeQL tools for scanning. - name: Initialize CodeQL uses: github/codeql-action/init@v1 with: languages: ${{ matrix.language }} # If you wish to specify custom queries, you can do so here or in a config file. # By default, queries listed here will override any specified in a config file. # Prefix the list here with "+" to use these queries and those in the config file. # queries: ./path/to/local/query, your-org/your-repo/queries@main # Autobuild attempts to build any compiled languages (C/C++, C#, or Java). # If this step fails, then you should remove it and run the build manually (see below) - name: Autobuild uses: github/codeql-action/autobuild@v1 # ℹ️ Command-line programs to run using the OS shell. # 📚 https://git.io/JvXDl # ✏️ If the Autobuild fails above, remove it and uncomment the following three lines # and modify them (or add more) to build your code if your project # uses a compiled language #- run: | # make bootstrap # make release - name: Perform CodeQL Analysis uses: github/codeql-action/analyze@v1 version:1:on: ownership:Zachry T WooD III:on: name:docs-internal:on: long_name:GitHub Help Docs:on: kind:heroku:on: repo:https://github.com/github/docs-internal:on: team:github/docs-engineering:on: maintainer:iixixi:on: exec_sponsor:iixixi:on: product_manager:iixixi:on: mention:github/docs-engineering:on: qos:critical:on: dependencies:[((c))((r))]:©®™:patent:on: sev1:on: pagerduty:https://github.pagerduty.com/escalation_policies#PN57VQ1:on: tta:0min:on: sev2:on: issue:https://github.com/github/docs-internal/issues:on: tta:5:business days:on: sev3:on: slack:docs:engineering:on: Return:run © 2021 GitHub, Inc. Terms Privacy Security Status Docs Contact GitHub-module.exports{.env= 12753750.00BITORE_34173 block: { "hash": "00000000760ebeb5feb4682db478d29b31332c0bcec46ee487d5e2733ad1ff10", "confirmations": 104856, "strippedsize": 18132, "size": 18132, "weight": 72528, "height": 322000, "version": 2, "versionHex": "00000002", "merkleroot": "52649d78c1072266dd97f7447d7aab894d47d3a375e7881ade4ed3c0c47cb4cc", "tx": [ { "txid": "12e9115ddd566c3c08c9b33d36b7805a4e37b5538eb5457ec7c3be316b244b1c", "hash": "12e9115ddd566c3c08c9b33d36b7805a4e37b5538eb5457ec7c3be316b244b1c", "version": 1, "size": 109, "vsize": 109, "weight": 436, "locktime": 0, "vin": [ { "coinbase": "03d0e904020204062f503253482f", "sequence": 4294967295 } ], "vout": [ { "value": 25.0039411, "n": 0, "scriptPubKey": { "asm": "03f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688 OP_CHECKSIG", "hex": "2103f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688ac", "type": "pubkey" } } ], "hex": "01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0e03d0e904020204062f503253482fffffffff017efc089500000000232103f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688ac00000000" }, {"login": "octcokit", "id":"moejojojojo'@pradice/bitore.sig/ pkg.js" require' require 'json' post '/payload' do :Push:: - OPEN.JSON.parse(request.body.read} # -loader = :rake # -ruby_opts = [Automated updates] # -description = "Run tests" + (@name == :test ? "" : " for #{@name}") # -deps = [list] # -if?=name:(Hash.#:"','") # -deps = @name.values.first # -name = @name.keys.first # -pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil? # -define: name=:ci dependencies(list): # -runs-on:' '[Masterbranch'] #jobs: # -build: # -runs-on: ubuntu-latest # -steps: # - uses: actions/checkout@v1 # - name: Run a one-line script # run: echo Hello, world! # - name: Run a multi-line script # run=:name: echo: hello.World! # echo test, and deploy your project'@'#'!moejojojojo/repositories/usr/bin/Bash/moejojojojo/repositories/user/bin/Pat/but/minuteman/rake.i/rust.u/pom.XML/Rakefil.IU/package.json/pkg.yml/package.yam/pkg.js/Runestone.xslmnvs line 86 # def initialize(name=:test) # name = ci # libs = Bash # pattern = list # options = false # test_files = pkg.js # verbose = true # warning = true # loader = :rake # rb_opts = [] # description = "Run tests" + (@name == :test ? "" : " for #{@name}") # deps = [] # if @name.is_a'?','"':'"'('"'#'"'.Hash':'"')'"'' # deps = @name.values.first # name=::rake.gems/.specs_keyscutter # pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil? # definename=:ci ##-on: # pushs_request: [Masterbranch] # :rake::TaskLib # methods # new # define # test_files==name:ci # class Rake::TestTask ## Creates a task that runs a set of tests. # require "rake/test.task'@ci@travis.yml.task.new do |-v| # t.libs << "test" # t.test_files = FileList['test/test*.rb'] # t.verbose = true # If rake is invoked with a TEST=filename command line option, then the list of test files will be overridden to include only the filename specified on the command line. This provides an easy way to run just one test. # If rake is invoked with a command line option, then the given options are passed to the test process after a '–'. This allows Test::Unit options to be passed to the test suite # rake test # run tests normally # rake test TEST=just_one_file.rb # run just one test file. # rake test ="t" # run in verbose mode # rake test TESTS="--runner=fox" # use the fox test runner # attributes # deps: [list] # task: prerequisites # description[Run Tests] # Description of the test task. (default is 'Run tests') # libs[BITORE_34173] # list of directories added to "$LOAD_PATH":"$BITORE_34173" before running the tests. (default is 'lib') # loader[test] # style of test loader to use. Options are: # :rake – rust/rake provided tests loading script (default). # :test=: name =rb.dist/src.index = Ruby provided test loading script. direct=: $LOAD_PATH uses test using command-line loader. name[test] # name=: testtask.(default is :test) # options[dist] # Tests options passed to the test suite. An explicit TESTOPTS=opts on the command line will override this. (default is NONE) # pattern[list] # Glob pattern to match test files. (default is 'test/test*.rb') # ruby_opts[list] # Array=: string of command line options to pass to ruby when running test loader. # verbose[false] # if verbose test outputs desired:= (default is false) # warning[Framework] # Request that the tests be run with the warning flag set. E.g. warning=true implies “ruby -w” used to run the tests. (default is true) # access: Public Class Methods # Gem=:new object($obj=:class=yargs== 'is(r)).)=={ |BITORE_34173| ... } # Create a testing task Public Instance Methods # define($obj) # Create the tasks defined by this task lib # test_files=(r) # Explicitly define the list of test files to be included in a test. list is expected to be an array of file names (a File list is acceptable). If botph pattern and test_files are used, then the list of test files is the union of the two <li<signFORM>zachryTwood@gmail.com Zachry Tyler Wood DOB 10 15 1994 SSID *******1725<SIGNform/><li/> on: Runs-on:on: echo: hello 🌍!-🐛-fix#731, "name": "my-electron-app", "version": "1.0.0", "description": "Hello World!", const: "token"'' token: "((c)(r))"'' [Volume].]: "[12753750].00]"'' ITEM_ID: "BITORE_34173"'' "name": "my-electron-app", "version": "0.0.0", "description": "Hello World!'@https://git.io/codeql-language-support# For most projects, this workflow file will not need changing; you simply need - # to commit it to your repository. - # CodeQL languages. # name: "CodeQL" on: push: branches: [ master ] pull_request: # The branches below must be a subset of the branches above branches: [ master ] schedule: - cron: '29 8 * * 5' jobs: analyze: name: Analyze runs-on: ubuntu-latest permissions: actions: read contents: read security-events: write strategy: language: [ 'javascript' ] # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ] # Learn more about CodeQL language support at https://git.io/codeql-language-support steps: - name: Checkout repository uses: actions/checkout@v2 # Initializes the CodeQL tools for scanning. - name: Initialize CodeQL uses: github/codeql-action/init@v1 with: languages: ${{ matrix.language }} # If you wish to specify custom queries, you can do so here or in a config file. # By default, queries listed here will override any specified in a config file. # Prefix the list here with "+" to use these queries and those in the config file. # queries: ./path/to/local/query, your-org/your-repo/queries@main # Autobuild attempts to build any compiled languages (C/C++, C#, or Java). # If this step fails, then you should remove it and run the build manually (see below) - name: Autobuild uses: github/codeql-action/autobuild@v1 # ℹ️ Command-line programs to run using the OS shell. # 📚 https://git.io/JvXDl # ✏️ If the Autobuild fails above, remove it and uncomment the following three lines # and modify them (or add more) to build your code if your project # uses a compiled language #- run: | # make bootstrap # make release - name: Perform CodeQL Analysis uses: github/codeql-action/analyze@v1 version:1:on: ownership:Zachry T WooD III:on: name:docs-internal:on: long_name:GitHub Help Docs:on: kind:heroku:on: repo:https://github.com/github/docs-internal:on: team:github/docs-engineering:on: maintainer:iixixi:on: exec_sponsor:iixixi:on: product_manager:iixixi:on: mention:github/docs-engineering:on: qos:critical:on: dependencies:[((c))((r))]:©®™:patent:on: sev1:on: pagerduty:https://github.pagerduty.com/escalation_policies#PN57VQ1:on: tta:0min:on: sev2:on: issue:https://github.com/github/docs-internal/issues:on: tta:5:business days:on: sev3:on: slack:docs:engineering:on: Return:run © 2021 GitHub, Inc. Terms Privacy Security Status Docs Contact GitHub-module.exports{.env= 12753750.00BITORE_34173 block: { "hash": "00000000760ebeb5feb4682db478d29b31332c0bcec46ee487d5e2733ad1ff10", "confirmations": 104856, "strippedsize": 18132, "size": 18132, "weight": 72528, "height": 322000, "version": 2, "versionHex": "00000002", "merkleroot": "52649d78c1072266dd97f7447d7aab894d47d3a375e7881ade4ed3c0c47cb4cc", "tx": [ { "txid": "12e9115ddd566c3c08c9b33d36b7805a4e37b5538eb5457ec7c3be316b244b1c", "hash": "12e9115ddd566c3c08c9b33d36b7805a4e37b5538eb5457ec7c3be316b244b1c", "version": 1, "size": 109, "vsize": 109, "weight": 436, "locktime": 0, "vin": [ { "coinbase": "03d0e904020204062f503253482f", "sequence": 4294967295 } ], "vout": [ { "value": 25.0039411, "n": 0, "scriptPubKey": { "asm": "03f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688 OP_CHECKSIG", "hex": "2103f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688ac", "type": "pubkey" } } ], "hex": "01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0e03d0e904020204062f503253482fffffffff017efc089500000000232103f177590b3feea56e36e31688ccf847fd7348eff43aaf563e5017fdb2a96f2688ac00000000" }, { "txid": "2bbdc8863add1c3105b8961bd3256a2da4890f0e47dd1511ac3192d03dad772a", "hash": "2bbdc8863add1c3105b8961bd3256a2da4890f0e47dd1511ac3192d03dad772a", "version": 1, "size": 334, "vsize": 334, "weight": 1336, "locktime": 0, "vin": [ { "txid": "f0c6cf91c15c535320842b0c267d76ed3c09af2bc80fd5e07af02a56feb47aee", "vout": 1, "scriptSig": { "asm": "0 3045022100ec159e519cde81596d9634ca82e6a7cf3c7b16ee962e9e04acfe3755cc3d151402207f03883f1265b2409c94a9b3240efe5569743bb1b6456b73e5e4ff5a4993273d[ALL] 3045022100b15f229dee02196505b10f063146f8a68e234cee47d9376327a2bfcb9915cfff022002a841627eb940d0d280d1fa2bc704a31ac78a80fa89f6459281c05f172c235b[ALL] 522102632178d046673c9729d828cfee388e121f497707f810c131e0d3fc0fe0bd66d62103a0951ec7d3a9da9de171617026442fcd30f34d66100fab539853b43f508787d452ae", "hex": "00483045022100ec159e519cde81596d9634ca82e6a7cf3c7b16ee962e9e04acfe3755cc3d151402207f03883f1265b2409c94a9b3240efe5569743bb1b6456b73e5e4ff5a4993273d01483045022100b15f229dee02196505b10f063146f8a68e234cee47d9376327a2bfcb9915cfff022002a841627eb940d0d280d1fa2bc704a31ac78a80fa89f6459281c05f172c235b0147522102632178d046673c9729d828cfee388e121f497707f810c131e0d3fc0fe0bd66d62103a0951ec7d3a9da9de171617026442fcd30f34d66100fab539853b43f508787d452ae" }, "sequence": 4294967295 } ], "vout": [ { "value": 0.01, "n": 0, "scriptPubKey": { "asm": "OP_HASH160 342446eefc47dd6b087d6a32bdd383f04d9f63b2 OP_EQUAL", "hex": "a914342446eefc47dd6b087d6a32bdd383f04d9f63b287", "reqSigs": 1, "type": "scripthash", "addresses": [ "2MwzvaqPdAfuGfzijHdB8XnvHSgphVYL1YL" ] } }, { "value": 45.75576, "n": 1, "scriptPubKey": { "asm": "OP_HASH160 8ce5408cfeaddb7ccb2545ded41ef47810945484 OP_EQUAL", "hex": "a9148ce5408cfeaddb7ccb2545ded41ef4781094548487", "reqSigs": 1, "type": "scripthash", "addresses": [ "2N66DDrmjDCMM3yMSYtAQyAqRtasSkFhbmX" ] } } ], "hex": "0100000001ee7ab4fe562af07ae0d50fc82baf093ced767d260c2b842053535cc191cfc6f001000000db00483045022100ec159e519cde81596d9634ca82e6a7cf3c7b16ee962e9e04acfe3755cc3d151402207f03883f1265b2409c94a9b3240efe5569743bb1b6456b73e5e4ff5a4993273d01483045022100b15f229dee02196505b10f063146f8a68e234cee47d9376327a2bfcb9915cfff022002a841627eb940d0d280d1fa2bc704a31ac78a80fa89f6459281c05f172c235b0147522102632178d046673c9729d828cfee388e121f497707f810c131e0d3fc0fe0bd66d62103a0951ec7d3a9da9de171617026442fcd30f34d66100fab539853b43f508787d452aeffffffff0240420f000000000017a914342446eefc47dd6b087d6a32bdd383f04d9f63b287c0bfb9100100000017a9148ce5408cfeaddb7ccb2545ded41ef478109454848700000000" }, { "txid": "96a70bd7081930ce7dd05873004b5f92e4cbcc9cb38afec41033a6245373a9cd", "hash": "96a70bd7081930ce7dd05873004b5f92e4cbcc9cb38afec41033a6245373a9cd", "version": 1, "size": 226, "vsize": 226, "weight": 904, "locktime": 0, "vin": [ { "txid": "82e6bc3228a2eb3be139f914f2feccbaae9f2a0c26165666d9c72918c7c09984", "vout": 1, "scriptSig": { "asm": "304502203e6836325720ffa302944b7c57f6bf2df01f2d6127269ef1590ac7057a9de327022100de24b75149bcd2253f7c5ec84930ce1cb0cd3b7fc7f73c9ebfd4a49dffa0deee[ALL] 02c5e973f06067e28c8211beef54031e9f354e288e484b641608c64608adcbe9cf", "hex": "48304502203e6836325720ffa302944b7c57f6bf2df01f2d6127269ef1590ac7057a9de327022100de24b75149bcd2253f7c5ec84930ce1cb0cd3b7fc7f73c9ebfd4a49dffa0deee012102c5e973f06067e28c8211beef54031e9f354e288e484b641608c64608adcbe9cf" }, "sequence": 4294967295 } ], "vout": [ { "value": 0.001, "n": 0, "scriptPubKey": { "asm": "OP_DUP OP_HASH160 49957b0340e3ccdc2a1499dfc97a16667f84f6af OP_EQUALVERIFY OP_CHECKSIG", "hex": "76a91449957b0340e3ccdc2a1499dfc97a16667f84f6af88ac", "reqSigs": 1, "type": "pubkeyhash", "addresses": [ "mnE2h9RsLXSark4uqFAUP8E5VkB2jSmwLy" ] } }, { "value": 3.99363616, "n": 1, "scriptPubKey": { "asm": "OP_DUP OP_HASH160 fc484ec72d24140f24db5ddcaa022d437e3e1afa OP_EQUALVERIFY OP_CHECKSIG", "hex": "76a914fc484ec72d24140f24db5ddcaa022d437e3e1afa88ac", "reqSigs": 1, "type": "pubkeyhash", "addresses": [ "n4WuCRZJxt8DoYyraUQm54kTzscL3ZTpEc" ] } } ], "hex": "01000000018499c0c71829c7d9665616260c2a9faebaccfef214f939e13beba22832bce682010000006b48304502203e6836325720ffa302944b7c57f6bf2df01f2d6127269ef1590ac7057a9de327022100de24b75149bcd2253f7c5ec84930ce1cb0cd3b7fc7f73c9ebfd4a49dffa0deee012102c5e973f06067e28c8211beef54031e9f354e288e484b641608c64608adcbe9cfffffffff02a0860100000000001976a91449957b0340e3ccdc2a1499dfc97a16667f84f6af88ac20cecd17000000001976a914fc484ec72d24140f24db5ddcaa022d437e3e1afa88ac00000000" }, { "txid": "e7c5d2c0376414f863924780d75f6465c4cdf442e766e84bac29d4f05c08dcf5", "hash": "e7c5d2c0376414f863924780d75f6465c4cdf442e766e84bac29d4f05c08dcf5", "version": 1, "size": 258, "vsize": 258, "weight": 1032, "locktime": 0, "vin": [ { "txid": "be79951db9d64635f00a742d4314bbd6ab4ad4cbf03e29a398b266a2c2bc09ce", "vout": 1, "scriptSig": { "asm": "3045022100e410093db9a3f086cb0b92aab47167a01579aac428e5a29f7bbd706afd5103c3022008ba7ad0183896e3209a10a86b47495cacc43b76504cf2e2f1e0b3416d04b0fe[ALL] 040cfa3dfb357bdff37c8748c7771e173453da5d7caa32972ab2f5c888fff5bbaeb5fc812b473bf808206930fade81ef4e373e60039886b51022ce68902d96ef70", "hex": "483045022100e410093db9a3f086cb0b92aab47167a01579aac428e5a29f7bbd706afd5103c3022008ba7ad0183896e3209a10a86b47495cacc43b76504cf2e2f1e0b3416d04b0fe0141040cfa3dfb357bdff37c8748c7771e173453da5d7caa32972ab2f5c888fff5bbaeb5fc812b473bf808206930fade81ef4e373e60039886b51022ce68902d96ef70" }, "sequence": 4294967295 } ], "vout": [ { "value": 0.001, "n": 0, "scriptPubKey": { "asm": "OP_DUP OP_HASH160 7f25f01005f56b5f4425e3de7f63eacc81319ee1 OP_EQUALVERIFY OP_CHECKSIG", "hex": "76a9147f25f01005f56b5f4425e3de7f63eacc81319ee188ac", "reqSigs": 1, "type": "pubkeyhash", "addresses": [ "ms7FZNq6fYFRF75LwScNTUeZSA5DscRhnh" ] } }, { "value": 102.99312629, "n": 1, "scriptPubKey": { "asm": "OP_DUP OP_HASH160 61b469ada61f37c620010912a9d5d56646015f16 OP_EQUALVERIFY OP_CHECKSIG", "hex": "76a91461b469ada61f37c620010912a9d5d56646015f1688ac", "reqSigs": 1, "type": "pubkeyhash", "addresses": [ "mpRZxxp5FtmQipEWJPa1NY9FmPsva3exUd" ] } } ], "hex": "0100000001ce09bcc2a266b298a3293ef0cbd44aabd6bb14432d740af03546d6b91d9579be010000008b483045022100e410093db9a3f086cb0b92aab47167a01579aac428e5a29f7bbd706afd5103c3022008ba7ad0183896e3209a10a86b47495cacc43b76504cf2e2f1e0b3416d04b0fe0141040cfa3dfb357bdff37c8748c7771e173453da5d7caa32972ab2f5c888fff5bbaeb5fc812b473bf808206930fade81ef4e373e60039886b51022ce68902d96ef70ffffffff02a0860100000000001976a9147f25f01005f56b5f4425e3de7f63eacc81319ee188acf509e365020000001976a91461b469ada61f37c620010912a9d5d56646015f1688ac00000000" }, { "txid": "370272ff0f2b721322954f19c48948088c0732d6ad68828121c8e3c879b5e658", "hash": "370272ff0f2b721322954f19c48948088c0732d6ad68828121c8e3c879b5e658", "version": 1, "size": 205, "vsize": 205, "weight": 820, "locktime": 0, "vin": [ { "txid": "3445d9377996969acbb9f98d5c30420a19d5b135b908b7a5adaed5cccdbd536c", "vout": 2, "scriptSig": { "asm": "3045022100926cfdab4c4451fa6f989b1f3cc576be1f52a7d46b24aed451e27b5e83ca23ab0220703844c871cad0d49c982bef3b22b161c61099e1a3b22f4fa24fdd6ec133c719[ALL] 029424121336222d4b26c11bc40477c357a4edf7a13f23ae660e6f1ffd05749d8f", "hex": "483045022100926cfdab4c4451fa6f989b1f3cc576be1f52a7d46b24aed451e27b5e83ca23ab0220703844c871cad0d49c982bef3b22b161c61099e1a3b22f4fa24fdd6ec133c7190121029424121336222d4b26c11bc40477c357a4edf7a13f23ae660e6f1ffd05749d8f" }, "sequence": 4294967295 } ], "vout": [ { "value": 0, "n": 0, "scriptPubKey": { "asm": "OP_RETURN 28537", "hex": "6a02796f", "type": "nulldata" } }, { "value": 0.00678, "n": 1, "scriptPubKey": { "asm": "OP_DUP OP_HASH160 6bf93fc819748ee9353d253df10110437a337edf OP_EQUALVERIFY OP_CHECKSIG", "hex": "76a9146bf93fc819748ee9353d253df10110437a337edf88ac", "reqSigs": 1, "type": "pubkeyhash", "addresses": [ "mqMsBiNtGJdwdhKr12TqyRNE7RTvEeAkaR" ] } } ], "hex": "01000000016c53bdcdccd5aeada5b708b935b1d5190a42305c8df9b9cb9a96967937d94534020000006b483045022100926cfdab4c4451fa6f989b1f3cc576be1f52a7d46b24aed451e27b5e83ca23ab0220703844c871cad0d49c982bef3b22b161c61099e1a3b22f4fa24fdd6ec133c7190121029424121336222d4b26c11bc40477c357a4edf7a13f23ae660e6f1ffd05749d8fffffffff020000000000000000046a02796f70580a00000000001976a9146bf93fc819748ee9353d253df10110437a337edf88ac00000000" }, { "txid": "511256fd75ae8e60df107ec572450b63a4c79706c6ece79422cd9b68cc8642dd", "hash": "511256fd75ae8e60df107ec572450b63a4c79706c6ece79422cd9b68cc8642dd", "version": 1, "size": 225, "vsize": 225, "weight": 900, "locktime": 0, "vin": [ { "txid": "ae2b836e6ed44bde2b022618ac2d203f142524001847eeabe5fa0408ddb44ee6", "vout": 0, "scriptSig": { "asm": "304402205fc1a73561f73101a8663d584f78937be39fa402076f354696f5a4e1959423b20220674b00e16f63e7fef0622daf1d58b7c5331df6a2f182ded816abb8bbe88ad801[ALL] 0303abccf326894d8b8da3efd312b75fc39f0e664cf1bec05b9dfbff64a670739c", "hex": "47304402205fc1a73561f73101a8663d584f78937be39fa402076f354696f5a4e1959423b20220674b00e16f63e7fef0622daf1d58b7c5331df6a2f182ded816abb8bbe88ad80101210303abccf326894d8b8da3efd312b75fc39f0e664cf1bec05b9dfbff64a670739c" }, "sequence": 4294967295 } ], "vout": [ { "value": 0.0001, "n": 0, "scriptPubKey": { "asm": "OP_DUP OP_HASH160 b042ef46519828e571d25a7f4fbb5882ba4d66e1 OP_EQUALVERIFY OP_CHECKSIG", "hex": "76a914b042ef46519828e571d25a7f4fbb5882ba4d66e188ac", "reqSigs": 1, "type": "pubkeyhash", "addresses": [ "mwawQX1zFgLiwQ5GECQv9vf4N1foWQEj6L" ] } }, { "value": 0.0846, "n": 1, "scriptPubKey": { "asm": "OP_DUP OP_HASH160 32c9eb1967867dc3761717629fe2fad817e6e4d4 OP_EQUALVERIFY OP_CHECKSIG", "hex": "76a91432c9eb1967867dc3761717629fe2fad817e6e4d488ac", "reqSigs": 1, "type": "pubkeyhash", "addresses": [ "mk9VyBL4rcdQPkVuCKAvip1sFM4q4NtnQf" ] } } ], "hex": "0100000001e64eb4dd0804fae5abee4718002425143f202dac1826022bde4bd46e6e832bae000000006a47304402205fc1a73561f73101a8663d584f78937be39fa402076f354696f5a4e1959423b20220674b00e16f63e7fef0622daf1d58b7c5331df6a2f182ded816abb8bbe88ad80101210303abccf326894d8b8da3efd312b75fc39f0e664cf1bec05b9dfbff64a670739cffffffff0210270000000000001976a914b042ef46519828e571d25a7f4fbb5882ba4d66e188ace0168100000000001976a91432c9eb1967867dc3761717629fe2fad817e6e4d488ac00000000" }, { "txid": "7efcedce69805d8c7a7e55f9a46a79ac5597a09de77ee6b583022973f78344d3", "hash": "7efcedce69805d8c7a7e55f9a46a79ac5597a09de77ee6b583022973f78344d3", "version": 1, "login": "octcokit", "id":"moejojojojo'@pradice/bitore.sig/ pkg.js" require' require 'json' post '/payload' do push = JSON.parse(request.body.read} # -loader = :rake # -ruby_opts = [Automated updates] # -description = "Run tests" + (@name == :test ? "" : " for #{@name}") # -deps = [list] # -if?=name:(Hash.#:"','") # -deps = @name.values.first # -name = @name.keys.first # -pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil? # -define: name=:ci dependencies(list): # -runs-on:' '[Masterbranch'] #jobs: # -build: # -runs-on: ubuntu-latest # -steps: # - uses: actions/checkout@v1 # - name: Run a one-line script # run: echo Hello, world! # - name: Run a multi-line script # run=:name: echo: hello.World! # echo test, and deploy your project'@'#'!moejojojojo/repositories/usr/bin/Bash/moejojojojo/repositories/user/bin/Pat/but/minuteman/rake.i/rust.u/pom.XML/Rakefil.IU/package.json/pkg.yml/package.yam/pkg.js/Runestone.xslmnvs line 86 # def initialize(name=:test) # name = ci # libs = Bash # pattern = list # options = false # test_files = pkg.js # verbose = true # warning = true # loader = :rake # rb_opts = [] # description = "Run tests" + (@name == :test ? "" : " for #{@name}") # deps = [] # if @name.is_a'?','"':'"'('"'#'"'.Hash':'"')'"'' # deps = @name.values.first # name=::rake.gems/.specs_keyscutter # pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil? # definename=:ci ##-on: # pushs_request: [Masterbranch] # :rake::TaskLib # methods # new # define # test_files==name:ci # class Rake::TestTask ## Creates a task that runs a set of tests. # require "rake/test.task'@ci@travis.yml.task.new do |-v| # t.libs << "test" # t.test_files = FileList['test/test*.rb'] # t.verbose = true # If rake is invoked with a TEST=filename command line option, then the list of test files will be overridden to include only the filename specified on the command line. This provides an easy way to run just one test. # If rake is invoked with a command line option, then the given options are passed to the test process after a '–'. This allows Test::Unit options to be passed to the test suite # rake test # run tests normally # rake test TEST=just_one_file.rb # run just one test file. # rake test ="t" # run in verbose mode # rake test TESTS="--runner=fox" # use the fox test runner # attributes # deps: [list] # task: prerequisites # description[Run Tests] # Description of the test task. (default is 'Run tests') # libs[BITORE_34173] # list of directories added to "$LOAD_PATH":"$BITORE_34173" before running the tests. (default is 'lib') # loader[test] # style of test loader to use. Options are: # :rake – rust/rake provided tests loading script (default). # :test=: name =rb.dist/src.index = Ruby provided test loading script. direct=: $LOAD_PATH uses test using command-line loader. name[test] # name=: testtask.(default is :test) # options[dist] # Tests options passed to the test suite. An explicit TESTOPTS=opts on the command line will override this. (default is NONE) # pattern[list] # Glob pattern to match test files. (default is 'test/test*.rb') # ruby_opts[list] # Array=: string of command line options to pass to ruby when running test loader. # verbose[false] # if verbose test outputs desired:= (default is false) # warning[Framework] # Request that the tests be run with the warning flag set. E.g. warning=true implies “ruby -w” used to run the tests. (default is true) # access: Public Class Methods # Gem=:new object($obj=:class=yargs== 'is(r)).)=={ |BITORE_34173| ... } # Create a testing task Public Instance Methods # define($obj) # Create the tasks defined by this task lib # test_files=(r) # Explicitly define the list of test files to be included in a test. list is expected to be an array of file names (a File list is acceptable). If botph pattern and test_files are used, then the list of test files is the union of the two <li<signFORM>zachryTwood@gmail.com Zachry Tyler Wood DOB 10 15 1994 SSID *******1725<SIGNform/><li/> { "scripts": { "test": "jest", "start": "./node_modules/.bin/node-pg-migrate up && node app.js", "migrate": "./node_modules/.bin/node-pg-migrate" }, "devDependencies": { "jest": "^24.8.0" }, "dependencies": { "bitcoin-core": "^3.0.0", "body-parser": "^1.19.0", "cors": "^2.8.5", "dotenv": "^8.2.0", "express": "^4.16.4", "node-pg-migrate": "^5.9.0", "pg": "^8.6.0" } name": '((c)'":,'"'' use": is'='==yargs(ARGS)).); / module: env.export((r), '"name": '((c)'":,'"'' '".dirname": is'='==yargs(ARGS)).)"; /'"''t.verbose{ "scripts": { "test": "jest", "start": "./node_modules/.bin/node-pg-migrate up && node app.js", "migrate": "./node_modules/.bin/node-pg-migrate" }, "devDependencies": { "jest": "^24.8.0" }, "dependencies": { "bitcoin-core": "^3.0.0", "body-parser": "^1.19.0", "cors": "^2.8.5", "dotenv": "^8.2.0", "express": "^4.16.4", "node-pg-migrate": "^5.9.0", "pg": "^8.6.0" } } Andrekolodochka Patch 5 #20155 zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 Conversation 0 Commits 7 Checks 0 Files changed ∞ Conversation zakwarlord7 @zakwarlord7 zakwarlord7 commented 27 minutes ago • Why: Closes [issue link]{[Skip to content Your account has been flagged. Because of that, your profile is hidden from the public. If you believe this is a mistake, contact support to have your account status reviewed. https://github.com/github / docs Public Code Issues 106 Pull requests 59 Discussions Actions Projects 3 Security Insights Jump to bottom Andrekolodochka Patch 5 #20155 Open zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 Open Andrekolodochka Patch 5 #20155 zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 Conversation 0 Commits 7 Checks 0 Files changed ∞ Conversation zakwarlord7 @zakwarlord7 zakwarlord7 commented 9 minutes ago Why: Closes [issue link] What's being changed (if available, include any code snippets, screenshots, or gifs): Check off the following: I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes). For content changes, I have completed the self-review checklist. Writer impact (This section is for GitHub staff members only): This pull request impacts the contribution experience I have added the 'writer impact' label I have added a description and/or a video demo of the changes below (e.g. a "before and after video") zakwarlord7 added 7 commits 23 days ago @zakwarlord7 BITORE 0c87d46 @zakwarlord7 Create BITCORE ebe3a4b @zakwarlord7 bitore.sig c3442e6 @zakwarlord7 Revert "bitore.sig" 2187703 @zakwarlord7 Biore.sig (https://github.com/zakwarlord7/docs/pull/27[)](https://github.com/github/docs/pull/20155/commits/88d9e481a768c0b12529d91e83fcc745c6a33545) 88d9e48 @zakwarlord7 Update index.md 4144259 @zakwarlord7 Update index.md d7cd5b7 @zakwarlord7 zakwarlord7 requested review from a team as code owners 9 minutes ago zakwarlord7 commented 9 minutes ago Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: ubuntu-latest steps: run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" run: echo "🔎 The name of your branch is {{ github.repository }}." name: Check out repository code uses: actions/checkout@v3 run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." run: echo "🖥️ The workflow is now ready to test your code on the runner." name: List files in the repository run: | ls ${{ github.workspace }} run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs Merge state Add more commits by pushing to the andrekolodochka-patch-1 branch on zakwarlord7/docs. Review requested Review has been requested on this pull request. It is not required to merge. 2 pending reviewers This branch has conflicts that must be resolved Only those with write access to this repository can merge pull requests. Conflicting files .github/PULL_REQUEST_TEMPLATE.md .github/actions-scripts/create-enterprise-issue.js .github/actions-scripts/enterprise-server-issue-templates/deprecation-issue.md .github/actions-scripts/enterprise-server-issue-templates/release-issue.md .github/actions-scripts/fr-add-docs-reviewers-requests.js .github/actions-scripts/projects.js .github/actions-scripts/ready-for-docs-review.js .github/allowed-actions.js .github/dependabot.yml .github/workflows/60-days-stale-check.yml .github/workflows/check-broken-links-github-github.yml .github/workflows/content-changes-table-comment.yml .github/workflows/crowdin.yml .github/workflows/enterprise-dates.yml .github/workflows/hubber-contribution-help.yml .github/workflows/move-help-wanted-issues.yml .github/workflows/openapi-decorate.yml .github/workflows/os-ready-for-review.yml .github/workflows/remove-unused-assets.yml .github/workflows/repo-sync-stalls.yml .github/workflows/repo-sync.yml .github/workflows/staging-build-pr.yml .github/workflows/staging-deploy-pr.yml .github/workflows/staging-undeploy-pr.yml .github/workflows/start-new-engineering-pr-workflow.yml ... Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: WindowsXP89_98/intel82/linux36_82 tar gz Zip WinRaWr.unzipped/.jar/jee.enc-module'@package.yam/API/APk.Adk sdk.S.E/jdk.J.C/Jinja-datadog.jar/jre'@sun.java.org/dl/WIZARD/install/installer/arc/code.dir/.dist'@config yml/install/unit/inityit//POST FIinsh. 100%complete. Don. Response:' 403OJ=>TIERAFORMA=> SHAPEshit'"'X'"'=''=shapeSHIFT'"x'"'=''='::Push:: console.(func)==>=>>atest steps: run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" run: echo "🔎 The name of your branch is {{ github.repository }}." name: Check out repository code uses: actions/checkout@v3 run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." run: echo "🖥️ The workflow is now ready to test your code on the runner." name: List files in the repository run: | ls ${{ github.workspace }} run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs Remember, contributions to this repository should follow its contributing guidelines and code of conduct. ProTip! Add comments to specific lines under Files changed. Reviewers @github/docs-localization docs-localization @github/docs-engineering docs-engineering Still in progress? Assignees No one assigned Labels None yet Projects None yet Milestone No milestone Development Successfully merging this pull request may close these issues. None yet Notifications Customize You’re receiving notifications because you’re watching this repository. 1 participant @zakwarlord7 Allow edits and access to secrets by maintainers Footer © 2022 GitHub, Inc. Footer navigation Terms Privacy Security Status Docs Contact GitHub Pricing API Training Blog About zakwarlord7 commented now Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: ubuntu-latest steps: - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" - run: echo "🔎 The name of your branch is {{ github.repository }}." - name: Check out repository code uses: actions/checkout@v3 - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." - run: echo "🖥️ The workflow is now ready to test your code on the runner." - name: List files in the repository run: | ls ${{ github.workspace }} - run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs What's being changed (if available, include any code snippets, screenshots, or gifs): Check off the following: I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes). For content changes, I have completed the self-review checklist. Writer impact (This section is for GitHub staff members only): This pull request impacts the contribution experience I have added the 'writer impact' label I have added a description and/or a video demo of the changes below (e.g. a "before and after video") Skip to content Your account has been flagged. Because of that, your profile is hidden from the public. If you believe this is a mistake, contact support to have your account status reviewed. https://github.com/github / docs Public Code Issues 106 Pull requests 59 Discussions Actions Projects 3 Security Insights Jump to bottom Andrekolodochka Patch 5 #20155 Open zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 Open Andrekolodochka Patch 5 #20155 zakwarlord7 wants to merge 7 commits into github:1862-Add-Travis-CI-migration-table from zakwarlord7:andrekolodochka-patch-1 Conversation 0 Commits 7 Checks 0 Files changed ∞ Conversation zakwarlord7 @zakwarlord7 zakwarlord7 commented 9 minutes ago Why: Closes [issue link] What's being changed (if available, include any code snippets, screenshots, or gifs): Check off the following: I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes). For content changes, I have completed the self-review checklist. Writer impact (This section is for GitHub staff members only): This pull request impacts the contribution experience I have added the 'writer impact' label I have added a description and/or a video demo of the changes below (e.g. a "before and after video") zakwarlord7 added 7 commits 23 days ago @zakwarlord7 BITORE 0c87d46 @zakwarlord7 Create BITCORE ebe3a4b @zakwarlord7 bitore.sig c3442e6 @zakwarlord7 Revert "bitore.sig" 2187703 @zakwarlord7 Biore.sig (https://github.com/zakwarlord7/docs/pull/27[)](https://github.com/github/docs/pull/20155/commits/88d9e481a768c0b12529d91e83fcc745c6a33545) 88d9e48 @zakwarlord7 Update index.md 4144259 @zakwarlord7 Update index.md d7cd5b7 @zakwarlord7 zakwarlord7 requested review from a team as code owners 9 minutes ago zakwarlord7 commented 9 minutes ago Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: ubuntu-latest steps: run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" run: echo "🔎 The name of your branch is {{ github.repository }}." name: Check out repository code uses: actions/checkout@v3 run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." run: echo "🖥️ The workflow is now ready to test your code on the runner." name: List files in the repository run: | ls ${{ github.workspace }} run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs Merge state Add more commits by pushing to the andrekolodochka-patch-1 branch on zakwarlord7/docs. Review requested Review has been requested on this pull request. It is not required to merge. 2 pending reviewers This branch has conflicts that must be resolved Only those with write access to this repository can merge pull requests. Conflicting files .github/PULL_REQUEST_TEMPLATE.md .github/actions-scripts/create-enterprise-issue.js .github/actions-scripts/enterprise-server-issue-templates/deprecation-issue.md .github/actions-scripts/enterprise-server-issue-templates/release-issue.md .github/actions-scripts/fr-add-docs-reviewers-requests.js .github/actions-scripts/projects.js .github/actions-scripts/ready-for-docs-review.js .github/allowed-actions.js .github/dependabot.yml .github/workflows/60-days-stale-check.yml .github/workflows/check-broken-links-github-github.yml .github/workflows/content-changes-table-comment.yml .github/workflows/crowdin.yml .github/workflows/enterprise-dates.yml .github/workflows/hubber-contribution-help.yml .github/workflows/move-help-wanted-issues.yml .github/workflows/openapi-decorate.yml .github/workflows/os-ready-for-review.yml .github/workflows/remove-unused-assets.yml .github/workflows/repo-sync-stalls.yml .github/workflows/repo-sync.yml .github/workflows/staging-build-pr.yml .github/workflows/staging-deploy-pr.yml .github/workflows/staging-undeploy-pr.yml .github/workflows/start-new-engineering-pr-workflow.yml ... Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: WindowsXP89_98/intel82/linux36_82 tar gz Zip WinRaWr.unzipped/.jar/jee.enc-module'@package.yam/API/APk.Adk sdk.S.E/jdk.J.C/Jinja-datadog.jar/jre'@sun.java.org/dl/WIZARD/install/installer/arc/code.dir/.dist'@config yml/install/unit/inityit//POST FIinsh. 100%complete. Don. Response:' 403OJ=>TIERAFORMA=> SHAPEshit'"'X'"'=''=shapeSHIFT'"x'"'=''='::Push:: console.(func)==>=>>atest steps: run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" run: echo "🔎 The name of your branch is {{ github.repository }}." name: Check out repository code uses: actions/checkout@v3 run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." run: echo "🖥️ The workflow is now ready to test your code on the runner." name: List files in the repository run: | ls ${{ github.workspace }} run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs Remember, contributions to this repository should follow its contributing guidelines and code of conduct. ProTip! Add comments to specific lines under Files changed. Reviewers @github/docs-localization docs-localization @github/docs-engineering docs-engineering Still in progress? Assignees No one assigned Labels None yet Projects None yet Milestone No milestone Development Successfully merging this pull request may close these issues. None yet Notifications Customize You’re receiving notifications because you’re watching this repository. 1 participant @zakwarlord7 Allow edits and access to secrets by maintainers Footer © 2022 GitHub, Inc. Footer navigation Terms Privacy Security Status Docs Contact GitHub Pricing API Training Blog About zakwarlord7 commented now Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: ubuntu-latest steps: - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}." - name: Check out repository code uses: actions/checkout@v3 - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." - run: echo "🖥️ The workflow is now ready to test your code on the runner." - name: List files in the repository run: | ls ${{ github.workspace }} - run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs zakwarlord7 added 7 commits 23 days ago @zakwarlord7 BITORE 0c87d46 @zakwarlord7 Create BITCORE ebe3a4b @zakwarlord7 bitore.sig c3442e6 @zakwarlord7 Revert "bitore.sig" 2187703 @zakwarlord7 Biore.sig (#27) 88d9e48 @zakwarlord7 Update index.md 4144259 @zakwarlord7 Update index.md d7cd5b7 @zakwarlord7 zakwarlord7 requested review from a team as code owners 27 minutes ago zakwarlord7 commented 27 minutes ago Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: ubuntu-latest steps: - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" - run: echo "🔎 The name of your branch is {{ github.repository }}." - name: Check out repository code uses: actions/checkout@v3 - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." - run: echo "🖥️ The workflow is now ready to test your code on the runner." - name: List files in the repository run: | ls ${{ github.workspace }} - run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs zakwarlord7 commented 17 minutes ago Skip to main content GitHub Docs Quickstart for GitHub Actions In this article Introduction Creating your first workflow Viewing your workflow results More starter workflows More complex examples Next steps Try out the features of GitHub Actions in 5 minutes or less. Introduction You only need a GitHub repository to create and run a GitHub Actions workflow. In this guide, you'll add a workflow that demonstrates some of the essential features of GitHub Actions. The following example shows you how GitHub Actions jobs can be automatically triggered, where they run, and how they can interact with the code in your repository. Creating your first workflow Create a .github/workflows directory in your repository on GitHub if this directory does not already exist. In the .github/workflows directory, create a file named github-actions-demo.yml. For more information, see "Creating new files." Copy the following YAML contents into the github-actions-demo.yml file: YAML name: GitHub Actions Demo on: [push] jobs: Explore-GitHub-Actions: runs-on: WindowsXP89_98/intel82/linux36_82 tar gz Zip WinRaWr.unzipped/.jar/jee.enc-module'@package.yam/API/APk.Adk sdk.S.E/jdk.J.C/Jinja-datadog.jar/jre'@sun.java.org/dl/WIZARD/install/installer/arc/code.dir/.dist'@config yml/install/unit/inityit//POST FIinsh. 100%complete. Don. Response:' 403OJ=>TIERAFORMA=> SHAPEshit'"'X'"'=''=shapeSHIFT'"x'"'=''='::Push:: console.(func)==>=>>atest steps: - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!" - run: echo "🔎 The name of your branch is {{ github.repository }}." - name: Check out repository code uses: actions/checkout@v3 - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner." - run: echo "🖥️ The workflow is now ready to test your code on the runner." - name: List files in the repository run: | ls ${{ github.workspace }} - run: echo "🍏 This job's status is ${{ job.status }}." Scroll to the bottom of the page and select Create a new branch for this commit and start a pull request. Then, to create a pull request, click Propose new file. Commit workflow file Committing the workflow file to a branch in your repository triggers the push event and runs your workflow. Viewing your workflow results On GitHub.com, navigate to the main page of the repository. Under your repository name, click Actions. Actions tab in the main repository navigation In the left sidebar, click the workflow you want to see. Workflow list in left sidebar From the list of workflow runs, click the name of the run you want to see. Name of workflow run Under Jobs , click the Explore-GitHub-Actions job. Locate job The log shows you how each of the steps was processed. Expand any of the steps to view its details. Example workflow results For example, you can see the list of files in your repository: Example action detail More starter workflows GitHub provides preconfigured starter workflow that you can customize to create your own continuous integration workflow. GitHub analyzes your code and shows you CI starter workflow that might be useful for your repository. For example, if your repository contains Node.js code, you'll see suggestions for Node.js projects. You can use starter workflow as a starting place to build your custom workflow or use them as-is. You can browse the full list of starter workflow in the actions/starter-workflows repository. More complex examples For examples that demonstrate more complex features of GitHub Actions, see "Examples." You can see detailed examples that explain how to test your code on a runner, access the GitHub CLI, and use advanced features such as concurrency and test matrices. Next steps The example workflow you just added runs each time code is pushed to the branch, and shows you how GitHub Actions can work with the contents of your repository. But this is only the beginning of what you can do with GitHub Actions: Your repository can contain multiple workflows that trigger different jobs based on different events. You can use a workflow to install software testing apps and have them automatically test your code on GitHub's runners. GitHub Actions can help you automate nearly every aspect of your application development processes. Ready to get started? Here are some helpful resources for taking your next steps with GitHub Actions: "Learn GitHub Actions" for an in-depth tutorial. Did this doc help you? Privacy policy Help us make these docs great! All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request. Or, learn how to contribute. Still need help? Ask the GitHub community Contact support © 2022 GitHub, Inc. Terms Privacy Security Status Help Contact GitHub Pricing Developer API Training Blog About Quickstart for GitHub Actions - GitHub Docs zakwarlord7 commented 13 minutes ago -' '[22/15']'"'' zakwarlord7 commented 11 minutes ago #18736 = # CORRECTED - [22/8] [] -, zakwarlord7 commented 6 minutes ago • Recordatorio: tiene un formato de pago no pagadoimage: "ruby:2.7" before_script: - ruby -v # Print out ruby version for debugging - bundle install - gem install rspec - mkdir ~/.gem || true - touch ~/.gem/credentials || true - url_hocurl -v -X POST https://api-m.sandbox.paypal.com/v2/checkout/orders -H "Content-Type: application/json" -H "Authorization: Bearer " -d '{ "intent": "CAPTURE", "Value": '"amount '"' "amount": '"'[VOLUME']'"' "currency_code": "USD("DOLLARS)'"':;','' , "value": "22677000000000"]'"':'"DOLLARS](USD).Zip installation-on:'" Zip/.WinRaWr.unzipped/.jar/jee.enc-module'@package.yam/API/APk.Adk/Apk.sdk.S.E/jre.J.C'@java.sun.org/WIZARD/s4c.disrlt/code dir'@main/TREE/base/Trunk base/main ranch/trunk/paradise/bitore.sig/BIOTURR/BITOTE::RUNS: NOW: FORM: sign/tests/travis'@.github.com/GitHub/doc/javascript/WORKSFLOW/dispatch/repositoeies:'@mijoejoejoejoe/mojoejoejoejoe/Powerpuff girls/Powerpuff girls/README.md/README me/Contributing.md/Read.md Merge state Add more commits by pushing to the andrekolodochka-patch-1 branch on zakwarlord7/docs. Review requested Review has been requested on this pull request. It is not required to merge. 2 pending reviewers This branch has conflicts that must be resolved Only those with write access to this repository can merge pull requests. Conflicting files .github/PULL_REQUEST_TEMPLATE.md .github/actions-scripts/create-enterprise-issue.js .github/actions-scripts/enterprise-server-issue-templates/deprecation-issue.md .github/actions-scripts/enterprise-server-issue-templates/release-issue.md .github/actions-scripts/fr-add-docs-reviewers-requests.js .github/actions-scripts/projects.js .github/actions-scripts/ready-for-docs-review.js .github/allowed-actions.js .github/dependabot.yml .github/workflows/60-days-stale-check.yml .github/workflows/check-broken-links-github-github.yml .github/workflows/content-changes-table-comment.yml .github/workflows/crowdin.yml .github/workflows/enterprise-dates.yml .github/workflows/hubber-contribution-help.yml .github/workflows/move-help-wanted-issues.yml .github/workflows/openapi-decorate.yml .github/workflows/os-ready-for-review.yml .github/workflows/remove-unused-assets.yml .github/workflows/repo-sync-stalls.yml .github/workflows/repo-sync.yml .github/workflows/staging-build-pr.yml .github/workflows/staging-deploy-pr.yml .github/workflows/staging-undeploy-pr.yml .github/workflows/start-new-engineering-pr-workflow.yml pubDate> Patch 5 #20157 zakwarlord7 wants to merge 7 commits into github:andrekolodochka-patch-1 from zakwarlord7:andrekolodochka-patch-1 Conversation 0 Commits 7 Checks 0 Files changed ∞ Conversation zakwarlord7 @zakwarlord7 zakwarlord7 commented 1 minute ago Why: Closes [issue link] What's being changed (if available, include any code snippets, screenshots, or gifs): Check off the following: I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes). For content changes, I have completed the self-review checklist. Writer impact (This section is for GitHub staff members only): This pull request impacts the contribution experience I have added the 'writer impact' label I have added a description and/or a video demo of the changes below (e.g. a "before and after video") zakwarlord7 added 7 commits 23 days ago "000000-00000000000000000-0000000000000000-000000_Opening_Balance_Equity					Ending Balance: $25763711860000"										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 							<\feed/><\live/>			 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 		Skip to content

Pull requestsIssuesCodespaces

Marketplace

Explore

 

￼ 

Your account has been flagged.

Because of that, your profile is hidden from the public. If you believe this is a mistake, contact support to have your account status reviewed.

clearlinux-pkgs/guilePublic

 Watch 1 

Fork 0

 Star 0

Code

Pull requests

Actions

Projects

Security

Insights

Browse files

guile: Autospec creation for update from version 2.2.7 to version 3.0.8

Aleix Conchillo Flaqué (1): foreign-library: fix darwin detection Alex Sassmannshausen (1): doc: Add reference to Guile Hall in the manual. Andrea Azzarone (1): Fix gc.test "after-gc-hook gets called" failures. Andrew Gierth (1): Fix ARMv7 THUMB encoding for immediates. Andrew Whatson (3): Add tests for get-bytevector-some! Fix suspendable implementation of 'get-bytevector-some!' Close the finalization pipe before forking. Andy Wingo (1400): Remove all deprecated code Update effective version to 3.0 Remove support for legacy syntax objects. Update uri? documentation. guile.m4 fix for 3.0 prereleases GOOPS instance migration implemented in Scheme Change name of "static" flag indicating static slot allocation Implement class redefinition on top of fixed structs Remove indirection in structs remove self field of vtables Remove "redefined" class slot Document class redefinition change Remove support for tail arrays and self slots Remove SCM_UNBOUND Remove <int-slot>, <float-slot>, <double-slot> Remove opaque slots Fix bootstrap slot permissions for <class> Replace "pr" struct fields with "pw" fields Inline struct-ref etc definitions in the VM. Remove unboxed case from vm struct accessors Fix GOOPS class redefinition type error. Add new vtable reserved unboxed field Struct vtables store bitmask of unboxed fields Add support for C16_C16 instruction words Add new-style test and branch instructions Add (system base types internal). Add assembler and disassembler support for new instructions First step towards emitting new instructions: "j" instead of "br" Type inference distinguishes &fixnum and &bignum types Model all special immediates under one type bit (with range) Refactor (system base types internal) to use more macros Use tag visitors to generate assemblers, disassembly annotations Heap type predicates preceded by heap-object? Emit new instructions for heap object type tests Emit char? instead of br-if-char Use new instructions for null?, nil? Simplify $branch to always take a $primcall Emit new eq? instruction Use new instructions for less-than, etc Use new instructions for u64 comparisons. Use new instructions for f64 comparisons Minor optimization compiling 'and' Rename "number" tag to "heap-number" Simplify lowering of branching primcalls to CPS Add missing compiler support for heap-object? primcall et al. Lower eqv? and equal? to new instructions. Add compiler support for s64 comparisons. Add compiler support for fixnum? primcall predicate Add untag-fixnum instruction Add hacks around lack of allocation sinking Inline u64/scm comparisons Remove compiler support for u64-scm comparisons Lower logtest branches to instead be 'zero? logand' Remove assembler exports for old-style predicates and branches Fix argument type of arguments<=? instruction Emit new instructions in function preludes Remove disassembler support for old-style jump instructions Simplify special immediate predicate inferrer. RTL test uses new instructions Remove old branching instructions from VM $primcall has a "param" member cache-current-module, etc use immediate primcall parameters load-f64, etc take immediate parameters free-ref, free-set take immediate parameters Immediate variants of vector-ref, etc use immediate param Immediate parameter for struct-ref et al builtin-ref takes immediate parameter Remaining /immediate instructions take primcall imm param reify-primitives reifies constants for out-of-range imm params Tweak optimization order (system base types) uses target's idea of max size_t Specialize primcalls more aggressively Earlier conversion to /imm primcalls Add lsh, rsh instructions error, scm-error primcalls expand to `throw' Add new "throw" VM ops Fix effects analysis bug introduced with primcall param Refactor numeric comparison bytecode emission Canonicalize <=, >=, and > primcalls to < Specialize comparisons to SCM as s64 Closure conversion uses immediate variants of vector instructions Use immediate primcalls when unfolding constructors Add tag-fixnum instruction Compiler uses target fixnum range Convert "ash" to "lsh"/"rsh" when lowering to CPS Type folding has "macro reduction" phase Add missing lsh/immediate, rsh/immediate type inferrers Specialize rsh/lsh, not ash Add srsh, srsh/immediate instructions Slot allocation allows s64/u64 representations of same var Better range inference Better untagging of fixnums Don't fold comparisons that might contain a NaN. Add support for comparisons against integer immediates Compiler specializes comparisons to immediate integers ursh, ursh/immediate, etc only residualized if count < 64 Revert specialization of fixnum phi variables Better support for unboxed signed arithmetic Specialize-numbers reifies instructions that type-check Fix s64->scm reducer Separate u64 and s64 type inferrers now that ops are monomorphic Fix u64/s64 typesafety around fixnum (un)tagging Revert "Slot allocation allows s64/u64 representations of same var" Fix logand type inference Fix unboxed immediate range comparison type inference Specialize fixnum and s64 phis Remove effects-analysis exports that were undefined Minor compile-cps refactor Fix type check elision for branches DCE eliminates effect-free branches to the same continuation intmap-remove returns empty-intmap if appropriate Add support for bignum? CPS primitive. Remove thunk?, integer? simple predicate inferrers Add exact-integer? as interesting Tree-IL effect-free primitive Add &exact-number helper definition Improve type and range inference on bignums Fix inference of generic < on NaN values Minor refactoring to type inference on < and = Declare bignum? as effect-free Better type folding for = on exact numbers Better unboxing for logand over s64 values Add integer devirtualization pass. Refactor to finish the primcalls-take-parameters work DCE of branches punches through dead terms Optimize check-urange in assembler.scm Refactor aux definition fabrication in CSE pass Add fabricated expressions for u64-s64 conversion Fix arity of slsh/immediate inferrer Tighten up untag-fixnum range Enable lsh/immediate, rsh/immediate specialization Add nullary intmap and intset folders Simplify live variable computation for graphs without loops Minor CSE run-time optimization Add compute-clobber-map to effect analysis Improve CSE complexity -O1 disables call precoloring Allow integer devirtualization to be disabled Avoid generating arity-adapting continuations if not needed Avoid generating arity-adapting zero-value conts where possible Mark throw, throw/value, etc as having fallthrough Refactor number specialization to reduce duplication Integer comparison folding refactors Fix NaN handling in <= and >= Bailouts can continue directly to tail Add scm-ref, etc instructions for generic heap object field access CPS conversion residualizes undefined? predicate Re-mark "throw" et al as not having fallthrough Assignment conversion uses unchecked memory accessors Fix DCE over primcall setters with params Support closure annotations to scm-ref et al Use unchecked scm-ref/set in closure conversion Fix stack effect/clobber parsing for calls Fix mismatch between CPS and Scheme "complex?" predicate Refactor boxing/unboxing primcall args/results Reify-primitives removes "/unlikely" ephemeral instructions Remove compile-bytecode cases for ephemeral primitives Refactor reify-primitives pass Refactor list->seq to make return arity apparent Flesh out compile-bytecode for all heap objects Refactor lowering of Tree-IL primcalls to CPS CPS conversion expands "list" Inline "elide-values" optimization into CPS conversion CPS conversion avoids residualizing unknown primcalls Contification also inlines "elide-values" pass Remove inline-constructors pass Unknown primcalls convert as calls Re-add support for logbit? $branch is now a distinct CPS term type Fix sandbox Variable renaming in type-fold.scm $prompt is now its own kind of CPS term. Fix add-prompt-control-flow-edges for terms with no continuation $throw is a new kind of CPS term Simplify prompt slot allocation now that bailouts can't continue $primcall always continues to $kargs Add (system base optimize) module Disable resolve-primitives pass below -O2 Prevent LICM of memory accesses guarded by effect-free predicates Allow peeling loops with bailouts Instruction explosion for vector-{length,ref,set!} Allow peval to gnaw on string->symbol, symbol->string Improve compilation of make-vector without init Add resolve-primitives pass back to bootstrap Fix verify.scm for call-thunk/no-inline Fix specialization of the allocate-words family of instructions Bug-fix to devirtualize-integers pass Make integer devirtualization less eager Minor optimization in loop peeling Fix primitive reification for scm-set! / word-set!. Instruction explosion for make-vector Instruction explosion for /immediate variants of vector prims Mark word-ref and word-ref/immediate as producing U64 values CPS pass now expects exploded vector primitives Remove "ash" instruction. Remove now-unused make-vector et al instructions Add CPS compilation support for mutable-vector? Fix bug in struct-ref effects analysis CPS type analysis support for mutable vs immutable vectors Re-add compiler backend support for immutable vectors Compiler frontend support for vector mutability checks Minor compile-cps refactor for cons Expand pair-related primcalls Remove special optimizer and backend support for pairs Remove pair-related instructions Better compilation of vector constructors and initializers Improve make-vector compilation for known big sizes Sync IP before allocating closures Save VM compare result before calling out to hooks Remove obsolete rtl tests Lower box, box-ref, box-set! primcalls Remove box instructions Instruction explosion for struct-vtable Add support for raw gc-managed pointer locals Add optimizer and backend support for gc-pointer-ref Add raw u8-ref, etc instructions Rename gc-pointer-ref to pointer-ref Custom bv-u8-ref lowering procedure Instruction explosion for integer bytevector ref procedures Add f32-ref, f64-ref lowering procs Instruction explosion for bytevector setters Add assume-u64 and assume-s64 dataflow restrictions Instruction explosion for bv-length Remove optimizer and backend support for bv-u8-ref et al Remove bytevector instructions from the VM. Instruction explosion for struct-ref, struct-set! Introduce make-struct/simple Lower "make-struct/simple" to CPS Remove optimizer and backend support for struct ops Remove VM struct-ref, etc instructions Remove free-ref, free-set! Remove unneeded assembly shuffle routines. Use make-struct/simple in psyntax Use make-struct/simple in tree-il Add instrinsics to runtime Compile some generic arithmetic to intrinsic calls Remove specific instructions for add, etc from VM CPS conversion lowers string-length Add VM ops needed for string-ref Lower string-ref in CPS conversion Remove now-unused string-length, string-ref Add string-set! intrinsic Explode "string-set!" Remove string-set! VM op Instruction explosion for integer->char Remove integer->char op Instruction explosion for char->integer Remove char->integer from VM Remove dead code in CPS converter Add load-label instruction Add $code CPS expression type Remove unused make-closure opcode. string->number, etc intrinsics Remove string->number, etc opcodes Add string->number etc as macro instructions to reify-primitives Class-of is intrinsic Remove class-of opcode Remove load-typed-array, make-array opcodes Add scm->f64 intrinsic Slim heap-allocated flonums Add reifier for fadd/immediate. Instruction explosion for f64->scm Disable f64->scm instruction Remove scm->f64, f64->scm implementations scm->u64, scm->s64, scm->u64/truncate intrinsics Remove scm->u64, etc implementations u64->scm, s64->scm intrinsics Remove implementations of obsolete s64->scm, u64->scm insts logsub is intrinsic Remove implementation of logsub VM op Explode atomic box ops to new atomic instructions Remove implementation of atomic box ops Remove unused macros in vm-engine Fix width of operands to intrinsic call instructions Add support for dynamic-state-related intrinsics Intrinsics for dynamic state instructions push and pop dynamic state via intrinsics Remove old VM ops for fluid-ref et al lsh, rsh etc are intrinsics Remove implementation of lsh, rsh instructions VM calls out to heap-numbers-equal? through intrinsics VM calls "<?" through intrinsic. VM calls =? through intrinsic Remove unused macros in VM Mark call-scm<-scm-u64 as defining a result Add scm_maybe_resolve_module Add intrinsics for module operations Add cache-ref, cache-set! macro-instructions Instruction explosion for cached-module-box Instruction explosion for cache-current-module, cached-toplevel-box Remove backend support for cached-module-box et al. Compile "define!" via intrinsic Use intrinsics for top-level refs outside captured scopes Remove implementations of now-unused toplevel-box et al instructions Remove unused macro in vm-engine Remove unused vm_error_unbound Call out to expand_stack through new VM intrinsic Fix libguile subcomponent headers not to include <libguile.h> Move some definitions out of _scm.h Simplify definition of SCM_SYSCALL. Move "min" and "max" macros out of _scm.h Remove #ifdef cases for VMS and Cray. Remove unused getters for register backing store base Add configure check for auxiliary stacks Refactor handling of auxiliary stacks and setjmp/longjmp Move syscall-related private defines to their own header More _scm.h refactoring Remove _scm hack to undefine HAVE_STRUCT_TIMESPEC Refactor regarding internal detection of ia64 Inline definition of SIZEOF_SCM_T_BITS Remove _scm.h inclusion of config.h Remove errno.h include from _scm.h. Remove _scm.h verify.h inclusion Remove alignof.h inclusion from _scm.h Assume that if we have GCC, we have GCC >= 3.0. Require C99 to build Guile Remove error.h include from _scm.h. Remove _scm.h print.h include Move core validate macros to error.h Move number validators to numbers.h. Move more number validators to numbers.h. Remove unused macros Move list validators to list.h Remove public SCM_VALIDATE_NIM Move pair, null, nil, and boolean validators out of validate.h More validate.h devolution Devolve more validate macros Remove includes of validate.h. Deprecate libguile/validate.h Remove list.h from _scm.h Devolve boolean.h include. Devolve pairs.h Devolve gc.h Move gsubr.h include to snarf.h Devolve procs.h include from _scm.h. Remove gc.h from inline.h Remove threads.h from inline.h Move array-handle.h include out from inline.h Remove bytevectors.h include form ports.h Move struct.h include out of ports.h Remove threads.h include from ports.h Devolve vectors.h include from ports.h Remove <string.h> include from ports.h. Remove <stdio.h> from ports.h Remove <unistd.h> from ports.h Remove ports.h from inline.h Remove numbers.h from inline.h Remove error.h from inline.h Devolve numbers.h from _scm.h. Move scm_tc7_pointer snarfer out to foreign.h Move symbol snarfers to symbols.h Move subr snarfing macros to gsubr.h. Deprecate SCM_STATIC_DOUBLE_CELL snarf macro Move string-related snarfers to strings.h Devolve keyword-snarfing macros Devolve variable snarfers Remove mutex snarfers Devolve smob snarfers Simplify SCM_IMMUTABLE_CELL macros Remove snarf.h from _scm.h Devolve variable.h from _scm.h. Shuffle around inline C function implementation Define scm_t_wchar in one place Devolve threads.h from _scm.h. Remove modules.h from _scm.h. Devolve symbols.h from _scm.h Devolve foreign.h from _scm.h Devolve programs.h from _scm.h. Devolve strings.h Remove _scm.h Remove useless "classes: h_files" from Guile headers. Remove Emacs local variables comments in Guile source Remove unneeded memmove.c and strerror.c files Move SCM_C_INLINE_KEYWORD definition to inline.h Fix include in test-ffi-lib Use stdint.h limit macros Fix missing includes in tests. Deprecate pre-stdint.h limit macros Remove crufty support for 16-bit architectures. Move SCM_TICK definition to __scm.h. Move SCM_ARG1, etc definitions to error.h Minor __scm.h reformatting Inline tags.h into __scm.h Rename __scm.h to scm.h Rationalize guile-readline includes Make libguile header inclusion consistent within libguile c files Rationalize include order in C files Make .c copyright headers uniform Remove (C) from copyright statements libguile header files have uniform format for copyright declarations Update license notices in all C files Start to use C99 stdint in gen-scmconfig Replace uses of scm_t_int8, scm_t_uintmax, etc with stdint types Use ptrdiff_t instead of scm_t_ptrdiff Deprecate scm_t_uint8 and similar typedefs Add __scm.h placeholder Inline struct scm_vm into struct scm_i_thread Eagerly initialize thread VM; remove scm_the_vm VM gets VP from thread Fix intrinsics copyright line and include guards expand_stack intrinsic takes thread Move VM keyword argument parsing to happen via an intrinsic Add push-interrupt-frame VM intrinsic Give multiple-values objects a tc7 Add intrinsic for foreign-call Most header files use forward decl for union scm_vm_stack_element Reinstating undelimited continuations uses intrinsic Foreign-call intrinsic boxes errno Refactor continuation capture in VM Rename scm_i_thread to scm_thread Add intrinsic for call/cc compose-continuation uses an intrinsic Add rest-arg-length intrinsic. abort-to-prompt uses an intrinsic Refactors to abort-to-prompt implementation Optimize abort-to-prompt to avoid alloca Allow abort_to_prompt to avoid a longjmp VM throw uses intrinsics Add intrinsics for error conditions (wrong num args etc) Remove mention of vm-error from test suite Apply-non-program is an intrinsic Inline handling of non-program apply allocate-words intrinsic Compile current-module as intrinsic call Remove dedicated current-module instruction. Intrinsic for "prompt" bind-rest inst uses cons-rest intrinsic Use CALL_INTRINSICS helper in VM Refactor handling of active VM registers Minor scm_thread refactoring Intrinsics take registers from thread Remove "resume" arg from vm engine Minor optimizations to debug hook dispatch Microoptimizations to hook dispatch Refactor hook dispatch in VM Revert "Refactor hook dispatch in VM" Strip "get-jit-size" feature from lightning. Remove documentation from embedded GNU lightning Remove lightning unit tests Finish removing get-jit-size Beginnings of build integration of lightning and guile Remove lightning pkg-config file. Remove empty lightning m4 directory Remove some more of the lightning build machinery Further lightning integration work Remove disassembler support from lightning Refactor deps for built libpath.h Remove special cflags for obsolete Lightning targets Always enable assertions in embedded lightning Remove lightning configure snippet related to libdl Remove unused configure-time checks for x87, thumb, and sof float Remove unused AM_CONDITIONAL statements from lightning configure Add GUILE_ENABLE_JIT macro Wire JIT availability check into Guile configure Wire up lightning into libguile build Remove -Wswitch-enum from compile flags Fix compile warnings in jit_print.c Minor change to VM DSL Fix bad opcode in VM Begin structure for template JIT compiler Fix errors introduced when giving multiple-values objects a tc7 Make JIT compiler skeleton more terse Add support for reading ELF symbol table from C Prepare for frames having separate virtual and machine return addrs Reserve frame word for machine return address Rework VM approach to shuffling unknown numbers of args Fix stale stack frame clearing for frame size change Multiple-value returns now start from slot 0, not slot 1 Update frames.h comments. Add instrument-call, instrument-loop VM instructions Emit instrument-loop in loops. Emit instrument-entry before programs Fix function bound offsets of JIT data to be signed Rewrite subr implementation Revert "Add support for reading ELF symbol table from C" Fix bugs with primitive code allocator; expose internally Minor updates for Scheme runtime (statprof, backtraces) Alloc foreign procedures using primitive mechanism Add instrument-entry to continuations Consolidate apply hook to instrument-entry instruction Remove push continuation hook; return hook runs before FP pop VM hooks take no values Update NEWS for 2.2.3 Add missing include to adapt to recent merge from master Minor optimization in RESET_FRAME Rework program->ip mapping in VM to always call intrinsic Change call/cc inst to capture-continuation Add unpack-values-object intrinsic Invoke VM hooks through intrinsics Rework foreign-call trampoline Continuations capture machine code address Adapt JIT calling convention; continuations take mra from stack Update error-wrong-num-args intrinsic prototype Avoid needless 64-bit args on 32-bit machines for some intrinsics 64-bit intrinsic args and return values passed indirectly on 32-bit Define intrinsics for atomic ops Add instrumentation to VM builtins Add internal function mapping subr index to function Expose scm_vm_builtin_ref internally First implementation of a template JIT Manual JIT interface via %jit-compile Fix default code allocator in Lightning Fix bounds on compiler-emitted JIT metadata JIT compilation tweaks Fix frame popping in JIT Tweak to instrument-entry Add out-of-line handle-interrupts trampoline stub Add support for labels, and fix a bug in uadd/imm and usub/imm. Comments in the JIT Optimizations to subr-call Fix in-tree builds Fix load width of get-ip-relative-addr Minor refactors to jit.c 32-bit fix for emit_run_hook Fix r12 register spec for lightning with sysv x86-64 ABI Clear frame size after subr-call, return-values Fix bug in compile-alloc-frame Fix fp-ref, fp-set! helpers in jit for signedness Fix JIT compilation of bind-rest Fix again the unknown-filling of alloc-frame JIT refactor Fuse comparisons and branches in JIT Minor JIT refactor Bug-fix for alloc-frame and stack moving JIT: Store FP in register during procedure prolog/epilog JIT tracks register clobbers Maybe enter JIT when returning from interpreted functions Add fast paths to intrinsics Fix miscompilation for "abort" opcode Fix JIT compilation of call-with-prompt Fix JIT compilation of shuffle-down Fix jit function data for goto_continuation_code Fix JIT compilation of composable continuations Fix bind-kwargs JIT compilation Minor optimization in compile_alloc_frame JIT threshold controlled by environment variable More JIT debugging Fix compilation of compile_eq Minor 32-bit untag-fixnum optimization Add ability to stop JIT after N compilations. Prevent Lightning from stompling our registers Add configurable JIT logging levels JIT counter tweaks Add ability to tier up from within loops Fix assertion error running compile-file with threshold 0 Fix a memory leak in JIT Improve compute_mcode allocation logic Fix nonlocal abort to compiled continuation Improve JIT cleanup a bit Fix JIT compilation of [positional-]arguments<=? Add JIT fast paths for inum arithmetic Revert "<?" fast path for now Use custom JIT code allocator Fix compilation of handle-interrupts Refactor handling of lightning state Fix compilation of compare-and-swap Fix positional-arguments<=? compilation Fix JIT compilation of intrinsics that return doubles VM manages hook sets itself Remove hook intrinsics: hooks are just for the VM Micro-optimization of scm_vm placement in scm_thread Hook refactors Deoptimize to VM when hooks are enabled Fix scm_make_foreign_object_n. Fix emergency aborts to not expand the stack Turn on automatic JIT compilation by default Fix --disable-jit compilation Renumber instructions and bump objcode version Configure uses 2.3.x tags for version Fix case where running abort hook could trash registers Update comments in vm-engine.c Update history.texi. Update Conservative GC section of manual Update data representation chapter in the manual Update "A Virtual Machine for Guile" Update "Why a VM?" Update "VM Concepts" Update "Stack Layout" Update "Variables and the VM" Finish updating vm.texi Rename $closure to $const-fun Update compiler.texi Fix f32-set! JIT compilation Add manual section on JIT compiler Minor additional manual updates Update NEWS Fix use of uninstalled header by installed headers Comment out some unused definitions Remove unimplemented decl in script.h Deprecate scm_find_executable Fix GCC warning with %char-set-dump. Remove jit_names.c. Revert "Remove jit_names.c." Fix lightning build with jit_names.c Fix unused local warning in vm-engine.c Fix -Wunused-function error for x86 not on sun Fix guile-config for Guile 3.0 Fix linker bug that could fail to find the shstrtab Fix JIT compilation on 32-bit targets Fix JIT register state tracking for use of SP or FP as temp Better ursh/ulsh/srsh JIT on 32-bit platforms Fix JIT of 64-bit comparisons on 32-bit architectures Only enable JIT by default on x86-64 Bump prerelease version numbering to 2.9.x Fix GUILE_ENABLE_JIT after latest change GNU Guile 2.9.1 Update version.texi Update .gitignore Strip "get-jit-size" feature from lightning. Remove example .c files from documentation Inline body.texi and version.texi into lightning.texi Move lightning.texi up to root, and remove Makefile.am Archive lightning ChangeLog Remove TODO Remove bits of .gitignore no longer needed Remove autotools Rename include to jit.h, move all files to jit/ Rename lightning.c to jit.c Remove -sz.c files Simplify file names Remove unneeded bits of lightning Create beginning of stripped-down lightning interface Replace jit_int32_t, etc with stdint types Add endian.h Update call/receive machinery Trim unneded bits from jit.c "extern"-related cleanup, and further implementation Finish conversion to stdint types Update gitignore Really finish stdint conversion Remove needless PUBLIC/HIDDEN definitions Inline private.h into jit.c Make _rvs array static-const Beginnings of port of x86 to new design Fix crypt-on-glibc test error Fix linker.test Fix race when expanding syntax-parameterize and define-syntax-parameter Implementation of new design Add "addi" test Better loading of args to registers; add tests Convert tests to jit_load_args Flesh out README Add note about current status Add new tests Add more tests Tests for some div operations Add more div tests Add remr tests Add bitops tests Add lsh/rsh tests Add comr/negr tests Rework naming of test suite files Add mov_addr test Add extr tests Add bswap tests, and fix missing breaks in jit_load_args Add ldr tests Add ldi tests Add ldxr tests Add ldxi tests Add str tests Add sti tests Add stxr tests Add stxi tests Add .gitlab-ci.yml Tweak test build to run faster, and adapt CI Fix stxi_d bug Add bltr test Add more integer reg/reg branch-and-compare tests Add floating-point reg/reg compare-and-branch tests Add int/int reg/imm compare-and-branch tests Add anti-float comparison tests Add unordered float compare-and-branch tests Add flag-checking test-and-branch tests Add add-and-branch-on-overflow tests Add sub-and-branch-on-overflow tests Add some nop and jmp tests, and fix a hazard with jmpi/calli Add push/pop test Add abs/sqrt tests Add truncr_[df]_[li] tests Add float/double cast inst tests Add int->float tests Add movi_[df] tests Remove old tests get_temp_{gpr,xpr} returns a jit_{gpr,fpr}_t Implement arg shuffling for jit_call{i,r} Provide some type safety for jit_gpr_t and jit_fpr_t Clean up stack after calls Add subdir-objects option to libguile makefile. Change headers and files to be named "lightening" instead of "jit" Adapt to lightning -> lightening name change Allow users to pass custom allocators Fix jit_reset to be useful Checkpoint for lightning to lightening conversion Add jit_same_{gprs,fprs} helpers Remove -Wdeclaration-after-statement Fix jit.c compilation jit: Fix inter-instruction relocs. Fix implementation of jit_{gpr,fpr}_is_callee_save Fix reloc for jmpi and calli Fix jit_gpr_is_callee_save usage Fix JIT bugs Add assert for jit_address Fix some aspects of instruction mcode addresses Support immediate arguments More various JIT fixen Minor JIT cleanups JIT fixes for arena overflow Fix arena expansion logic Fix compilation of call-scm<-u64 Support spilling args to stack Allow test suite to test multiple targets. Add support for "make test-ia32" in tests/ Fix lightening name Simplify API for loading call arguments Add proper parallel-moves solver Add support for operand addends Adapt to new lightening call API Fix a JIT bug Fix apply_addend bug Simplify register representation Renumber x86 registers Align stack on 64-bit targets for calls Re-enable fixnum less-than JIT fast-path Lower default JIT threshold as JIT is cheaper now Simplify register representation again Simplify register representation even more Adapt to changes in upstream lightening Move jit_move_operands etc to common lightening.c file Track frame size to more reliably align stack before calls Make jit_align_stack and jit_shrink_stack public Fix backtraces with call-with-values during bootstrap Remove unused jit_epilog definition Implement reloc shortening, and remove unused functionality Ensure stack alignment in JIT code. Inline some internal definitions into backend-specific files Account for saved return address when locating args Fix lightening to compile on 32-bit x86 Use jit_word_t for register-sized values instead of intmax_t Fix compile warnings for 32-bit tests Fix 32-bit movi_d Make jit_cpu private Simplify 64/32 concerns in x86-cpu.c Remove most __X64_32 code Add facility to enter and leave JIT ABI Small bug fixes for ia32 Fix jit_leave_jit_abi to pop correct registers Fix ABI of arg to extr_d_f test Add {enter,leave}_jit_abi calls in tests Add test for JIT callee with many args Mark test files as precious to prevent them from being deleted by make Add x86-32 tests to default test target Stack alignment takes saved return address into account Align stack before entering JIT code Adapt to lightening changes Enable JIT on 32-bit x86 Fix errors in 32-bit JIT support Unget temp xpr after mem->mem addend fixup Fix byte stores on x86-32 Fix unneeded stack alignment. Fix u64-ref JIT on 32-bit Stack alignment is 16 even on x86-32 Attempt to pop x87 stack Remove ia64 (itanium) support Remove alpha support Remove hppa support Remove Sparc support Fix eta-reduction of prompts Refactor to move temp register acquire to core Refactor some bits from x86 to lightening First pass at aarch64 assembler port Refactor to add support for constant tables, shifted relocs Rework register saving to avoid push/pop Allow a backend to have multiple temporary registers Fix GPR temporary selection Fix compilation on aarch64 Fix enter/leave JIT ABI Fix a couple bugs related to aarch64 literal pools Aarch64 backend avoids needless temporary register allocation Remove jit_nop Add support for aarch64 in CI Fix dpkg --add-architecture invocation Fix YAML for CI Attempt to fix CI on Debian Attempt to fix CI on Debian Attempt to fix CI on Debian Attempt to fix CI on Debian Attempt to fix CI on Debian Attempt to fix CI on Debian for AArch64 Update README and guix invocations in test suite Remove software floating-point ARMv7 support; ARMv7 test env Remove unused jit_{gpr,fpr}_is_callee_save Beginnings of ARMv7 backend Port of arm-cpu.c to current lightening Beginnings of VFP port to lightening ARMv7 backend compiling without warnings ARMv7 backend passing all tests! Add ARMv7 testing to CI Attempt to get CI working on ARMv7 Fix CI on ARMv7 Update README Fix bounds checking on negative ldr offsets for aarch64 Avoid using x18 on AArch64 Clear missing bit from literal pool Clear literal pool more thoroughly Fix allocator passed to lightening Fix typo in previous commit, doh Allow jit_end to fail Expose API to bless function pointers Bless enter_mcode as a function pointer Fix literal pool emission on armv7 Various fixes for as-needed emission of literal pool AArch64 fix Avoid recursive pool emit for aarch64; add another overflow check Allow add_pending_literal to return false Enable JIT on aarch64 and armv7 Silence "unused" warnings Mark a couple functions as maybe-unused. Update NEWS Add includable automake file Reference Lightening instead of GNU Lightning Bump version to 2.9.2 Switch to use atomic_compare_exchange_strong Correctly handle overflow when emitting literal pools Add atomic operations Use new atomic instructions from lightening Inline the atomic intrinsics Fix atomics usage in handle-interrupts JIT. Fix accidental change to ARMv7 ldr Add breakpoint instruction Revert "Fix atomics usage in handle-interrupts JIT." Revert "Inline the atomic intrinsics" Reapply atomics inlining Dynamically assert functions start with instrument-entry Remove check for instrument-entry Avoid saving IP for <? fast-path Add bind-optionals instruction Allow for bind-optionals without alloc-frame VM does not initialize stack frames Add compiler support for eliding closure bindings Add support no closure in $callk Enable closure elision. Fix RTL tests for recent arity change Fix intmap-intersect edge case jit: Direct tail calls assert that target can have mcode Speed up returns in JIT Add jmpi_with_link instruction push/pop of link register does not affect stack size on x86 Use call/return instructions for non-tail calls Fix compilation on GCC 5.5 Rearrange scm_thread for better locality Inline freelist vectors into scm_thread Add an inlined jit fast-path for allocate-words/immediate Update NEWS for 2.9.3 Revert scm_c_make_char rename Fix calls to handle-interrupts trampoline on ARMv7 Fix some compiler warnings on 64-bit builds GNU Guile 2.9.3 (alpha). Add support for optimized unboxed abs and sqrt Split graph utilities out of (language cps utils) Implement "Fixing Letrec (reloaded)" Run fix-letrec before peval Update NEWS. Update peval tests for fix-letrec Refactor `format' to use when/unless conventionally More format refactors More format refactors More format refactorings. Fix bug in which codegen accessed data beyond end of stack Add "mod" field to tree-il toplevel ref, set, define Simplify the define-primitive-expander macro Add primitive support for working with module variables Add letrectify tree-il pass Add notion of declarative modules Enable letrectification Skip tests that don't work under letrectification Fix coverage test for top-level binding optimization Define missing shuffling assembler for string-set! et al Disable some JIT compilation code when JIT configured out Fix the jitless fix Unbox floor/ceiling and trigonometric functions where possible Revert "Revert scm_c_make_char rename" Letrectify only on -O2; update docs Allow mixed local definitions and expressions Update documentation for mixed definitions and expressions Further NEWS tweaks Fix fatan2 intrinsic initialization Fix out-of-memory test for top-level inlining GNU Guile 2.9.4 (alpha). Compiler allocates boxed flonums in unmarked space Fix bug in CSE auxiliary definitions Emit warning when using "load" in declarative modules At optimization level -O3, seal declarative module-private bindings Optimize fixnum or s64 -> f64 conversions Use "G_" as the conventional alias for gettext Define top-level bindings for aux syntax: else, =>, _, ... Add documentation for else, =>, _, ... aux syntax Update NEWS for 2.9.5 New function: install-r6rs! Add --r6rs command-line option Add --r6rs NEWS Better R6RS compatibility Fix doc syntax error Adapt ftw.test for pending test-suite changes Remove "vm" tests Avoid mutating arguments to resolve-interface (ice-9 null) also re-exports core aux syntax Deprecate passing a non-zero size to make-module (ice-9 null) also exports aux syntax, syntax-rules (ice-9 safe-r5rs) fixes for bound aux syntax Extend `import' to allow R7RS-style srfi references Refactor PEG records Remove (ice-9 channel) Re-implement (ice-9 gap-buffer) records in terms of srfi-9 Deprecate two-arg `record-constructor' Fix deprecated 1-arg `make-module' in tests Allow records to be subtyped Record accessors respect subtyping SRFI-9 uses make-record-type make-record-type does more validation on the fields Rebase srfi-35 conditions on top of make-record-type Fix one remaining use of make-record-type with string type name Change record type "flags" field to "properties" Guile `make-record-type' supports non-generative definition Rename final? record type flag; add support for opaque? Add support for immutable fields in core records Add record-type-parent definition. Rebase R6RS records on top of core records Remove circularity in r6rs by rebasing conditions on core records Add `record-type-has-parent?'. Add (ice-9 exceptions) module Rebase SRFI-35 on top of (ice-9 exceptions) Move adapter between "throw" and "raise" exceptions into core Move false-if-exception down in boot-9 Move exception-handling routines after records in boot-9 Move the core of exception objects into core Move exceptions with key and args to core Remove boot "catch" definition. Rebase throw/catch on top of raise-exception/with-exception-handler Update documentation for with-exception-handler et al SRFI-18 uses core exceptions Update NEWS for records and exceptions work Allow equality between arrays of vu8 and u8 Add initial implementation of R7RS modules Add install-r7rs!, like install-r6rs! Add r7rs test Add expected failure for R7RS test due to https://bugs.gnu.org/38235 Add R7RS XFAILs due to https://bugs.gnu.org/38236 (datum labels) Add R7RS xfails due to https://bugs.gnu.org/38237 (i/o exn types) Add R7RS xfails due to Guile's ( . 42) syntax extension Add R7RS xfails due to a restriction in hungry-eol-escapes (#38239) Add R7RS documentation and --r7rs command-line option Add NEWS for R7RS Install exception converters and printers from boot-9 Fix texinfo in r7rs.texi GNU Guile 2.9.5. Fix stack overflow if printing a pre-boot error throws an error Fix port-position documentation Fix range inference for right-shifts Fix frame-call-representation for callees without closures Fix range inference on division in unreachable code Associate #:replace info with modules, not variables Add guile-3, r6rs, r7rs cond-expand features Add --r6rs and --r7rs options to "guild compile" Propagate replacement flag for autoload interfaces Allocations and raw mutating operations restrict to mutable types Effects analysis treats the fixed parts of objects specially Update NEWS for Guile 2.9.6 GNU Guile 2.9.6 (beta) Fix resolve-r6rs-interface to propagate replacement flags Fix JIT tier-up from within loops for already-JIT-compiled functions Allow for inexact integers in quo, rem, and so on Reduce quo, rem, mod for power-of-two divisors Remove vm->sp_min_since_gc Add infrastructure for out-of-line JIT compilation of slow paths Move add/immediate, sub/immediate slow paths out of line Move add, sub slow paths out of line Move handle-interrupts slow path out of line Move receive slow path out of line Move receive-values slow path out of line Move assert-nargs-ee slow path out of line Move assert-nargs-ge slow path out of line Move alloc-frame slow path out of line Add subr-call out-of-line slow path Add out-of-line slow path for compose-continuation Add out-of-line slow path for abort Move assert-nargs-le slow path out of line Move allocate-words/immediate slow path out of line Move allocate-pointerless-words/immediate slow path out of line Add fixnum fast-path for = Move less? slow path out of line Document JIT environment variables Update NEWS Avoid throwing exceptions during early boot if stdin is closed GNU Guile 2.9.7. Fix abort_to_prompt bug if dynwind leave thunk expands the stack Update NEWS GNU Guile 2.9.8 (beta). Update compiler.texi and history.texi Mention WebAssembly in status section Fix mips32r6 bug Re-implement `guard' Update NEWS with details on guard and autoloads. Fix build on 32-bit systems with JIT support Fix bug in closure conversion Add NEWS entries Support R7RS define-library Fix peval bug that ignored excess args Optionally allow duplicate field names in core records Fix typos in previous commit. Update NEWS Bump objcode minor version in preparation for new stable series Bump user-visible copyright years to 2020 GNU Guile 2.9.9 (beta). Bump manual year, and fix NEWS typo Update NEWS Mention Mark Weaver in Guile history section Wording tweak to history.texi Update REPL copyright year to 2020 Declarative variables optimization limits eta-expansion Add eta-expansion pass after peval Disable eta-expansion in letrectification Update release.org Prepare 3.0 versioning Fix version computation for v3.0 Fold (logior 0 INT) to INT Add type checkers for lsh/immediate and rsh/immediate Ensure 32 bytes of stack are reserved on 64-bit Windows targets Switch CI to use Debian stable Better debugging in jit.c Fix bug restoring a JIT continuation from the interpreter Add support for perf map creation GUILE_PKG finds guile-3.0 Fix fixpoint computation in compute-significant-bits Deprecate bitvector-ref on array slices Replace bit-count with bitvector-count Replace bit-position with bitvector-position Replace bit-set*! with bitvector-set-bits! / bitvector-clear-bits! bitvector-bit-set? / bitvector-bit-clear? replace bitvector-ref bitvector-set-bit! / bitvector-clear-bit! replace bitvector-set! bitvector-set-all-bits! / bitvector-clear-all-bits! replace bitvector-fill! bitvector-flip-all-bits! replaces bit-invert! bitvector-count-bits replaces bit-count* Deprecate useless C bitvector interface Prefer C-like interfaces for scm_c_bitvector_{set,clear}_bits_x Deprecate scm_bitvector, scm_make_bitvector, scm_bitvector_p Remove unused analyze-lexicals function Add intrinsics for a baseline compiler Ensure <prompt> handler is values handler Remove unused (language tree-il canonicalize) Export emit-shuffle-down for baseline compiler Add baseline compiler Debugging names in baseline compiler; emit/immediate? fixes Avoid shuffle-down for tail calls Fix baseline compilation of conditionals Fix baseline compilation of let-values and prompt Fix prompt compilation Update (system base compile) header Remove compilation order cache Slight (system base compile) refactor Use more `match' in (system base compile) Rework compile-fold Add #:optimization-level, #:warning-level compile keyword args Add language-specific analysis pass to compiler infrastructure Wire up simplified warning levels in "guild compile" Warning and optimization levels always small integers Define new "lowering" phase in compiler Sketch of how to choose different compiler based on -O0 Add compiler chooser implementation; fix bugs with previous commit Wire up the baseline compiler to -O0 Fix parens in .dir-locals.el Fix baseline compiler bugs Rename "lookup" intrinsic to "module-variable" Add new lookup, lookup-bound intrinsics Top-level lookups raise exceptions in run-time Use lookup, lookup-bound in baseline compiler Fix kw initializer bug in baseline compiler Fix compilation of prompt in tail context Fix baseline canonicalization of reifying prompts Test suite compile-and-eval tests run -O0 and -O2 Fix "fail" helper in guild compile Declare #:cps? as an available optimization Fix free var computation in baseline compiler for lexical set! guilec can be parameterized by GUILE_OPTIMIZATIONS, defaults to -O2 Fix baseline miscompilation of < Fix baseline compilation error for make-struct/simple Baseline compiler: add pop-fluid primitive. Fix "cons" compilation in baseline compiler in some cases Fix JIT asserts with different code generated by baseline Fix module capture for closures in <fix> Reload FP if needed in bind-rest also Improve tail recursion in compiler Fix shuffling assembler for new primcalls Switch to baseline compiler for bootstrap/ Avoid having "guild compile" load optimizers Emit handle-interrupts in baseline compiler Slight tweaks to bootstrap order Baseline O(1) access to frame-base env Baseline compiler emits source locations Baseline FIXME's are done :) Delay loading CPS unless CPS compiler used Punt CPS compiler to end of bootstrap Whoops, fix bug in tree-il choose-compiler Clean up NEWS for bitvectors. Update documentation on <language> Update NEWS for baseline compiler Slight optimization to baseline compiler Punt more CPS compiler until later in bootstrap Fix optimizers after language lowerer refactor Minor module/Makefile order tweak Bump objcode minor version Another minor module compile order tweak Add with-lexicals helper; fix bug in (equal? #t (foo) #t) More robust reduction of equal? and eqv? Fix ,optimize to be independent of tree-il Tree-IL lowerer only loads needed optimizations Update match's no-matching-pattern code to use "throw" Fix truthy expression analysis in CSE Slight optimization to invert-bijectiono Renumber before CSE Refactor CSE to take advantage of RPO numbering Refactor CSE to analyze and transform in a single pass CSE eliminates expressions at continuations Thread flow analysis through CSE pass Macro fix to CPS build-term Add indentation rule for let/ec Eager graph pruning in CSE Use intmaps in CSE equivalent expression table CSE refactor CSE forwards branch predecessors where the branch folds CSE forward-propagates changes to CFG Fix typo causing performance problems!!! Fix bug where private bindings would never be sealed Change -O1 compiler to use baseline and also resolve primitives Statprof reports primitive names Make CSE more robust Fix undefined behavior in ARMv7 assembler Fix zeroing of literal pool entries Fix unused variable warning for no-literal-pool targets Add jtable instruction Fix patch_veneer on aarch64 Ensure tail caller and callee in jmpi test have compatible ABI Add support for emitting inline data and table switches Add JIT implementation for jtable Allow jit_begin_data to declare max data size Literal pools have word-alignment, not u64-alignment Update use of jit_begin_data API Spill whole words to stack, even for uint8_t args Improve code generation for eq? on immediates Add sign-extending make-immediate instruction Add eq-immediate? instruction Rework the way immediate encodings are calculated. Baseline compiler emits eq-immediate? as appropriate CPS compiler reduces eq? on constant to eq-constant? Fix JIT compilation for jtable Fold eqv? to eq? on exact integers according to target fixnum range Add $switch CPS term kind Add new pass to optimize branch chains to table dispatch CSE computes online map of constant values, uses it to fold branches Bump objcode minor version to 4 Bump DEFAULT_INITIAL_HEAP_SIZE Tweak to initial heap size selection Clean up srcprops implementation Update NEWS Move copy-tree to (ice-9 copy-tree); deprecate main binding Fix source location bug for neoteric exprs introduced by refactoring New warnings: -Wuse-before-definition, -Wnon-idempotent-definition Fix jmp-shortening on x64 when target within instruction. Update NEWS Bump version to 3.0.5 Bump copyright years for user-visible copyright messages Close accumulating output ports after use Add call-with-input-bytevector, call-with-output-bytevector Finish call-with-port cleanup Document call-with-port Document new interfaces Update Gnulib to v0.1-4379-g2ef5a9b4b Update environ_locale_charset gnulib patch Replace stftime gnulib module with nstrftime Replace libltdl with raw dlopen, dlsym Optimize eof-object? Add "read" implementation in Scheme Fix (ice-9 read) for #!r6rs Fix (ice-9 read) for #\" Re-use string output port within read Micro-optimization to delimiter? More read micro-optimizations Scheme read respects "positions" reader option Improve read error reporting Fix read.scm bugs related to nonstandard reader options Use lists instead of string ports to accumulate results Syntax objects have "source" field psyntax preserves source via syntax objects Adapt uses of make-syntax to preserve syntax Document datum->syntax extensions Implement read-syntax Add quote-syntax Remove top-marked? optimization from psyntax Fix module scoping for datum->syntax with no identifier Ensure that (syntax ()) results in () Fix read-syntax on vectors and arrays Read Scheme via read-syntax Commit updates from newest autoconf Optimize run-time init and relocation procedure Add syntax-sourcev Assembler writes vector source properties Psyntax uses sourcev internally read-syntax uses vector source representation Shunt syntax-sourcev to (system syntax internal) Fix Scheme read without source positions Update NEWS Fix bug reading arrays with lengths Remove textual-ports include from (ice-9 read) Invalid charset at EOF does not cause decoding error Fix reader extensions in Scheme reader Fix reading neoteric exprs in Scheme reader Fix unterminated #!...!# error message in Scheme reader Relax srfi-105 source expectations Read-in-scheme replaces boot "read" definition Scheme reader fully replaces C reader primitive-read handles only default reader options More read.c simplifications Remove read extension support from primitive-read Fix length of \U hex escape in new reader Fix some srfi-105 parsing errors Fix reading #c32 vectors Fix reading improper curly-infix expressions Syntax objects print with source locations Update documentation to incorporate read-syntax Update reference for GUILE_EXTENSIONS_PATH Fix reading of #true / #false Fix up source properties section in manual Fix reading "#;", "'", and similar premature-EOF situations Fix reading #!!# More informative error message if GMP not found Don't expose mini-gmp to users Only install libgc as GMP allocator with mini-gmp Update NEWS for --enable-mini-gmp Update NEWS Document quote-syntax Document syntax-sourcev Add mkstemp; undocument mkstemp! Revert "Handle CRLF and Unicode line endings in read-line" Don't force installation of GMP allocators in guile shell Fix buffer overread in string-locale-ci=? and related functions Adapt test for string-locale-ci=? Fix buffer overread in string-locale<? Fix recent i18n tests Update NEWS Optimize letrec* binding order in fix-letrec Mark some elisp runtime modules as non-declarative Allow $kargs as entry of $kfun New pass: elide-arity-checks Fix comments in cps/compile-bytecode Fix bugs introduced when allowing $kfun -> $kargs Fix cached-module-box cache keys Simplify module variable lookup slow-path Fix error when argument to < not a real Fix CPS optimizations to allow callk in front half CPS conversion calls module variables through trampolines Allow contification for $callk Bump minor objcode version for new intrinsics Allow users to force gmp to use libgc Fix closure-conversion bug for SCC with all free vars pruned Add GUILE_INSTALL_GMP_MEMORY_FUNCTIONS to NEWS; use at build-time Update NEWS Add ice-9/read.scm to extra_dist Bump GUILE-VERSION Fix duplicates handlers for interfaces that use interfaces Fix line and column for read errors Fix compile-psyntax.scm -- canonicalize pass not needed Fix syntax-violation, which was passing vectors instead of alists Fix syntax test Fix bug for read-syntax on ( . args) Fix tree-il effects analysis for prompts Fix bug if call-with-prompt tag not a lexical Fix R7RS include-library-declarations and cond-expand in define-library Include config.h in mini-gmp.c, if present Optimize truncate-bits Minor tweak to truncate-bits Update NEWS Update NEWS Bump version to 3.0.7 Bump objcode version Letrectify links module defs with uses Add pass to resolve free toplevel references in declarative modules Add support for recording inlinable module exports Implement cross-module inlining Fix bug in eq-constant? propagation in CSE if kf == kt Hotfix to unify (x ...) patterns in match Add frame-local-ref / frame-local-set! support for type 'ptr Move live variable computation routines to utils and graphs. Allow unchecked functions to have unboxed arguments Add CPS pretty-printer Add ,optimize-cps REPL meta-command Allow primcalls with multiple defs Use more logtest in cse.scm Add primitive alias analysis to CSE Refactor compile-bytecode Refactor send and receive shuffles in slot allocation Allow callk to continue to kargs Add new pass to optimize away return value count checks Add -Ooptimize-known-return-types at -O2 Fix type confusion in heap-numbers-equal? calls from VM -Oresolve-free-vars pass gracefully handles failed autoloads. Avoid quadratic behavior in id-var-name Add new integers.[ch] Implement odd? and even? with new integer lib Implement abs with new integer lib Implement floor-quotient with new integer lib Implement floor-remainder with new integer lib Implement floor-divide with new integer lib Implement ceiling-quotient with new integer lib Implement ceiling-remainder with new integer lib Implement ceiling-divide with new integer lib Implement truncate-quotient with new integer lib Implement truncate-remainder with new integer lib Implement truncate-divide with new integer lib Implement centered-quotient with new integer lib Implement centered-remainder with new integer lib Implement centered-divide with new integer lib Implement round-quotient with new integer lib Implement round-remainder with new integer lib Implement round-divide with new integer lib Implement gcd with new integer lib Implement lcm with new integer lib Implement scm_logand with new integer library Implement scm_logior with new integer library Implement scm_logxor with new integer library Implement scm_logtest with new integer library Implement scm_logbit_p with new integer library Implement scm_lognot with new integer library Implement scm_modulo_expt with new integer library Reimplement integer-expt in Scheme Implement scm_ash with new integer library Implement scm_bit_extract with new integer library Implement scm_logcount with new integer library Integer library takes bignums via opaque struct pointer Implement scm_integer_length with new integer library Implement integer-to-string with new integer library Simplify scm_bigprint Build scm_integer_p on scm_is_integer, not vice versa Reimplement = on integer lib, clean up scm_num_eq_p Clean up <, reimplement in terms of integer lib positive?, negative? use integer lib Simplify implementation of min, max Clean up scm_sum Simplify scm_difference, use integer lib Simplify scm_product, use integer lib Remove support for allowing exact numbers to be divided by zero Clean up scm_divide Fix deprecated bit-count* when counting 0 bits Fix scm_integer_to_double_z to always round; clean ups Reimplement scm_is_{un,}signed_integer for bignums Reimplement scm_from_int8 etc Reimplement scm_{to,from}_{int32,uint32} Reimplement scm_{to,from}_{int64,uint64} Implement scm_{to,from}_wchar inline Remove unused conv-{u,}integer.i.c scm_to_mpz uses integer lib Reimplement exact-integer-sqrt with integers.[ch] Refactor scm_sqrt in terms of integers.[ch] Expose frexp from integers lib Remove dead bignum frexp code from numbers.c divide2double refactor Simplify scm_exact_integer_quotient Remove last non-admin SCM_I_BIG_MPZ uses in numbers.c Simplify magnitude, angle Use scm_integer_to_double_z in numbers.c instead of big2dbl Avoid scm_i_mkbig outside numbers.c. Start porting srfi-60 off the bad bignum interfaces Finish srfi-60 port off old scm mpz API scm_to_ipv6 uses scm_to_mpz Bignums avoid both custom GMP allocator and finalizers take_mpz optimization Fix bug when making mpz from 0 Re-rewrite integer-expt in C Optimize scm_integer_mul_zi Optimize scm_integer_mul_zz. Less pessimal scm_integer_sub_zi Start to optimize scm_integer_sub_iz Avoid bignum clone in scm_integer_sub_zz Optimize bignum add to avoid temporary allocations Optimize bignum subtraction Optimize scm_integer_mul_ii Optimize integer-expt for fixnums Optimize logand against a positive inum Remove dead code in scm_integer_inexact_sqrt_z Fix inlinable-exports bug for pure modules peval cross-module-inlining gracefully handles missing interface Add -ftlo support Rework bootstrap to be reproducible Fix reproducibility for inlinable-exports Prebuild fewer files Avoid source properties in psyntax Slight bignum-fixnum multiplication optimization Update NEWS NEWS fixup Update unicode tables to Unicode 14.0.0; initial charsets immutable Minor NEWS tweaks GNU Guile v3.0.8 Exclude ChangeLog from assert-no-store-file-names distcheck rule Arun Isaac (9): Fix minor typo in the PEG documentation. doc: Document (ice-9 match) macros. web: Export http-request. doc: Replace square brackets with round brackets. doc: Fix minor typo in the HTTP headers documentation. doc: Improve content-range HTTP header documentation. doc: Document default delimiter of string-join. doc: Mention (ice-9 time) module path. Fix typos in SRFI docs Asher Gordon (1): Replace a line which was accidentally removed. Chris Marusich (1): Clarify the manual's "Processes" section. Christopher Allan Webber (1): Add SRFI 71: Extended LET-syntax for multiple values. Christopher Baines (1): http: Support CONNECT and PATCH HTTP methods. Dale P. Smith (1): Add 'movi' test. Daniel Llorens (52): Remove scm_generalized_vector_get_handle Add $(builddir) to include path in libguile/Makefile.am Fix 32/64 b…

 

main

 

3.0.8-49

 

3.0.8-47

￼￼

phmccarty authored and clrpackages committed on Mar 22 

1 parent 13d127f commit d4fe5be359fef9e39a1a116ce2069fbd4c729c70

Show file tree

 

Hide file tree

Showing 20 changed files with 3,919 additions and 2,733 deletions.

SplitUnified

 18  0001-Add-Require-for-guile-on-bdw-gc.patch → ...Add-missing-requirements-to-pc-file.patch

@@ -1,22 +1,24 @@From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001From: Karthik Prabhu Vinod <karthik.prabhu.vinod@intel.com>From: Karthik Prabhu Vinod <karthik.prabhu.vinod@intel.com>Date: Fri, 8 Jan 2021 13:43:54 -0800Date: Fri, 8 Jan 2021 13:43:54 -0800Subject: [PATCH] Add Require for guile on bdw-gcSubject: [PATCH] Add missing requirements to pc file

Signed-off-by: Karthik Prabhu Vinod <karthik.prabhu.vinod@intel.com>Signed-off-by: Karthik Prabhu Vinod <karthik.prabhu.vinod@intel.com>Signed-off-by: Patrick McCarty <patrick.mccarty@intel.com>------ meta/guile-2.2.pc.in | 1 + meta/guile-3.0.pc.in | 2 ++ 1 file changed, 1 insertion(+) 1 file changed, 2 insertions(+)

diff --git a/meta/guile-2.2.pc.in b/meta/guile-2.2.pc.indiff --git a/meta/guile-3.0.pc.in b/meta/guile-3.0.pc.inindex c6d12b5..2e6e800 100644index c6d12b5..3a11e49 100644--- a/meta/guile-2.2.pc.in--- a/meta/guile-3.0.pc.in+++ b/meta/guile-2.2.pc.in+++ b/meta/guile-3.0.pc.in@@ -22,6 +22,7 @@ guile=${bindir}/@guile@@@ -22,6 +22,8 @@ guile=${bindir}/@guile@ Name: GNU Guile Name: GNU Guile Description: GNU's Ubiquitous Intelligent Language for Extension Description: GNU's Ubiquitous Intelligent Language for Extension Version: @GUILE_VERSION@ Version: @GUILE_VERSION@+Requires: bdw-gc+Requires: bdw-gc+Requires.private: gmp libffi Libs: -L${libdir} -lguile-@GUILE_EFFECTIVE_VERSION@ @BDW_GC_LIBS@ Libs: -L${libdir} -lguile-@GUILE_EFFECTIVE_VERSION@ @BDW_GC_LIBS@ Libs.private: @LIB_CLOCK_GETTIME@ @LIBGMP@ @LIBLTDL@ @LIBFFI_LIBS@	\ Libs.private: @LIB_CLOCK_GETTIME@ @LIBGMP@ @LIBLTDL@ @LIBFFI_LIBS@	\ @LIBUNISTRING@ @GUILE_LIBS@ @LIBICONV@ @LIBINTL@ @LIBSOCKET@		\ @LIBUNISTRING@ @GUILE_LIBS@ @LIBICONV@ @LIBINTL@ @LIBSOCKET@		\

 45  0002-Mark-test-out-of-memory-as-an-expected-failure-for-n.patch

@@ -0,0 +1,45 @@From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001From: Rob Browning <rlb@defaultvalue.org>Date: Tue, 20 Feb 2018 23:58:09 -0600Subject: [PATCH] Mark test-out-of-memory as an expected failure for now
Since this test has been failing for a long time on variousarchitectures, mark it as expected to fail for now so that we'll stillrun it and can see the results, but won't be blocked by it.
There are known issues with the test upstream, and at least in some pastcases it's been possible to reproduce the failure quickly by runningtest-suite/standalone/test-out-of-memory in a loop.
Bug: https://debbugs.gnu.org/29464Bug-Debian: https://bugs.debian.org/880148Bug-Debian: https://bugs.debian.org/966300Bug-Debian: https://bugs.debian.org/966301
[Patch from https://sources.debian.org/data/main/g/guile-3.0/3.0.7-1/debian/patches/0005-Mark-test-out-of-memory-as-an-expected-failure-for-n.patch]
Signed-off-by: Patrick McCarty <patrick.mccarty@intel.com>--- test-suite/standalone/Makefile.am | 3 ++- 1 file changed, 2 insertions(+), 1 deletion(-)
diff --git a/test-suite/standalone/Makefile.am b/test-suite/standalone/Makefile.amindex e87100c..66bb3a5 100644--- a/test-suite/standalone/Makefile.am+++ b/test-suite/standalone/Makefile.am@@ -24,6 +24,7 @@ include $(top_srcdir)/am/snarf
# initializations so we can use += below. TESTS =+XFAIL_TESTS = noinst_LTLIBRARIES = check_PROGRAMS = check_SCRIPTS =@@ -299,6 +300,6 @@ check_SCRIPTS += test-stack-overflow TESTS += test-stack-overflow
check_SCRIPTS += test-out-of-memory-TESTS += test-out-of-memory+XFAIL_TESTS += test-out-of-memory
EXTRA_DIST += ${check_SCRIPTS}

 24  0002-Revert-Fix-build-on-platforms-where-the-stack-grows-.patch

Load diff

This file was deleted.

 57  0003-Fix-fixpoint-computation-in-compute-significant-bits.patch

Load diff

This file was deleted.

 77  A8803732E4436885.pkey

@@ -0,0 +1,77 @@-----BEGIN PGP PUBLIC KEY BLOCK-----
mQINBFmLEIkBEAC7U27v6jysuSadTd8WK0lTnoK4TueYHey17+KWilOXrGx80R1QkjIPDfQaTX76F3CQ22EeIXEYBZ858WImkrkolhEvoeJHOXkgJnib2EA6d7oXINkOUIij5cH0GCoEuw+aU415OAHK/cv09WXeDVy7/cwfhPAUc5QmWQzOEwuaV0ERd1Mwq3yxhiXN5wOS77TXKYNTMiXp4NdXgYwJFqO0e/POKPrzWSVqeZClh+ecXenapZDdR120+qRtC/Kz9YwupJPz7FImAC4XOYqZXY3ILft8Y6nCj/iE8ArIsJGF+zfz0m4L7wJfcN1gZ2sjgzjX51USi7Y39ra2MemnbBrPG+6cR/aGvScd4V/CYoAJDB+WumhPclksxTS1s4PPVELwLvbF+3trwrkKyWMCEg2kTTUQxExYe9QavSPh9p3tKpi3SNnsK/hndxGKtTrH8OVe32r93Bt8w7IqYMxwEgr4wCAgF6RCZhks5PlXaLzrrAW80aakZU8wVCfZPQO0rZ1e2m+gLmG4rkw0kB4nkBF3I+oYM2WABGXGA7G6pDgszBQIbkQfFXaWWxtLvNKtlm458Mf+Dc6VaIcVY32Wkpeu3ev9WkeDOZIIPu6dKA1mLZexODBT9uXKMIqB1Gj2ysUGgPGBwzcf5XYqjGxuCgWmCfxv70dh/PInn7W3Le1x0QARAQABtBpBbmR5IFdpbmdvIDx3aW5nb0BnbnUub3JnPokCTgQTAQgAOBYhBE/U0ojURZNOChT5paiANzLkQ2iFBQJZixHUAhsDBQsJCAcDBRUKCQgLBRYCAwEAAh4BAheAAAoJEKiANzLkQ2iFuUwP/RZk5LYxQrheNa5a1zVuwzeBcxZj9aDube0IE5zWrv2lreuIVGUNOI+Q4EPEa/YKj0HaWQesoSH/XULou8p7hOMYa41Lut6lsUhkMJMowdAUmCVVCTxmtyvuWQ9OkhtwodbJjiVU6dA+KZnTGR66fB3/XX0ss381w0sS4pVGWkN3z6/8TGEei3lVe9V8rjRM0Ox/WHhdRrjtviRxDA21FCIFov0iEiX1YQUx55Xn4kbxlyvAst0ti0Pdo9oPBweWubWLlAfu2W0AbQsQosTpjnM21aUcxP31Z0Euyua9DCxT/rteLNM1qLBktH9NZeYNFWzZmF+RvxIj9oPY8frE4b1wSr97rx5742rgdZOKQY/v8ArAbGYcqJo7DBAFbC2ukIcoRqNrBaaIrBesy5N8jOx89lWy8u67RLbtuwZCGesovQiizLuTPVUNCbUMriobl5Fi9z+rYIdLbysb+cTPoF6sIgUBxdilfaFuuW3HWWh32sB982cCKaUhyoifgFJnojnff/jCnOOrMphIbMeY1Lbmh9qzW9UmC7JyZVTHFmh7pRsNWQWGi8FlhTCbSbIvr6uVcV3sd/1TEgclNkvz0tfrZOkYCm5rLiGWepJ0fFXnxgt92SqlUI34EwtAe4g7N3IK/fNpL01EbdrdG4c/nzAru/6Ic5MOlYYCXIxxXp70tBxBbmR5IFdpbmdvIDx3aW5nb0Bwb2JveC5jb20+iQJRBBMBCAA7AhsDBQsJCAcDBRUKCQgLBRYCAwEAAh4BAheAFiEET9TSiNRFk04KFPmlqIA3MuRDaIUFAlmLEf0CGQEACgkQqIA3MuRDaIUo7w//UQTnuOXmE0Z+w9prtcsq0myF6bipdsJulSwnbZzqnKI8rlgvKqJBHXhEHq2EC4hsgbnEb2wW61LeZvzyN6wi7HOH5z6/xNWZSUnmCM8ZH+eIKL+EQ/BgNDM0hkak8J2xZ/6/ZbbhwYF6FPNMg1PFQ/rHtOw9emjAUUUItrRDJYRMyA6HtRXn5kPKYzptkwGN5QVJMBjL9Ya5i6G+mDzxO8b1gLt08CYv/ZovNfJGy9I3+r7gC2k7/FKXnfUz3vmYKpNYoBL7OycPFWp36k8KH55hTbLZR68jbpFH+4iyTyuSWpNKiBg6pU0lvoFPyDFDPQUU3iA/T+GCj8UCB+zGeGic+NgVAMJgOni/nA4XtcrGf4QCMi16QP7QM5mZmZV9AxjdsdzKxhDt9M4FpPVyQqxayDUP5RCYimdItcTzAi8pop2t+B53NjFDddfgMPx4CfVgHBnqYiAXJ1PvYSGwRn6pp+64KSOKxKNuLJoxPF+2kOrY6Q9JTNpqG7beunRJQ3Nl9FItG26C/F79vQEQVcoU7Qu7efFcAdc+Bss75jUl4KS5TpvxxbplSrk8i/FsS2kGdSmniy1gKN+TAv+7wddDSaeL2/ptOKAmU8uJzwxW77gh5i6N5Sc6RmAlnMvohhbjEoDHNTOjN/MVnheXMS0MYWE4ahlBiTjqETckroq0HUFuZHkgV2luZ28gPHdpbmdvQGlnYWxpYS5jb20+iQJOBBMBCAA4FiEET9TSiNRFk04KFPmlqIA3MuRDaIUFAlmLEcgCGwMFCwkIBwMFFQoJCAsFFgIDAQACHgECF4AACgkQqIA3MuRDaIWZChAApzEgZZCKZjoOTExbTzx7UvmYoarU52Kuz1H/Ev4AEj3OrypHSXbt+O8NJUkgh8b8XQT9C0CoBhr8hwC3JOmyihKjqodSAS9BVJlpQ+4ulbu78HmqvABuuExsPGF8me5kRqjCn++1wSkQ2Ri4Lr3KUcT/lZRA9mI6qkyY4iTnXcpEFjfKwhIiGIPchy0GjcfogGz78TndlDJoJKtbLMaouQ33bdo01sJKCVWIQhag15hrL8rAQjxr7zz+4IIuHLwZewqUAsX9hqGPgmBZBfVHccPpVh9zfMaP1at9jXzVdys9YXJfHDzM680h7QvidLl10JvgEZkJbx4fGWdyG7R56FxOM9isrSdQ8kYPthybSXm9oK7XQOV9nmrWUKAOeokPI9eimgtRjemEdo5MiUH1Dkc0xeoqc5wE64OFrUAcASc0plU2ff6jsSNq7Q+Q4U9z3tdB8zTz+lCSQZOfgIk3baAAEUCE9v9DDXT20B3EC+zZuifPVmKRYIQxbA3Epx4Yh/IBc8kqIHHTW0NTMotKdzNZzC1o6putfmRvzHa48VU8JHoR3x6TmG65B2Agw9j7As5ve0UUSq7mpYqAMgg6jW4rzIsYZc//93liR6i25fsupFpDBPK3fip1H08LhljsFgdRnrPVz+b8MZpujAErqusLSNxxiDJBUBQTHNwZlO65Ag0EWYsQiQEQAMuqr/iDzidezZ6T520DDCUsx1sypvAYtmClrIdXMwpd37uGTbp++5Cf2NNgRJsyf3jhNsWuxoAPJhjrqsr6c8FlAapki4PUvBDtW4bQg6m3T08fSk5CLpk+oUXGH0zceDgwnz8mSRcKBBdpC4O69P8cp3L0DdrDikSNye6ZTwdMc+PSvZcs+c+7O2UZSeuxPvLRr3u5jahJGmXzySzTbwe/xzhGhQSetfYEFx/SbDZSZA7Det2WtR+prIDaX+CtGhFXrBqkKiXKqhpjTdN7vqaHx8wATdOJ5YACvkb1XsfHpjtOnna2DvuOln7iQNt9CwwiXmX6WvEAc21IpkcY53WQDXz6TFmtGyrQsCB0mawi7gAU1N4Zb+a5TGSD/aHLUpoHBe7pOy/c+wDJFRkK1scVS6gPxQwhy7IqzAxYWo3D7bQFurFTQVFfcRVQfZYIUIfm6MrHvygsyJ5rJCQ8rCUR4f7iGGM4LkPYQVRi2zUopql5uejZMoqvLRSB8IeP/ItDgsdXq9JHSyIlwatZNRqHDQzHqQ4n+GaNckfDQ1aK/2/zh7rpYOprOwqo1DvQIlg1RnbjiXPnv48aae3jpeV9BDRN1Nd2TzQsm6diA7MITnmYji1NAJMigOcpHEKVM0EPaNeMahjhoA1uJPn8T+eK0nzuqiD3Z2ICQ6SalKPZABEBAAGJAjYEGAEIACAWIQRP1NKI1EWTTgoU+aWogDcy5ENohQUCWYsQiQIbDAAKCRCogDcy5ENohf0tEAChNbqT1siyZmvBt7iRPXPWYHkBx4u0S9AIaCddocaKHLOQMO7D4gQLHANO4pmM5P8DZVApE9zpvigUMH5Lz67g+H2DEnHqCqE6lN8+d0fZ6SZk7sS+7ZOHNfB4TX021AHhcP9m16luTkr8PLwJJnFJNg8z1BGMygAZZKxAOSopeGuJXaDj6ASpd+A/n1JKYGO/Ctbt+jV2/dxH4LmAB44K6+F+T+vyEPaSJMdSBxKuy5N8ZzaWzRZ/gjVzbN8iN65cz9GVgeOEZVhNE3CyP67CHCWWdVDP2q/LL6F7DhfLOEd61zqLFkxUWnuwQSNu6v1YPvk+N1+V5F3FHMIUPPBYv8KEdhD0tp0NYQpu2dcOKLQQ8/KgGxBLADuOVeclejyMQbI8JqVp6G+sh2cw0AruOYXHw7zg+Bl1p0SVtlWTbURGt/5IvS/PI4wgH7KzKG7rk2/5dPr7AmkAkmJPFzN5wBWc67OZJxOIu2SE6CWC+iLsVCpgTczBtnthtqBHoinhcwaIVJ4vl+dAGNytu23oRBPmCTfWz+VigsLy7GTZkF3wAoKaL1Lle5wybSztHYrxFVO7RHNkoYYG3ZW6bSgq4LW5Mq9nL9eGlG3kidwCKXukbB2uLCS0pRYhDiUGaZS2kr5bNwyxOYb58GhACDWZtU9LXuxtkeZzlPlSmcRwqA===Su8m-----END PGP PUBLIC KEY BLOCK-----

 2  Makefile

@@ -1,5 +1,5 @@PKG_NAME := guilePKG_NAME := guileURL = https://mirrors.kernel.org/gnu/guile/guile-2.2.7.tar.xzURL = https://mirrors.kernel.org/gnu/guile/guile-3.0.8.tar.xzARCHIVES = ARCHIVES = 

include ../common/Makefile.commoninclude ../common/Makefile.common

 1,147  NEWS

Load diff

Large diffs are not rendered by default.

 2  buildreq_cache

@@ -1,3 +1,3 @@2.2.73.0.8glibc-localeglibc-localepkgconfig(bdw-gc)pkgconfig(bdw-gc)

 

 29  configure_misses

@@ -1,36 +1,27 @@Configure miss: CFLocaleCopyPreferredLanguagesConfigure miss: 32-bit host C ABIConfigure miss: DINFINITYConfigure miss: DINFINITYConfigure miss: DQNANConfigure miss: DQNANConfigure miss: __sincosConfigure miss: __sincosConfigure miss: __uc_get_ar_bsp in -lucaConfigure miss: __uc_get_ar_bsp in -lucaConfigure miss: chsizeConfigure miss: chsizeConfigure miss: direct.h presenceConfigure miss: compiler option needed when checking for declarationsConfigure miss: direct.h usabilityConfigure miss: crtdefs.hConfigure miss: gcc -std=gnu11 option to accept ISO C99Configure miss: gcc -std=gnu11 options needed to detect all undeclared functionsConfigure miss: gcc-objcopyConfigure miss: if gcc -std=gnu11 static flag -static worksConfigure miss: if gcc -std=gnu11 static flag -static worksConfigure miss: if gcc -std=gnu11 supports -fno-rtti -fno-exceptionsConfigure miss: if gcc -std=gnu11 supports -fno-rtti -fno-exceptionsConfigure miss: libc.hConfigure miss: libc.hConfigure miss: libc.h presenceConfigure miss: libc.h usabilityConfigure miss: machine/fpu.hConfigure miss: machine/fpu.hConfigure miss: machine/fpu.h presenceConfigure miss: machine/fpu.h usabilityConfigure miss: process.h presenceConfigure miss: process.h usabilityConfigure miss: pthread_attr_get_npConfigure miss: pthread_attr_get_npConfigure miss: pthread_get_stackaddr_npConfigure miss: pthread_get_stackaddr_npConfigure miss: pthread_np.hConfigure miss: pthread_np.hConfigure miss: pthread_np.h presenceConfigure miss: pthread_np.h usabilityConfigure miss: sched_getaffinity_npConfigure miss: sched_getaffinity_npConfigure miss: snprintf_lConfigure miss: struct GC_stack_base.reg_baseConfigure miss: struct sockaddr_in6.sin6_lenConfigure miss: struct sockaddr_in6.sin6_lenConfigure miss: sys/stdtypes.hConfigure miss: sys/stdtypes.hConfigure miss: sys/stdtypes.h presenceConfigure miss: sys/stdtypes.h usabilityConfigure miss: sys/sysctl.hConfigure miss: sys/sysctl.hConfigure miss: sys/sysmp.hConfigure miss: sys/sysmp.hConfigure miss: sys/utime.h presenceConfigure miss: sys/utime.h usabilityConfigure miss: sysctlConfigure miss: sysctlConfigure miss: sysmpConfigure miss: sysmpConfigure miss: timezone_tConfigure miss: timezone_t@@ -42,4 +33,8 @@ Configure miss: whether hstrerror is declaredConfigure miss: whether libc.h and unistd.h can be included togetherConfigure miss: whether libc.h and unistd.h can be included togetherConfigure miss: whether localtime caches TZConfigure miss: whether localtime caches TZConfigure miss: whether pow can be used without linking with libmConfigure miss: whether pow can be used without linking with libmConfigure miss: whether we need POSIX to get struct utimbufConfigure miss: whether the compiler is clangConfigure miss: whether the compiler produces multi-arch binariesConfigure miss: whether we need POSIX to get struct utimbufConfigure miss: x86_64-generic-linux-gnu-gcc-objcopyConfigure miss: x86_64-generic-linux-gnu-objcopy

 2  excludes

@@ -1,3 +1,3 @@# This file contains the output files that need %exclude. Full path# This file contains the output files that need %exclude. Full path# names, one per line.# names, one per line./usr/lib64/libguile-2.2.so.1.4.2-gdb.scm/usr/lib64/libguile-*.so.*-gdb.scm

 16  guile-2.2.7.tar.xz.sig

Load diff

This file was deleted.

 16  guile-3.0.8.tar.xz.sig

@@ -0,0 +1,16 @@-----BEGIN PGP SIGNATURE-----
iQIzBAABCAAdFiEET9TSiNRFk04KFPmlqIA3MuRDaIUFAmIGEqAACgkQqIA3MuRDaIUUeg//bI8qHzbsw34ozbBi6DE6p2oBJNrW3Ag5qCgN25+ulWawjBl60AENoEy6O3pPY0asc6aRa79ztC7Jbi5SF/qXNN+jH7H1a/t9h5LEi+cvoKds9stgSzCZqAF621MOulqoalD27LfxZDS9kzbbNEXLxWWLm+oYKIGge76mLHrbBpHG0cl5Jmu25mDBvcWLc709UE3Tl2XRzz9Lz2mRpLvWqxO9DuZq6GQyxoCzbS5fQz6fbYQpbxGH9RePIvbZfiRJ1xjXqdw+8gdeStmXhWMx6WWN5B6FqDczlRKdDfvr96Mfvq33IF7XPT0c+mVT0EbI7v+L4NGqfl5uLeoROpk5urmuAhT0JaQIjIqv6MfUMWb9HRDhISmxPkIBZCUHoV+7H7imw6CM3mGZ6vLOD2uBsRW3lepk3yx6/RAFXBSMfa04PEctHhgCYtpa+jsSIYXblIeFmSEke6JTJ53fEDKc5m7DbIseGCvZ7XuVKm5hbcSR4sGv6xkJ7rvdkX4n+DHgJLglCdBlqFLjPPaFmILATwwhFhjfF8wAfUD7QsxVFr3UWwOdwyCVAVTsJrEZuwrgI032FQbqWLyhECrljMY7ZyxC3kRFI2nZCApENnBdEShoe8zp+kuNf8+lDFibQjjW5NsDkKD2ctLg94TE75qEpWYCOU/5A53NEddVv/gjXY4==Ro42-----END PGP SIGNATURE-----

 1,615  guile.spec

@@ -2,17 +2,17 @@# This file is auto-generated. DO NOT EDIT# This file is auto-generated. DO NOT EDIT# Generated by: autospec.py# Generated by: autospec.py### Source0 file verified with key 0x090B11993D9AEBB5 (ludo@gnu.org)# Source0 file verified with key 0xA8803732E4436885 (wingo@gnu.org)##Name : guileName : guileVersion : 2.2.7Version : 3.0.8Release : 46Release : 47URL : https://mirrors.kernel.org/gnu/guile/guile-2.2.7.tar.xzURL : https://mirrors.kernel.org/gnu/guile/guile-3.0.8.tar.xzSource0 : https://mirrors.kernel.org/gnu/guile/guile-2.2.7.tar.xzSource0 : https://mirrors.kernel.org/gnu/guile/guile-3.0.8.tar.xzSource1 : https://mirrors.kernel.org/gnu/guile/guile-2.2.7.tar.xz.sigSource1 : https://mirrors.kernel.org/gnu/guile/guile-3.0.8.tar.xz.sigSummary : GNU's Ubiquitous Intelligent Language for Extension (uninstalled)Summary : GNU's Ubiquitous Intelligent Language for Extension (uninstalled)Group : Development/ToolsGroup : Development/ToolsLicense : GPL-3.0 LGPL-3.0License : GFDL-1.1 GPL-3.0 LGPL-3.0Requires: guile-bin = %{version}-%{release}Requires: guile-bin = %{version}-%{release}Requires: guile-data = %{version}-%{release}Requires: guile-data = %{version}-%{release}Requires: guile-info = %{version}-%{release}Requires: guile-info = %{version}-%{release}@@ -29,12 +29,10 @@ BuildRequires : pkgconfig(libffi)BuildRequires : readline-devBuildRequires : readline-devBuildRequires : sedBuildRequires : sedBuildRequires : texinfoBuildRequires : texinfoPatch1: 0001-Add-Require-for-guile-on-bdw-gc.patchPatch1: 0001-Add-missing-requirements-to-pc-file.patchPatch2: 0002-Revert-Fix-build-on-platforms-where-the-stack-grows-.patchPatch3: 0003-Fix-fixpoint-computation-in-compute-significant-bits.patch

%description%descriptionThis is version 2.2 of Guile, Project GNU's extension language library.This is version 3.0 of Guile, Project GNU's extension language library.Guile is an implementation of the Scheme programming language, packagedGuile is an implementation of the Scheme programming language, packagedas a library that can be linked into applications to give them their ownas a library that can be linked into applications to give them their ownextension language. Guile supports other languages as well, givingextension language. Guile supports other languages as well, giving@@ -106,18 +104,16 @@ man components for the guile package.



%prep%prep%setup -q -n guile-2.2.7%setup -q -n guile-3.0.8cd %{_builddir}/guile-2.2.7cd %{_builddir}/guile-3.0.8%patch1 -p1%patch1 -p1%patch2 -p1%patch3 -p1

%build%buildexport http_proxy=http://127.0.0.1:9/export http_proxy=http://127.0.0.1:9/export https_proxy=http://127.0.0.1:9/export https_proxy=http://127.0.0.1:9/export no_proxy=localhost,127.0.0.1,0.0.0.0export no_proxy=localhost,127.0.0.1,0.0.0.0export LANG=C.UTF-8export LANG=C.UTF-8export SOURCE_DATE_EPOCH=1628095116export SOURCE_DATE_EPOCH=1647822344export GCC_IGNORE_WERROR=1export GCC_IGNORE_WERROR=1export CFLAGS="$CFLAGS -fno-lto "export CFLAGS="$CFLAGS -fno-lto "export FCFLAGS="$FFLAGS -fno-lto "export FCFLAGS="$FFLAGS -fno-lto "@@ -127,322 +123,352 @@ export CXXFLAGS="$CXXFLAGS -fno-lto "make %{?_smp_mflags}make %{?_smp_mflags}

%install%installexport SOURCE_DATE_EPOCH=1628095116export SOURCE_DATE_EPOCH=1647822344rm -rf %{buildroot}rm -rf %{buildroot}mkdir -p %{buildroot}/usr/share/package-licenses/guilemkdir -p %{buildroot}/usr/share/package-licenses/guilecp %{_builddir}/guile-2.2.7/COPYING %{buildroot}/usr/share/package-licenses/guile/8624bcdae55baeef00cd11d5dfcfa60f68710a02cp %{_builddir}/guile-3.0.8/COPYING %{buildroot}/usr/share/package-licenses/guile/8624bcdae55baeef00cd11d5dfcfa60f68710a02cp %{_builddir}/guile-2.2.7/COPYING.LESSER %{buildroot}/usr/share/package-licenses/guile/e203d4ef09d404fa5c03cf6590e44231665be689cp %{_builddir}/guile-3.0.8/COPYING.LESSER %{buildroot}/usr/share/package-licenses/guile/e203d4ef09d404fa5c03cf6590e44231665be689cp %{_builddir}/guile-2.2.7/LICENSE %{buildroot}/usr/share/package-licenses/guile/1b32791cb14bd393369489b8dac99b741d884ba0cp %{_builddir}/guile-3.0.8/LICENSE %{buildroot}/usr/share/package-licenses/guile/1b32791cb14bd393369489b8dac99b741d884ba0cp %{_builddir}/guile-3.0.8/libguile/lightening/COPYING %{buildroot}/usr/share/package-licenses/guile/842745cb706f8f2126506f544492f7a80dbe29b3cp %{_builddir}/guile-3.0.8/libguile/lightening/COPYING.DOC %{buildroot}/usr/share/package-licenses/guile/5e7b36dfb18c7b8002bb9c41f87b65d280abd2aecp %{_builddir}/guile-3.0.8/libguile/lightening/COPYING.LESSER %{buildroot}/usr/share/package-licenses/guile/e7d563f52bf5295e6dba1d67ac23e9f6a160fab9%make_install%make_install## Remove excluded files## Remove excluded filesrm -f %{buildroot}/usr/lib64/libguile-2.2.so.1.4.2-gdb.scmrm -f %{buildroot}*/usr/lib64/libguile-*.so.*-gdb.scm

%files%files%defattr(-,root,root,-)%defattr(-,root,root,-)/usr/lib64/guile/2.2/ccache/ice-9/and-let-star.go/usr/lib64/guile/3.0/ccache/ice-9/and-let-star.go/usr/lib64/guile/2.2/ccache/ice-9/arrays.go/usr/lib64/guile/3.0/ccache/ice-9/arrays.go/usr/lib64/guile/2.2/ccache/ice-9/atomic.go/usr/lib64/guile/3.0/ccache/ice-9/atomic.go/usr/lib64/guile/2.2/ccache/ice-9/binary-ports.go/usr/lib64/guile/3.0/ccache/ice-9/binary-ports.go/usr/lib64/guile/2.2/ccache/ice-9/boot-9.go/usr/lib64/guile/3.0/ccache/ice-9/boot-9.go/usr/lib64/guile/2.2/ccache/ice-9/buffered-input.go/usr/lib64/guile/3.0/ccache/ice-9/buffered-input.go/usr/lib64/guile/2.2/ccache/ice-9/calling.go/usr/lib64/guile/3.0/ccache/ice-9/calling.go/usr/lib64/guile/2.2/ccache/ice-9/channel.go/usr/lib64/guile/3.0/ccache/ice-9/command-line.go/usr/lib64/guile/2.2/ccache/ice-9/command-line.go/usr/lib64/guile/3.0/ccache/ice-9/common-list.go/usr/lib64/guile/2.2/ccache/ice-9/common-list.go/usr/lib64/guile/3.0/ccache/ice-9/control.go/usr/lib64/guile/2.2/ccache/ice-9/control.go/usr/lib64/guile/3.0/ccache/ice-9/copy-tree.go/usr/lib64/guile/2.2/ccache/ice-9/curried-definitions.go/usr/lib64/guile/3.0/ccache/ice-9/curried-definitions.go/usr/lib64/guile/2.2/ccache/ice-9/debug.go/usr/lib64/guile/3.0/ccache/ice-9/deprecated.go/usr/lib64/guile/2.2/ccache/ice-9/deprecated.go/usr/lib64/guile/3.0/ccache/ice-9/documentation.go/usr/lib64/guile/2.2/ccache/ice-9/documentation.go/usr/lib64/guile/3.0/ccache/ice-9/eval-string.go/usr/lib64/guile/2.2/ccache/ice-9/eval-string.go/usr/lib64/guile/3.0/ccache/ice-9/eval.go/usr/lib64/guile/2.2/ccache/ice-9/eval.go/usr/lib64/guile/3.0/ccache/ice-9/exceptions.go/usr/lib64/guile/2.2/ccache/ice-9/expect.go/usr/lib64/guile/3.0/ccache/ice-9/expect.go/usr/lib64/guile/2.2/ccache/ice-9/fdes-finalizers.go/usr/lib64/guile/3.0/ccache/ice-9/fdes-finalizers.go/usr/lib64/guile/2.2/ccache/ice-9/format.go/usr/lib64/guile/3.0/ccache/ice-9/format.go/usr/lib64/guile/2.2/ccache/ice-9/ftw.go/usr/lib64/guile/3.0/ccache/ice-9/ftw.go/usr/lib64/guile/2.2/ccache/ice-9/futures.go/usr/lib64/guile/3.0/ccache/ice-9/futures.go/usr/lib64/guile/2.2/ccache/ice-9/gap-buffer.go/usr/lib64/guile/3.0/ccache/ice-9/gap-buffer.go/usr/lib64/guile/2.2/ccache/ice-9/getopt-long.go/usr/lib64/guile/3.0/ccache/ice-9/getopt-long.go/usr/lib64/guile/2.2/ccache/ice-9/hash-table.go/usr/lib64/guile/3.0/ccache/ice-9/hash-table.go/usr/lib64/guile/2.2/ccache/ice-9/hcons.go/usr/lib64/guile/3.0/ccache/ice-9/hcons.go/usr/lib64/guile/2.2/ccache/ice-9/history.go/usr/lib64/guile/3.0/ccache/ice-9/history.go/usr/lib64/guile/2.2/ccache/ice-9/i18n.go/usr/lib64/guile/3.0/ccache/ice-9/i18n.go/usr/lib64/guile/2.2/ccache/ice-9/iconv.go/usr/lib64/guile/3.0/ccache/ice-9/iconv.go/usr/lib64/guile/2.2/ccache/ice-9/lineio.go/usr/lib64/guile/3.0/ccache/ice-9/lineio.go/usr/lib64/guile/2.2/ccache/ice-9/list.go/usr/lib64/guile/3.0/ccache/ice-9/list.go/usr/lib64/guile/2.2/ccache/ice-9/local-eval.go/usr/lib64/guile/3.0/ccache/ice-9/local-eval.go/usr/lib64/guile/2.2/ccache/ice-9/ls.go/usr/lib64/guile/3.0/ccache/ice-9/ls.go/usr/lib64/guile/2.2/ccache/ice-9/mapping.go/usr/lib64/guile/3.0/ccache/ice-9/match.go/usr/lib64/guile/2.2/ccache/ice-9/match.go/usr/lib64/guile/3.0/ccache/ice-9/networking.go/usr/lib64/guile/2.2/ccache/ice-9/networking.go/usr/lib64/guile/3.0/ccache/ice-9/null.go/usr/lib64/guile/2.2/ccache/ice-9/null.go/usr/lib64/guile/3.0/ccache/ice-9/occam-channel.go/usr/lib64/guile/2.2/ccache/ice-9/occam-channel.go/usr/lib64/guile/3.0/ccache/ice-9/optargs.go/usr/lib64/guile/2.2/ccache/ice-9/optargs.go/usr/lib64/guile/3.0/ccache/ice-9/peg.go/usr/lib64/guile/2.2/ccache/ice-9/peg.go/usr/lib64/guile/3.0/ccache/ice-9/peg/cache.go/usr/lib64/guile/2.2/ccache/ice-9/peg/cache.go/usr/lib64/guile/3.0/ccache/ice-9/peg/codegen.go/usr/lib64/guile/2.2/ccache/ice-9/peg/codegen.go/usr/lib64/guile/3.0/ccache/ice-9/peg/simplify-tree.go/usr/lib64/guile/2.2/ccache/ice-9/peg/simplify-tree.go/usr/lib64/guile/3.0/ccache/ice-9/peg/string-peg.go/usr/lib64/guile/2.2/ccache/ice-9/peg/string-peg.go/usr/lib64/guile/3.0/ccache/ice-9/peg/using-parsers.go/usr/lib64/guile/2.2/ccache/ice-9/peg/using-parsers.go/usr/lib64/guile/3.0/ccache/ice-9/poe.go/usr/lib64/guile/2.2/ccache/ice-9/poe.go/usr/lib64/guile/3.0/ccache/ice-9/poll.go/usr/lib64/guile/2.2/ccache/ice-9/poll.go/usr/lib64/guile/3.0/ccache/ice-9/popen.go/usr/lib64/guile/2.2/ccache/ice-9/popen.go/usr/lib64/guile/3.0/ccache/ice-9/ports.go/usr/lib64/guile/2.2/ccache/ice-9/ports.go/usr/lib64/guile/3.0/ccache/ice-9/posix.go/usr/lib64/guile/2.2/ccache/ice-9/posix.go/usr/lib64/guile/3.0/ccache/ice-9/pretty-print.go/usr/lib64/guile/2.2/ccache/ice-9/pretty-print.go/usr/lib64/guile/3.0/ccache/ice-9/psyntax-pp.go/usr/lib64/guile/2.2/ccache/ice-9/psyntax-pp.go/usr/lib64/guile/3.0/ccache/ice-9/q.go/usr/lib64/guile/2.2/ccache/ice-9/q.go/usr/lib64/guile/3.0/ccache/ice-9/r5rs.go/usr/lib64/guile/2.2/ccache/ice-9/r5rs.go/usr/lib64/guile/3.0/ccache/ice-9/rdelim.go/usr/lib64/guile/2.2/ccache/ice-9/rdelim.go/usr/lib64/guile/3.0/ccache/ice-9/readline.go/usr/lib64/guile/2.2/ccache/ice-9/readline.go/usr/lib64/guile/3.0/ccache/ice-9/receive.go/usr/lib64/guile/2.2/ccache/ice-9/receive.go/usr/lib64/guile/3.0/ccache/ice-9/regex.go/usr/lib64/guile/2.2/ccache/ice-9/regex.go/usr/lib64/guile/3.0/ccache/ice-9/runq.go/usr/lib64/guile/2.2/ccache/ice-9/runq.go/usr/lib64/guile/3.0/ccache/ice-9/rw.go/usr/lib64/guile/2.2/ccache/ice-9/rw.go/usr/lib64/guile/3.0/ccache/ice-9/safe-r5rs.go/usr/lib64/guile/2.2/ccache/ice-9/safe-r5rs.go/usr/lib64/guile/3.0/ccache/ice-9/safe.go/usr/lib64/guile/2.2/ccache/ice-9/safe.go/usr/lib64/guile/3.0/ccache/ice-9/sandbox.go/usr/lib64/guile/2.2/ccache/ice-9/sandbox.go/usr/lib64/guile/3.0/ccache/ice-9/save-stack.go/usr/lib64/guile/2.2/ccache/ice-9/save-stack.go/usr/lib64/guile/3.0/ccache/ice-9/scm-style-repl.go/usr/lib64/guile/2.2/ccache/ice-9/scm-style-repl.go/usr/lib64/guile/3.0/ccache/ice-9/serialize.go/usr/lib64/guile/2.2/ccache/ice-9/serialize.go/usr/lib64/guile/3.0/ccache/ice-9/session.go/usr/lib64/guile/2.2/ccache/ice-9/session.go/usr/lib64/guile/3.0/ccache/ice-9/slib.go/usr/lib64/guile/2.2/ccache/ice-9/slib.go/usr/lib64/guile/3.0/ccache/ice-9/stack-catch.go/usr/lib64/guile/2.2/ccache/ice-9/stack-catch.go/usr/lib64/guile/3.0/ccache/ice-9/streams.go/usr/lib64/guile/2.2/ccache/ice-9/streams.go/usr/lib64/guile/3.0/ccache/ice-9/string-fun.go/usr/lib64/guile/2.2/ccache/ice-9/string-fun.go/usr/lib64/guile/3.0/ccache/ice-9/suspendable-ports.go/usr/lib64/guile/2.2/ccache/ice-9/suspendable-ports.go/usr/lib64/guile/3.0/ccache/ice-9/textual-ports.go/usr/lib64/guile/2.2/ccache/ice-9/syncase.go/usr/lib64/guile/3.0/ccache/ice-9/threads.go/usr/lib64/guile/2.2/ccache/ice-9/textual-ports.go/usr/lib64/guile/3.0/ccache/ice-9/time.go/usr/lib64/guile/2.2/ccache/ice-9/threads.go/usr/lib64/guile/3.0/ccache/ice-9/top-repl.go/usr/lib64/guile/2.2/ccache/ice-9/time.go/usr/lib64/guile/3.0/ccache/ice-9/unicode.go/usr/lib64/guile/2.2/ccache/ice-9/top-repl.go/usr/lib64/guile/3.0/ccache/ice-9/vlist.go/usr/lib64/guile/2.2/ccache/ice-9/unicode.go/usr/lib64/guile/3.0/ccache/ice-9/weak-vector.go/usr/lib64/guile/2.2/ccache/ice-9/vlist.go/usr/lib64/guile/3.0/ccache/language/brainfuck/compile-scheme.go/usr/lib64/guile/2.2/ccache/ice-9/weak-vector.go/usr/lib64/guile/3.0/ccache/language/brainfuck/compile-tree-il.go/usr/lib64/guile/2.2/ccache/language/brainfuck/compile-scheme.go/usr/lib64/guile/3.0/ccache/language/brainfuck/parse.go/usr/lib64/guile/2.2/ccache/language/brainfuck/compile-tree-il.go/usr/lib64/guile/3.0/ccache/language/brainfuck/spec.go/usr/lib64/guile/2.2/ccache/language/brainfuck/parse.go/usr/lib64/guile/3.0/ccache/language/bytecode.go/usr/lib64/guile/2.2/ccache/language/brainfuck/spec.go/usr/lib64/guile/3.0/ccache/language/bytecode/spec.go/usr/lib64/guile/2.2/ccache/language/bytecode.go/usr/lib64/guile/3.0/ccache/language/cps.go/usr/lib64/guile/2.2/ccache/language/bytecode/spec.go/usr/lib64/guile/3.0/ccache/language/cps/closure-conversion.go/usr/lib64/guile/2.2/ccache/language/cps.go/usr/lib64/guile/3.0/ccache/language/cps/compile-bytecode.go/usr/lib64/guile/2.2/ccache/language/cps/closure-conversion.go/usr/lib64/guile/3.0/ccache/language/cps/contification.go/usr/lib64/guile/2.2/ccache/language/cps/compile-bytecode.go/usr/lib64/guile/3.0/ccache/language/cps/cse.go/usr/lib64/guile/2.2/ccache/language/cps/constructors.go/usr/lib64/guile/3.0/ccache/language/cps/dce.go/usr/lib64/guile/2.2/ccache/language/cps/contification.go/usr/lib64/guile/3.0/ccache/language/cps/devirtualize-integers.go/usr/lib64/guile/2.2/ccache/language/cps/cse.go/usr/lib64/guile/3.0/ccache/language/cps/dump.go/usr/lib64/guile/2.2/ccache/language/cps/dce.go/usr/lib64/guile/3.0/ccache/language/cps/effects-analysis.go/usr/lib64/guile/2.2/ccache/language/cps/effects-analysis.go/usr/lib64/guile/3.0/ccache/language/cps/elide-arity-checks.go/usr/lib64/guile/2.2/ccache/language/cps/elide-values.go/usr/lib64/guile/3.0/ccache/language/cps/graphs.go/usr/lib64/guile/2.2/ccache/language/cps/handle-interrupts.go/usr/lib64/guile/3.0/ccache/language/cps/intmap.go/usr/lib64/guile/2.2/ccache/language/cps/intmap.go/usr/lib64/guile/3.0/ccache/language/cps/intset.go/usr/lib64/guile/2.2/ccache/language/cps/intset.go/usr/lib64/guile/3.0/ccache/language/cps/licm.go/usr/lib64/guile/2.2/ccache/language/cps/licm.go/usr/lib64/guile/3.0/ccache/language/cps/loop-instrumentation.go/usr/lib64/guile/2.2/ccache/language/cps/optimize.go/usr/lib64/guile/3.0/ccache/language/cps/optimize.go/usr/lib64/guile/2.2/ccache/language/cps/peel-loops.go/usr/lib64/guile/3.0/ccache/language/cps/peel-loops.go/usr/lib64/guile/2.2/ccache/language/cps/primitives.go/usr/lib64/guile/3.0/ccache/language/cps/prune-top-level-scopes.go/usr/lib64/guile/2.2/ccache/language/cps/prune-bailouts.go/usr/lib64/guile/3.0/ccache/language/cps/reify-primitives.go/usr/lib64/guile/2.2/ccache/language/cps/prune-top-level-scopes.go/usr/lib64/guile/3.0/ccache/language/cps/renumber.go/usr/lib64/guile/2.2/ccache/language/cps/reify-primitives.go/usr/lib64/guile/3.0/ccache/language/cps/return-types.go/usr/lib64/guile/2.2/ccache/language/cps/renumber.go/usr/lib64/guile/3.0/ccache/language/cps/rotate-loops.go/usr/lib64/guile/2.2/ccache/language/cps/rotate-loops.go/usr/lib64/guile/3.0/ccache/language/cps/self-references.go/usr/lib64/guile/2.2/ccache/language/cps/self-references.go/usr/lib64/guile/3.0/ccache/language/cps/simplify.go/usr/lib64/guile/2.2/ccache/language/cps/simplify.go/usr/lib64/guile/3.0/ccache/language/cps/slot-allocation.go/usr/lib64/guile/2.2/ccache/language/cps/slot-allocation.go/usr/lib64/guile/3.0/ccache/language/cps/spec.go/usr/lib64/guile/2.2/ccache/language/cps/spec.go/usr/lib64/guile/3.0/ccache/language/cps/specialize-numbers.go/usr/lib64/guile/2.2/ccache/language/cps/specialize-numbers.go/usr/lib64/guile/3.0/ccache/language/cps/specialize-primcalls.go/usr/lib64/guile/2.2/ccache/language/cps/specialize-primcalls.go/usr/lib64/guile/3.0/ccache/language/cps/split-rec.go/usr/lib64/guile/2.2/ccache/language/cps/split-rec.go/usr/lib64/guile/3.0/ccache/language/cps/switch.go/usr/lib64/guile/2.2/ccache/language/cps/type-checks.go/usr/lib64/guile/3.0/ccache/language/cps/type-checks.go/usr/lib64/guile/2.2/ccache/language/cps/type-fold.go/usr/lib64/guile/3.0/ccache/language/cps/type-fold.go/usr/lib64/guile/2.2/ccache/language/cps/types.go/usr/lib64/guile/3.0/ccache/language/cps/types.go/usr/lib64/guile/2.2/ccache/language/cps/utils.go/usr/lib64/guile/3.0/ccache/language/cps/utils.go/usr/lib64/guile/2.2/ccache/language/cps/verify.go/usr/lib64/guile/3.0/ccache/language/cps/verify.go/usr/lib64/guile/2.2/ccache/language/cps/with-cps.go/usr/lib64/guile/3.0/ccache/language/cps/with-cps.go/usr/lib64/guile/2.2/ccache/language/ecmascript/array.go/usr/lib64/guile/3.0/ccache/language/ecmascript/array.go/usr/lib64/guile/2.2/ccache/language/ecmascript/base.go/usr/lib64/guile/3.0/ccache/language/ecmascript/base.go/usr/lib64/guile/2.2/ccache/language/ecmascript/compile-tree-il.go/usr/lib64/guile/3.0/ccache/language/ecmascript/compile-tree-il.go/usr/lib64/guile/2.2/ccache/language/ecmascript/function.go/usr/lib64/guile/3.0/ccache/language/ecmascript/function.go/usr/lib64/guile/2.2/ccache/language/ecmascript/impl.go/usr/lib64/guile/3.0/ccache/language/ecmascript/impl.go/usr/lib64/guile/2.2/ccache/language/ecmascript/parse.go/usr/lib64/guile/3.0/ccache/language/ecmascript/parse.go/usr/lib64/guile/2.2/ccache/language/ecmascript/spec.go/usr/lib64/guile/3.0/ccache/language/ecmascript/spec.go/usr/lib64/guile/2.2/ccache/language/ecmascript/tokenize.go/usr/lib64/guile/3.0/ccache/language/ecmascript/tokenize.go/usr/lib64/guile/2.2/ccache/language/elisp/bindings.go/usr/lib64/guile/3.0/ccache/language/elisp/bindings.go/usr/lib64/guile/2.2/ccache/language/elisp/boot.go/usr/lib64/guile/3.0/ccache/language/elisp/boot.go/usr/lib64/guile/2.2/ccache/language/elisp/compile-tree-il.go/usr/lib64/guile/3.0/ccache/language/elisp/compile-tree-il.go/usr/lib64/guile/2.2/ccache/language/elisp/falias.go/usr/lib64/guile/3.0/ccache/language/elisp/falias.go/usr/lib64/guile/2.2/ccache/language/elisp/lexer.go/usr/lib64/guile/3.0/ccache/language/elisp/lexer.go/usr/lib64/guile/2.2/ccache/language/elisp/parser.go/usr/lib64/guile/3.0/ccache/language/elisp/parser.go/usr/lib64/guile/2.2/ccache/language/elisp/runtime.go/usr/lib64/guile/3.0/ccache/language/elisp/runtime.go/usr/lib64/guile/2.2/ccache/language/elisp/runtime/function-slot.go/usr/lib64/guile/3.0/ccache/language/elisp/runtime/function-slot.go/usr/lib64/guile/2.2/ccache/language/elisp/runtime/value-slot.go/usr/lib64/guile/3.0/ccache/language/elisp/runtime/value-slot.go/usr/lib64/guile/2.2/ccache/language/elisp/spec.go/usr/lib64/guile/3.0/ccache/language/elisp/spec.go/usr/lib64/guile/2.2/ccache/language/scheme/compile-tree-il.go/usr/lib64/guile/3.0/ccache/language/scheme/compile-tree-il.go/usr/lib64/guile/2.2/ccache/language/scheme/decompile-tree-il.go/usr/lib64/guile/3.0/ccache/language/scheme/decompile-tree-il.go/usr/lib64/guile/2.2/ccache/language/scheme/spec.go/usr/lib64/guile/3.0/ccache/language/scheme/spec.go/usr/lib64/guile/2.2/ccache/language/tree-il.go/usr/lib64/guile/3.0/ccache/language/tree-il.go/usr/lib64/guile/2.2/ccache/language/tree-il/analyze.go/usr/lib64/guile/3.0/ccache/language/tree-il/analyze.go/usr/lib64/guile/2.2/ccache/language/tree-il/canonicalize.go/usr/lib64/guile/3.0/ccache/language/tree-il/compile-bytecode.go/usr/lib64/guile/2.2/ccache/language/tree-il/compile-cps.go/usr/lib64/guile/3.0/ccache/language/tree-il/compile-cps.go/usr/lib64/guile/2.2/ccache/language/tree-il/debug.go/usr/lib64/guile/3.0/ccache/language/tree-il/cps-primitives.go/usr/lib64/guile/2.2/ccache/language/tree-il/effects.go/usr/lib64/guile/3.0/ccache/language/tree-il/debug.go/usr/lib64/guile/2.2/ccache/language/tree-il/fix-letrec.go/usr/lib64/guile/3.0/ccache/language/tree-il/effects.go/usr/lib64/guile/2.2/ccache/language/tree-il/optimize.go/usr/lib64/guile/3.0/ccache/language/tree-il/eta-expand.go/usr/lib64/guile/2.2/ccache/language/tree-il/peval.go/usr/lib64/guile/3.0/ccache/language/tree-il/fix-letrec.go/usr/lib64/guile/2.2/ccache/language/tree-il/primitives.go/usr/lib64/guile/3.0/ccache/language/tree-il/inlinable-exports.go/usr/lib64/guile/2.2/ccache/language/tree-il/spec.go/usr/lib64/guile/3.0/ccache/language/tree-il/letrectify.go/usr/lib64/guile/2.2/ccache/language/value/spec.go/usr/lib64/guile/3.0/ccache/language/tree-il/optimize.go/usr/lib64/guile/2.2/ccache/oop/goops.go/usr/lib64/guile/3.0/ccache/language/tree-il/peval.go/usr/lib64/guile/2.2/ccache/oop/goops/accessors.go/usr/lib64/guile/3.0/ccache/language/tree-il/primitives.go/usr/lib64/guile/2.2/ccache/oop/goops/active-slot.go/usr/lib64/guile/3.0/ccache/language/tree-il/resolve-free-vars.go/usr/lib64/guile/2.2/ccache/oop/goops/composite-slot.go/usr/lib64/guile/3.0/ccache/language/tree-il/spec.go/usr/lib64/guile/2.2/ccache/oop/goops/describe.go/usr/lib64/guile/3.0/ccache/language/value/spec.go/usr/lib64/guile/2.2/ccache/oop/goops/internal.go/usr/lib64/guile/3.0/ccache/oop/goops.go/usr/lib64/guile/2.2/ccache/oop/goops/save.go/usr/lib64/guile/3.0/ccache/oop/goops/accessors.go/usr/lib64/guile/2.2/ccache/oop/goops/simple.go/usr/lib64/guile/3.0/ccache/oop/goops/active-slot.go/usr/lib64/guile/2.2/ccache/oop/goops/stklos.go/usr/lib64/guile/3.0/ccache/oop/goops/composite-slot.go/usr/lib64/guile/2.2/ccache/rnrs.go/usr/lib64/guile/3.0/ccache/oop/goops/describe.go/usr/lib64/guile/2.2/ccache/rnrs/arithmetic/bitwise.go/usr/lib64/guile/3.0/ccache/oop/goops/internal.go/usr/lib64/guile/2.2/ccache/rnrs/arithmetic/fixnums.go/usr/lib64/guile/3.0/ccache/oop/goops/save.go/usr/lib64/guile/2.2/ccache/rnrs/arithmetic/flonums.go/usr/lib64/guile/3.0/ccache/oop/goops/simple.go/usr/lib64/guile/2.2/ccache/rnrs/base.go/usr/lib64/guile/3.0/ccache/oop/goops/stklos.go/usr/lib64/guile/2.2/ccache/rnrs/bytevectors.go/usr/lib64/guile/3.0/ccache/rnrs.go/usr/lib64/guile/2.2/ccache/rnrs/conditions.go/usr/lib64/guile/3.0/ccache/rnrs/arithmetic/bitwise.go/usr/lib64/guile/2.2/ccache/rnrs/control.go/usr/lib64/guile/3.0/ccache/rnrs/arithmetic/fixnums.go/usr/lib64/guile/2.2/ccache/rnrs/enums.go/usr/lib64/guile/3.0/ccache/rnrs/arithmetic/flonums.go/usr/lib64/guile/2.2/ccache/rnrs/eval.go/usr/lib64/guile/3.0/ccache/rnrs/base.go/usr/lib64/guile/2.2/ccache/rnrs/exceptions.go/usr/lib64/guile/3.0/ccache/rnrs/bytevectors.go/usr/lib64/guile/2.2/ccache/rnrs/files.go/usr/lib64/guile/3.0/ccache/rnrs/conditions.go/usr/lib64/guile/2.2/ccache/rnrs/hashtables.go/usr/lib64/guile/3.0/ccache/rnrs/control.go/usr/lib64/guile/2.2/ccache/rnrs/io/ports.go/usr/lib64/guile/3.0/ccache/rnrs/enums.go/usr/lib64/guile/2.2/ccache/rnrs/io/simple.go/usr/lib64/guile/3.0/ccache/rnrs/eval.go/usr/lib64/guile/2.2/ccache/rnrs/lists.go/usr/lib64/guile/3.0/ccache/rnrs/exceptions.go/usr/lib64/guile/2.2/ccache/rnrs/mutable-pairs.go/usr/lib64/guile/3.0/ccache/rnrs/files.go/usr/lib64/guile/2.2/ccache/rnrs/mutable-strings.go/usr/lib64/guile/3.0/ccache/rnrs/hashtables.go/usr/lib64/guile/2.2/ccache/rnrs/programs.go/usr/lib64/guile/3.0/ccache/rnrs/io/ports.go/usr/lib64/guile/2.2/ccache/rnrs/r5rs.go/usr/lib64/guile/3.0/ccache/rnrs/io/simple.go/usr/lib64/guile/2.2/ccache/rnrs/records/inspection.go/usr/lib64/guile/3.0/ccache/rnrs/lists.go/usr/lib64/guile/2.2/ccache/rnrs/records/procedural.go/usr/lib64/guile/3.0/ccache/rnrs/mutable-pairs.go/usr/lib64/guile/2.2/ccache/rnrs/records/syntactic.go/usr/lib64/guile/3.0/ccache/rnrs/mutable-strings.go/usr/lib64/guile/2.2/ccache/rnrs/sorting.go/usr/lib64/guile/3.0/ccache/rnrs/programs.go/usr/lib64/guile/2.2/ccache/rnrs/syntax-case.go/usr/lib64/guile/3.0/ccache/rnrs/r5rs.go/usr/lib64/guile/2.2/ccache/rnrs/unicode.go/usr/lib64/guile/3.0/ccache/rnrs/records/inspection.go/usr/lib64/guile/2.2/ccache/scripts/api-diff.go/usr/lib64/guile/3.0/ccache/rnrs/records/procedural.go/usr/lib64/guile/2.2/ccache/scripts/autofrisk.go/usr/lib64/guile/3.0/ccache/rnrs/records/syntactic.go/usr/lib64/guile/2.2/ccache/scripts/compile.go/usr/lib64/guile/3.0/ccache/rnrs/sorting.go/usr/lib64/guile/2.2/ccache/scripts/disassemble.go/usr/lib64/guile/3.0/ccache/rnrs/syntax-case.go/usr/lib64/guile/2.2/ccache/scripts/display-commentary.go/usr/lib64/guile/3.0/ccache/rnrs/unicode.go/usr/lib64/guile/2.2/ccache/scripts/doc-snarf.go/usr/lib64/guile/3.0/ccache/scheme/base.go/usr/lib64/guile/2.2/ccache/scripts/frisk.go/usr/lib64/guile/3.0/ccache/scheme/case-lambda.go/usr/lib64/guile/2.2/ccache/scripts/generate-autoload.go/usr/lib64/guile/3.0/ccache/scheme/char.go/usr/lib64/guile/2.2/ccache/scripts/help.go/usr/lib64/guile/3.0/ccache/scheme/complex.go/usr/lib64/guile/2.2/ccache/scripts/lint.go/usr/lib64/guile/3.0/ccache/scheme/cxr.go/usr/lib64/guile/2.2/ccache/scripts/list.go/usr/lib64/guile/3.0/ccache/scheme/eval.go/usr/lib64/guile/2.2/ccache/scripts/punify.go/usr/lib64/guile/3.0/ccache/scheme/file.go/usr/lib64/guile/2.2/ccache/scripts/read-rfc822.go/usr/lib64/guile/3.0/ccache/scheme/inexact.go/usr/lib64/guile/2.2/ccache/scripts/read-scheme-source.go/usr/lib64/guile/3.0/ccache/scheme/lazy.go/usr/lib64/guile/2.2/ccache/scripts/read-text-outline.go/usr/lib64/guile/3.0/ccache/scheme/load.go/usr/lib64/guile/2.2/ccache/scripts/scan-api.go/usr/lib64/guile/3.0/ccache/scheme/process-context.go/usr/lib64/guile/2.2/ccache/scripts/snarf-check-and-output-texi.go/usr/lib64/guile/3.0/ccache/scheme/r5rs.go/usr/lib64/guile/2.2/ccache/scripts/snarf-guile-m4-docs.go/usr/lib64/guile/3.0/ccache/scheme/read.go/usr/lib64/guile/2.2/ccache/scripts/summarize-guile-TODO.go/usr/lib64/guile/3.0/ccache/scheme/repl.go/usr/lib64/guile/2.2/ccache/scripts/use2dot.go/usr/lib64/guile/3.0/ccache/scheme/time.go/usr/lib64/guile/2.2/ccache/srfi/srfi-1.go/usr/lib64/guile/3.0/ccache/scheme/write.go/usr/lib64/guile/2.2/ccache/srfi/srfi-10.go/usr/lib64/guile/3.0/ccache/scripts/api-diff.go/usr/lib64/guile/2.2/ccache/srfi/srfi-11.go/usr/lib64/guile/3.0/ccache/scripts/autofrisk.go/usr/lib64/guile/2.2/ccache/srfi/srfi-111.go/usr/lib64/guile/3.0/ccache/scripts/compile.go/usr/lib64/guile/2.2/ccache/srfi/srfi-13.go/usr/lib64/guile/3.0/ccache/scripts/disassemble.go/usr/lib64/guile/2.2/ccache/srfi/srfi-14.go/usr/lib64/guile/3.0/ccache/scripts/display-commentary.go/usr/lib64/guile/2.2/ccache/srfi/srfi-16.go/usr/lib64/guile/3.0/ccache/scripts/doc-snarf.go/usr/lib64/guile/2.2/ccache/srfi/srfi-17.go/usr/lib64/guile/3.0/ccache/scripts/frisk.go/usr/lib64/guile/2.2/ccache/srfi/srfi-18.go/usr/lib64/guile/3.0/ccache/scripts/generate-autoload.go/usr/lib64/guile/2.2/ccache/srfi/srfi-19.go/usr/lib64/guile/3.0/ccache/scripts/help.go/usr/lib64/guile/2.2/ccache/srfi/srfi-2.go/usr/lib64/guile/3.0/ccache/scripts/lint.go/usr/lib64/guile/2.2/ccache/srfi/srfi-26.go/usr/lib64/guile/3.0/ccache/scripts/list.go/usr/lib64/guile/2.2/ccache/srfi/srfi-27.go/usr/lib64/guile/3.0/ccache/scripts/punify.go/usr/lib64/guile/2.2/ccache/srfi/srfi-28.go/usr/lib64/guile/3.0/ccache/scripts/read-rfc822.go/usr/lib64/guile/2.2/ccache/srfi/srfi-31.go/usr/lib64/guile/3.0/ccache/scripts/read-scheme-source.go/usr/lib64/guile/2.2/ccache/srfi/srfi-34.go/usr/lib64/guile/3.0/ccache/scripts/read-text-outline.go/usr/lib64/guile/2.2/ccache/srfi/srfi-35.go/usr/lib64/guile/3.0/ccache/scripts/scan-api.go/usr/lib64/guile/2.2/ccache/srfi/srfi-37.go/usr/lib64/guile/3.0/ccache/scripts/snarf-check-and-output-texi.go/usr/lib64/guile/2.2/ccache/srfi/srfi-38.go/usr/lib64/guile/3.0/ccache/scripts/snarf-guile-m4-docs.go/usr/lib64/guile/2.2/ccache/srfi/srfi-39.go/usr/lib64/guile/3.0/ccache/scripts/summarize-guile-TODO.go/usr/lib64/guile/2.2/ccache/srfi/srfi-4.go/usr/lib64/guile/3.0/ccache/scripts/use2dot.go/usr/lib64/guile/2.2/ccache/srfi/srfi-4/gnu.go/usr/lib64/guile/3.0/ccache/srfi/srfi-1.go/usr/lib64/guile/2.2/ccache/srfi/srfi-41.go/usr/lib64/guile/3.0/ccache/srfi/srfi-10.go/usr/lib64/guile/2.2/ccache/srfi/srfi-42.go/usr/lib64/guile/3.0/ccache/srfi/srfi-11.go/usr/lib64/guile/2.2/ccache/srfi/srfi-43.go/usr/lib64/guile/3.0/ccache/srfi/srfi-111.go/usr/lib64/guile/2.2/ccache/srfi/srfi-45.go/usr/lib64/guile/3.0/ccache/srfi/srfi-13.go/usr/lib64/guile/2.2/ccache/srfi/srfi-6.go/usr/lib64/guile/3.0/ccache/srfi/srfi-14.go/usr/lib64/guile/2.2/ccache/srfi/srfi-60.go/usr/lib64/guile/3.0/ccache/srfi/srfi-16.go/usr/lib64/guile/2.2/ccache/srfi/srfi-64.go/usr/lib64/guile/3.0/ccache/srfi/srfi-17.go/usr/lib64/guile/2.2/ccache/srfi/srfi-67.go/usr/lib64/guile/3.0/ccache/srfi/srfi-171.go/usr/lib64/guile/2.2/ccache/srfi/srfi-69.go/usr/lib64/guile/3.0/ccache/srfi/srfi-171/gnu.go/usr/lib64/guile/2.2/ccache/srfi/srfi-71.go/usr/lib64/guile/3.0/ccache/srfi/srfi-171/meta.go/usr/lib64/guile/2.2/ccache/srfi/srfi-8.go/usr/lib64/guile/3.0/ccache/srfi/srfi-18.go/usr/lib64/guile/2.2/ccache/srfi/srfi-88.go/usr/lib64/guile/3.0/ccache/srfi/srfi-19.go/usr/lib64/guile/2.2/ccache/srfi/srfi-9.go/usr/lib64/guile/3.0/ccache/srfi/srfi-2.go/usr/lib64/guile/2.2/ccache/srfi/srfi-9/gnu.go/usr/lib64/guile/3.0/ccache/srfi/srfi-26.go/usr/lib64/guile/2.2/ccache/srfi/srfi-98.go/usr/lib64/guile/3.0/ccache/srfi/srfi-27.go/usr/lib64/guile/2.2/ccache/statprof.go/usr/lib64/guile/3.0/ccache/srfi/srfi-28.go/usr/lib64/guile/2.2/ccache/sxml/apply-templates.go/usr/lib64/guile/3.0/ccache/srfi/srfi-31.go/usr/lib64/guile/2.2/ccache/sxml/fold.go/usr/lib64/guile/3.0/ccache/srfi/srfi-34.go/usr/lib64/guile/2.2/ccache/sxml/match.go/usr/lib64/guile/3.0/ccache/srfi/srfi-35.go/usr/lib64/guile/2.2/ccache/sxml/simple.go/usr/lib64/guile/3.0/ccache/srfi/srfi-37.go/usr/lib64/guile/2.2/ccache/sxml/ssax.go/usr/lib64/guile/3.0/ccache/srfi/srfi-38.go/usr/lib64/guile/2.2/ccache/sxml/ssax/input-parse.go/usr/lib64/guile/3.0/ccache/srfi/srfi-39.go/usr/lib64/guile/2.2/ccache/sxml/transform.go/usr/lib64/guile/3.0/ccache/srfi/srfi-4.go/usr/lib64/guile/2.2/ccache/sxml/xpath.go/usr/lib64/guile/3.0/ccache/srfi/srfi-4/gnu.go/usr/lib64/guile/2.2/ccache/system/base/ck.go/usr/lib64/guile/3.0/ccache/srfi/srfi-41.go/usr/lib64/guile/2.2/ccache/system/base/compile.go/usr/lib64/guile/3.0/ccache/srfi/srfi-42.go/usr/lib64/guile/2.2/ccache/system/base/lalr.go/usr/lib64/guile/3.0/ccache/srfi/srfi-43.go/usr/lib64/guile/2.2/ccache/system/base/language.go/usr/lib64/guile/3.0/ccache/srfi/srfi-45.go/usr/lib64/guile/2.2/ccache/system/base/message.go/usr/lib64/guile/3.0/ccache/srfi/srfi-6.go/usr/lib64/guile/2.2/ccache/system/base/pmatch.go/usr/lib64/guile/3.0/ccache/srfi/srfi-60.go/usr/lib64/guile/2.2/ccache/system/base/syntax.go/usr/lib64/guile/3.0/ccache/srfi/srfi-64.go/usr/lib64/guile/2.2/ccache/system/base/target.go/usr/lib64/guile/3.0/ccache/srfi/srfi-67.go/usr/lib64/guile/2.2/ccache/system/base/types.go/usr/lib64/guile/3.0/ccache/srfi/srfi-69.go/usr/lib64/guile/2.2/ccache/system/foreign-object.go/usr/lib64/guile/3.0/ccache/srfi/srfi-71.go/usr/lib64/guile/2.2/ccache/system/foreign.go/usr/lib64/guile/3.0/ccache/srfi/srfi-8.go/usr/lib64/guile/2.2/ccache/system/repl/command.go/usr/lib64/guile/3.0/ccache/srfi/srfi-88.go/usr/lib64/guile/2.2/ccache/system/repl/common.go/usr/lib64/guile/3.0/ccache/srfi/srfi-9.go/usr/lib64/guile/2.2/ccache/system/repl/coop-server.go/usr/lib64/guile/3.0/ccache/srfi/srfi-9/gnu.go/usr/lib64/guile/2.2/ccache/system/repl/debug.go/usr/lib64/guile/3.0/ccache/srfi/srfi-98.go/usr/lib64/guile/2.2/ccache/system/repl/error-handling.go/usr/lib64/guile/3.0/ccache/statprof.go/usr/lib64/guile/2.2/ccache/system/repl/repl.go/usr/lib64/guile/3.0/ccache/sxml/apply-templates.go/usr/lib64/guile/2.2/ccache/system/repl/server.go/usr/lib64/guile/3.0/ccache/sxml/fold.go/usr/lib64/guile/2.2/ccache/system/syntax.go/usr/lib64/guile/3.0/ccache/sxml/match.go/usr/lib64/guile/2.2/ccache/system/vm/assembler.go/usr/lib64/guile/3.0/ccache/sxml/simple.go/usr/lib64/guile/2.2/ccache/system/vm/coverage.go/usr/lib64/guile/3.0/ccache/sxml/ssax.go/usr/lib64/guile/2.2/ccache/system/vm/debug.go/usr/lib64/guile/3.0/ccache/sxml/ssax/input-parse.go/usr/lib64/guile/2.2/ccache/system/vm/disassembler.go/usr/lib64/guile/3.0/ccache/sxml/transform.go/usr/lib64/guile/2.2/ccache/system/vm/dwarf.go/usr/lib64/guile/3.0/ccache/sxml/xpath.go/usr/lib64/guile/2.2/ccache/system/vm/elf.go/usr/lib64/guile/3.0/ccache/system/base/ck.go/usr/lib64/guile/2.2/ccache/system/vm/frame.go/usr/lib64/guile/3.0/ccache/system/base/compile.go/usr/lib64/guile/2.2/ccache/system/vm/inspect.go/usr/lib64/guile/3.0/ccache/system/base/lalr.go/usr/lib64/guile/2.2/ccache/system/vm/linker.go/usr/lib64/guile/3.0/ccache/system/base/language.go/usr/lib64/guile/2.2/ccache/system/vm/loader.go/usr/lib64/guile/3.0/ccache/system/base/message.go/usr/lib64/guile/2.2/ccache/system/vm/program.go/usr/lib64/guile/3.0/ccache/system/base/optimize.go/usr/lib64/guile/2.2/ccache/system/vm/trace.go/usr/lib64/guile/3.0/ccache/system/base/pmatch.go/usr/lib64/guile/2.2/ccache/system/vm/trap-state.go/usr/lib64/guile/3.0/ccache/system/base/syntax.go/usr/lib64/guile/2.2/ccache/system/vm/traps.go/usr/lib64/guile/3.0/ccache/system/base/target.go/usr/lib64/guile/2.2/ccache/system/vm/vm.go/usr/lib64/guile/3.0/ccache/system/base/types.go/usr/lib64/guile/2.2/ccache/system/xref.go/usr/lib64/guile/3.0/ccache/system/base/types/internal.go/usr/lib64/guile/2.2/ccache/texinfo.go/usr/lib64/guile/3.0/ccache/system/foreign-library.go/usr/lib64/guile/2.2/ccache/texinfo/docbook.go/usr/lib64/guile/3.0/ccache/system/foreign-object.go/usr/lib64/guile/2.2/ccache/texinfo/html.go/usr/lib64/guile/3.0/ccache/system/foreign.go/usr/lib64/guile/2.2/ccache/texinfo/indexing.go/usr/lib64/guile/3.0/ccache/system/repl/command.go/usr/lib64/guile/2.2/ccache/texinfo/plain-text.go/usr/lib64/guile/3.0/ccache/system/repl/common.go/usr/lib64/guile/2.2/ccache/texinfo/reflection.go/usr/lib64/guile/3.0/ccache/system/repl/coop-server.go/usr/lib64/guile/2.2/ccache/texinfo/serialize.go/usr/lib64/guile/3.0/ccache/system/repl/debug.go/usr/lib64/guile/2.2/ccache/texinfo/string-utils.go/usr/lib64/guile/3.0/ccache/system/repl/error-handling.go/usr/lib64/guile/2.2/ccache/web/client.go/usr/lib64/guile/3.0/ccache/system/repl/repl.go/usr/lib64/guile/2.2/ccache/web/http.go/usr/lib64/guile/3.0/ccache/system/repl/server.go/usr/lib64/guile/2.2/ccache/web/request.go/usr/lib64/guile/3.0/ccache/system/syntax.go/usr/lib64/guile/2.2/ccache/web/response.go/usr/lib64/guile/3.0/ccache/system/vm/assembler.go/usr/lib64/guile/2.2/ccache/web/server.go/usr/lib64/guile/3.0/ccache/system/vm/coverage.go/usr/lib64/guile/2.2/ccache/web/server/http.go/usr/lib64/guile/3.0/ccache/system/vm/debug.go/usr/lib64/guile/2.2/ccache/web/uri.go/usr/lib64/guile/3.0/ccache/system/vm/disassembler.go/usr/lib64/guile/3.0/ccache/system/vm/dwarf.go/usr/lib64/guile/3.0/ccache/system/vm/elf.go/usr/lib64/guile/3.0/ccache/system/vm/frame.go/usr/lib64/guile/3.0/ccache/system/vm/inspect.go/usr/lib64/guile/3.0/ccache/system/vm/linker.go/usr/lib64/guile/3.0/ccache/system/vm/loader.go/usr/lib64/guile/3.0/ccache/system/vm/program.go/usr/lib64/guile/3.0/ccache/system/vm/trace.go/usr/lib64/guile/3.0/ccache/system/vm/trap-state.go/usr/lib64/guile/3.0/ccache/system/vm/traps.go/usr/lib64/guile/3.0/ccache/system/vm/vm.go/usr/lib64/guile/3.0/ccache/system/xref.go/usr/lib64/guile/3.0/ccache/texinfo.go/usr/lib64/guile/3.0/ccache/texinfo/docbook.go/usr/lib64/guile/3.0/ccache/texinfo/html.go/usr/lib64/guile/3.0/ccache/texinfo/indexing.go/usr/lib64/guile/3.0/ccache/texinfo/plain-text.go/usr/lib64/guile/3.0/ccache/texinfo/reflection.go/usr/lib64/guile/3.0/ccache/texinfo/serialize.go/usr/lib64/guile/3.0/ccache/texinfo/string-utils.go/usr/lib64/guile/3.0/ccache/web/client.go/usr/lib64/guile/3.0/ccache/web/http.go/usr/lib64/guile/3.0/ccache/web/request.go/usr/lib64/guile/3.0/ccache/web/response.go/usr/lib64/guile/3.0/ccache/web/server.go/usr/lib64/guile/3.0/ccache/web/server/http.go/usr/lib64/guile/3.0/ccache/web/uri.go

%files bin%files bin%defattr(-,root,root,-)%defattr(-,root,root,-)@@ -454,463 +480,495 @@ rm -f %{buildroot}/usr/lib64/libguile-2.2.so.1.4.2-gdb.scm

%files data%files data%defattr(-,root,root,-)%defattr(-,root,root,-)/usr/share/guile/2.2/guile-procedures.txt/usr/share/guile/3.0/guile-procedures.txt/usr/share/guile/2.2/ice-9/and-let-star.scm/usr/share/guile/3.0/ice-9/and-let-star.scm/usr/share/guile/2.2/ice-9/arrays.scm/usr/share/guile/3.0/ice-9/arrays.scm/usr/share/guile/2.2/ice-9/atomic.scm/usr/share/guile/3.0/ice-9/atomic.scm/usr/share/guile/2.2/ice-9/binary-ports.scm/usr/share/guile/3.0/ice-9/binary-ports.scm/usr/share/guile/2.2/ice-9/boot-9.scm/usr/share/guile/3.0/ice-9/boot-9.scm/usr/share/guile/2.2/ice-9/buffered-input.scm/usr/share/guile/3.0/ice-9/buffered-input.scm/usr/share/guile/2.2/ice-9/calling.scm/usr/share/guile/3.0/ice-9/calling.scm/usr/share/guile/2.2/ice-9/channel.scm/usr/share/guile/3.0/ice-9/command-line.scm/usr/share/guile/2.2/ice-9/command-line.scm/usr/share/guile/3.0/ice-9/common-list.scm/usr/share/guile/2.2/ice-9/common-list.scm/usr/share/guile/3.0/ice-9/control.scm/usr/share/guile/2.2/ice-9/control.scm/usr/share/guile/3.0/ice-9/copy-tree.scm/usr/share/guile/2.2/ice-9/curried-definitions.scm/usr/share/guile/3.0/ice-9/curried-definitions.scm/usr/share/guile/2.2/ice-9/debug.scm/usr/share/guile/3.0/ice-9/deprecated.scm/usr/share/guile/2.2/ice-9/deprecated.scm/usr/share/guile/3.0/ice-9/documentation.scm/usr/share/guile/2.2/ice-9/documentation.scm/usr/share/guile/3.0/ice-9/eval-string.scm/usr/share/guile/2.2/ice-9/eval-string.scm/usr/share/guile/3.0/ice-9/eval.scm/usr/share/guile/2.2/ice-9/eval.scm/usr/share/guile/3.0/ice-9/exceptions.scm/usr/share/guile/2.2/ice-9/expect.scm/usr/share/guile/3.0/ice-9/expect.scm/usr/share/guile/2.2/ice-9/fdes-finalizers.scm/usr/share/guile/3.0/ice-9/fdes-finalizers.scm/usr/share/guile/2.2/ice-9/format.scm/usr/share/guile/3.0/ice-9/format.scm/usr/share/guile/2.2/ice-9/ftw.scm/usr/share/guile/3.0/ice-9/ftw.scm/usr/share/guile/2.2/ice-9/futures.scm/usr/share/guile/3.0/ice-9/futures.scm/usr/share/guile/2.2/ice-9/gap-buffer.scm/usr/share/guile/3.0/ice-9/gap-buffer.scm/usr/share/guile/2.2/ice-9/getopt-long.scm/usr/share/guile/3.0/ice-9/getopt-long.scm/usr/share/guile/2.2/ice-9/hash-table.scm/usr/share/guile/3.0/ice-9/hash-table.scm/usr/share/guile/2.2/ice-9/hcons.scm/usr/share/guile/3.0/ice-9/hcons.scm/usr/share/guile/2.2/ice-9/history.scm/usr/share/guile/3.0/ice-9/history.scm/usr/share/guile/2.2/ice-9/i18n.scm/usr/share/guile/3.0/ice-9/i18n.scm/usr/share/guile/2.2/ice-9/iconv.scm/usr/share/guile/3.0/ice-9/iconv.scm/usr/share/guile/2.2/ice-9/lineio.scm/usr/share/guile/3.0/ice-9/lineio.scm/usr/share/guile/2.2/ice-9/list.scm/usr/share/guile/3.0/ice-9/list.scm/usr/share/guile/2.2/ice-9/local-eval.scm/usr/share/guile/3.0/ice-9/local-eval.scm/usr/share/guile/2.2/ice-9/ls.scm/usr/share/guile/3.0/ice-9/ls.scm/usr/share/guile/2.2/ice-9/mapping.scm/usr/share/guile/3.0/ice-9/match.scm/usr/share/guile/2.2/ice-9/match.scm/usr/share/guile/3.0/ice-9/match.upstream.scm/usr/share/guile/2.2/ice-9/match.upstream.scm/usr/share/guile/3.0/ice-9/networking.scm/usr/share/guile/2.2/ice-9/networking.scm/usr/share/guile/3.0/ice-9/null.scm/usr/share/guile/2.2/ice-9/null.scm/usr/share/guile/3.0/ice-9/occam-channel.scm/usr/share/guile/2.2/ice-9/occam-channel.scm/usr/share/guile/3.0/ice-9/optargs.scm/usr/share/guile/2.2/ice-9/optargs.scm/usr/share/guile/3.0/ice-9/peg.scm/usr/share/guile/2.2/ice-9/peg.scm/usr/share/guile/3.0/ice-9/peg/cache.scm/usr/share/guile/2.2/ice-9/peg/cache.scm/usr/share/guile/3.0/ice-9/peg/codegen.scm/usr/share/guile/2.2/ice-9/peg/codegen.scm/usr/share/guile/3.0/ice-9/peg/simplify-tree.scm/usr/share/guile/2.2/ice-9/peg/simplify-tree.scm/usr/share/guile/3.0/ice-9/peg/string-peg.scm/usr/share/guile/2.2/ice-9/peg/string-peg.scm/usr/share/guile/3.0/ice-9/peg/using-parsers.scm/usr/share/guile/2.2/ice-9/peg/using-parsers.scm/usr/share/guile/3.0/ice-9/poe.scm/usr/share/guile/2.2/ice-9/poe.scm/usr/share/guile/3.0/ice-9/poll.scm/usr/share/guile/2.2/ice-9/poll.scm/usr/share/guile/3.0/ice-9/popen.scm/usr/share/guile/2.2/ice-9/popen.scm/usr/share/guile/3.0/ice-9/ports.scm/usr/share/guile/2.2/ice-9/ports.scm/usr/share/guile/3.0/ice-9/posix.scm/usr/share/guile/2.2/ice-9/posix.scm/usr/share/guile/3.0/ice-9/pretty-print.scm/usr/share/guile/2.2/ice-9/pretty-print.scm/usr/share/guile/3.0/ice-9/psyntax-pp.scm/usr/share/guile/2.2/ice-9/psyntax-pp.scm/usr/share/guile/3.0/ice-9/psyntax.scm/usr/share/guile/2.2/ice-9/psyntax.scm/usr/share/guile/3.0/ice-9/q.scm/usr/share/guile/2.2/ice-9/q.scm/usr/share/guile/3.0/ice-9/quasisyntax.scm/usr/share/guile/2.2/ice-9/quasisyntax.scm/usr/share/guile/3.0/ice-9/r5rs.scm/usr/share/guile/2.2/ice-9/r5rs.scm/usr/share/guile/3.0/ice-9/r6rs-libraries.scm/usr/share/guile/2.2/ice-9/r6rs-libraries.scm/usr/share/guile/3.0/ice-9/r7rs-libraries.scm/usr/share/guile/2.2/ice-9/rdelim.scm/usr/share/guile/3.0/ice-9/rdelim.scm/usr/share/guile/2.2/ice-9/readline.scm/usr/share/guile/3.0/ice-9/read.scm/usr/share/guile/2.2/ice-9/receive.scm/usr/share/guile/3.0/ice-9/readline.scm/usr/share/guile/2.2/ice-9/regex.scm/usr/share/guile/3.0/ice-9/receive.scm/usr/share/guile/2.2/ice-9/runq.scm/usr/share/guile/3.0/ice-9/regex.scm/usr/share/guile/2.2/ice-9/rw.scm/usr/share/guile/3.0/ice-9/runq.scm/usr/share/guile/2.2/ice-9/safe-r5rs.scm/usr/share/guile/3.0/ice-9/rw.scm/usr/share/guile/2.2/ice-9/safe.scm/usr/share/guile/3.0/ice-9/safe-r5rs.scm/usr/share/guile/2.2/ice-9/sandbox.scm/usr/share/guile/3.0/ice-9/safe.scm/usr/share/guile/2.2/ice-9/save-stack.scm/usr/share/guile/3.0/ice-9/sandbox.scm/usr/share/guile/2.2/ice-9/scm-style-repl.scm/usr/share/guile/3.0/ice-9/save-stack.scm/usr/share/guile/2.2/ice-9/serialize.scm/usr/share/guile/3.0/ice-9/scm-style-repl.scm/usr/share/guile/2.2/ice-9/session.scm/usr/share/guile/3.0/ice-9/serialize.scm/usr/share/guile/2.2/ice-9/slib.scm/usr/share/guile/3.0/ice-9/session.scm/usr/share/guile/2.2/ice-9/stack-catch.scm/usr/share/guile/3.0/ice-9/slib.scm/usr/share/guile/2.2/ice-9/streams.scm/usr/share/guile/3.0/ice-9/stack-catch.scm/usr/share/guile/2.2/ice-9/string-fun.scm/usr/share/guile/3.0/ice-9/streams.scm/usr/share/guile/2.2/ice-9/suspendable-ports.scm/usr/share/guile/3.0/ice-9/string-fun.scm/usr/share/guile/2.2/ice-9/syncase.scm/usr/share/guile/3.0/ice-9/suspendable-ports.scm/usr/share/guile/2.2/ice-9/textual-ports.scm/usr/share/guile/3.0/ice-9/textual-ports.scm/usr/share/guile/2.2/ice-9/threads.scm/usr/share/guile/3.0/ice-9/threads.scm/usr/share/guile/2.2/ice-9/time.scm/usr/share/guile/3.0/ice-9/time.scm/usr/share/guile/2.2/ice-9/top-repl.scm/usr/share/guile/3.0/ice-9/top-repl.scm/usr/share/guile/2.2/ice-9/unicode.scm/usr/share/guile/3.0/ice-9/unicode.scm/usr/share/guile/2.2/ice-9/vlist.scm/usr/share/guile/3.0/ice-9/vlist.scm/usr/share/guile/2.2/ice-9/weak-vector.scm/usr/share/guile/3.0/ice-9/weak-vector.scm/usr/share/guile/2.2/language/brainfuck/compile-scheme.scm/usr/share/guile/3.0/language/brainfuck/compile-scheme.scm/usr/share/guile/2.2/language/brainfuck/compile-tree-il.scm/usr/share/guile/3.0/language/brainfuck/compile-tree-il.scm/usr/share/guile/2.2/language/brainfuck/parse.scm/usr/share/guile/3.0/language/brainfuck/parse.scm/usr/share/guile/2.2/language/brainfuck/spec.scm/usr/share/guile/3.0/language/brainfuck/spec.scm/usr/share/guile/2.2/language/bytecode.scm/usr/share/guile/3.0/language/bytecode.scm/usr/share/guile/2.2/language/bytecode/spec.scm/usr/share/guile/3.0/language/bytecode/spec.scm/usr/share/guile/2.2/language/cps.scm/usr/share/guile/3.0/language/cps.scm/usr/share/guile/2.2/language/cps/closure-conversion.scm/usr/share/guile/3.0/language/cps/closure-conversion.scm/usr/share/guile/2.2/language/cps/compile-bytecode.scm/usr/share/guile/3.0/language/cps/compile-bytecode.scm/usr/share/guile/2.2/language/cps/constructors.scm/usr/share/guile/3.0/language/cps/contification.scm/usr/share/guile/2.2/language/cps/contification.scm/usr/share/guile/3.0/language/cps/cse.scm/usr/share/guile/2.2/language/cps/cse.scm/usr/share/guile/3.0/language/cps/dce.scm/usr/share/guile/2.2/language/cps/dce.scm/usr/share/guile/3.0/language/cps/devirtualize-integers.scm/usr/share/guile/2.2/language/cps/effects-analysis.scm/usr/share/guile/3.0/language/cps/dump.scm/usr/share/guile/2.2/language/cps/elide-values.scm/usr/share/guile/3.0/language/cps/effects-analysis.scm/usr/share/guile/2.2/language/cps/handle-interrupts.scm/usr/share/guile/3.0/language/cps/elide-arity-checks.scm/usr/share/guile/2.2/language/cps/intmap.scm/usr/share/guile/3.0/language/cps/graphs.scm/usr/share/guile/2.2/language/cps/intset.scm/usr/share/guile/3.0/language/cps/intmap.scm/usr/share/guile/2.2/language/cps/licm.scm/usr/share/guile/3.0/language/cps/intset.scm/usr/share/guile/2.2/language/cps/optimize.scm/usr/share/guile/3.0/language/cps/licm.scm/usr/share/guile/2.2/language/cps/peel-loops.scm/usr/share/guile/3.0/language/cps/loop-instrumentation.scm/usr/share/guile/2.2/language/cps/primitives.scm/usr/share/guile/3.0/language/cps/optimize.scm/usr/share/guile/2.2/language/cps/prune-bailouts.scm/usr/share/guile/3.0/language/cps/peel-loops.scm/usr/share/guile/2.2/language/cps/prune-top-level-scopes.scm/usr/share/guile/3.0/language/cps/prune-top-level-scopes.scm/usr/share/guile/2.2/language/cps/reify-primitives.scm/usr/share/guile/3.0/language/cps/reify-primitives.scm/usr/share/guile/2.2/language/cps/renumber.scm/usr/share/guile/3.0/language/cps/renumber.scm/usr/share/guile/2.2/language/cps/rotate-loops.scm/usr/share/guile/3.0/language/cps/return-types.scm/usr/share/guile/2.2/language/cps/self-references.scm/usr/share/guile/3.0/language/cps/rotate-loops.scm/usr/share/guile/2.2/language/cps/simplify.scm/usr/share/guile/3.0/language/cps/self-references.scm/usr/share/guile/2.2/language/cps/slot-allocation.scm/usr/share/guile/3.0/language/cps/simplify.scm/usr/share/guile/2.2/language/cps/spec.scm/usr/share/guile/3.0/language/cps/slot-allocation.scm/usr/share/guile/2.2/language/cps/specialize-numbers.scm/usr/share/guile/3.0/language/cps/spec.scm/usr/share/guile/2.2/language/cps/specialize-primcalls.scm/usr/share/guile/3.0/language/cps/specialize-numbers.scm/usr/share/guile/2.2/language/cps/split-rec.scm/usr/share/guile/3.0/language/cps/specialize-primcalls.scm/usr/share/guile/2.2/language/cps/type-checks.scm/usr/share/guile/3.0/language/cps/split-rec.scm/usr/share/guile/2.2/language/cps/type-fold.scm/usr/share/guile/3.0/language/cps/switch.scm/usr/share/guile/2.2/language/cps/types.scm/usr/share/guile/3.0/language/cps/type-checks.scm/usr/share/guile/2.2/language/cps/utils.scm/usr/share/guile/3.0/language/cps/type-fold.scm/usr/share/guile/2.2/language/cps/verify.scm/usr/share/guile/3.0/language/cps/types.scm/usr/share/guile/2.2/language/cps/with-cps.scm/usr/share/guile/3.0/language/cps/utils.scm/usr/share/guile/2.2/language/ecmascript/array.scm/usr/share/guile/3.0/language/cps/verify.scm/usr/share/guile/2.2/language/ecmascript/base.scm/usr/share/guile/3.0/language/cps/with-cps.scm/usr/share/guile/2.2/language/ecmascript/compile-tree-il.scm/usr/share/guile/3.0/language/ecmascript/array.scm/usr/share/guile/2.2/language/ecmascript/function.scm/usr/share/guile/3.0/language/ecmascript/base.scm/usr/share/guile/2.2/language/ecmascript/impl.scm/usr/share/guile/3.0/language/ecmascript/compile-tree-il.scm/usr/share/guile/2.2/language/ecmascript/parse.scm/usr/share/guile/3.0/language/ecmascript/function.scm/usr/share/guile/2.2/language/ecmascript/spec.scm/usr/share/guile/3.0/language/ecmascript/impl.scm/usr/share/guile/2.2/language/ecmascript/tokenize.scm/usr/share/guile/3.0/language/ecmascript/parse.scm/usr/share/guile/2.2/language/elisp/bindings.scm/usr/share/guile/3.0/language/ecmascript/spec.scm/usr/share/guile/2.2/language/elisp/boot.el/usr/share/guile/3.0/language/ecmascript/tokenize.scm/usr/share/guile/2.2/language/elisp/compile-tree-il.scm/usr/share/guile/3.0/language/elisp/bindings.scm/usr/share/guile/2.2/language/elisp/falias.scm/usr/share/guile/3.0/language/elisp/boot.el/usr/share/guile/2.2/language/elisp/lexer.scm/usr/share/guile/3.0/language/elisp/compile-tree-il.scm/usr/share/guile/2.2/language/elisp/parser.scm/usr/share/guile/3.0/language/elisp/falias.scm/usr/share/guile/2.2/language/elisp/runtime.scm/usr/share/guile/3.0/language/elisp/lexer.scm/usr/share/guile/2.2/language/elisp/runtime/function-slot.scm/usr/share/guile/3.0/language/elisp/parser.scm/usr/share/guile/2.2/language/elisp/runtime/value-slot.scm/usr/share/guile/3.0/language/elisp/runtime.scm/usr/share/guile/2.2/language/elisp/spec.scm/usr/share/guile/3.0/language/elisp/runtime/function-slot.scm/usr/share/guile/2.2/language/scheme/compile-tree-il.scm/usr/share/guile/3.0/language/elisp/runtime/value-slot.scm/usr/share/guile/2.2/language/scheme/decompile-tree-il.scm/usr/share/guile/3.0/language/elisp/spec.scm/usr/share/guile/2.2/language/scheme/spec.scm/usr/share/guile/3.0/language/scheme/compile-tree-il.scm/usr/share/guile/2.2/language/tree-il.scm/usr/share/guile/3.0/language/scheme/decompile-tree-il.scm/usr/share/guile/2.2/language/tree-il/analyze.scm/usr/share/guile/3.0/language/scheme/spec.scm/usr/share/guile/2.2/language/tree-il/canonicalize.scm/usr/share/guile/3.0/language/tree-il.scm/usr/share/guile/2.2/language/tree-il/compile-cps.scm/usr/share/guile/3.0/language/tree-il/analyze.scm/usr/share/guile/2.2/language/tree-il/debug.scm/usr/share/guile/3.0/language/tree-il/compile-bytecode.scm/usr/share/guile/2.2/language/tree-il/effects.scm/usr/share/guile/3.0/language/tree-il/compile-cps.scm/usr/share/guile/2.2/language/tree-il/fix-letrec.scm/usr/share/guile/3.0/language/tree-il/cps-primitives.scm/usr/share/guile/2.2/language/tree-il/optimize.scm/usr/share/guile/3.0/language/tree-il/debug.scm/usr/share/guile/2.2/language/tree-il/peval.scm/usr/share/guile/3.0/language/tree-il/effects.scm/usr/share/guile/2.2/language/tree-il/primitives.scm/usr/share/guile/3.0/language/tree-il/eta-expand.scm/usr/share/guile/2.2/language/tree-il/spec.scm/usr/share/guile/3.0/language/tree-il/fix-letrec.scm/usr/share/guile/2.2/language/value/spec.scm/usr/share/guile/3.0/language/tree-il/inlinable-exports.scm/usr/share/guile/2.2/oop/goops.scm/usr/share/guile/3.0/language/tree-il/letrectify.scm/usr/share/guile/2.2/oop/goops/accessors.scm/usr/share/guile/3.0/language/tree-il/optimize.scm/usr/share/guile/2.2/oop/goops/active-slot.scm/usr/share/guile/3.0/language/tree-il/peval.scm/usr/share/guile/2.2/oop/goops/composite-slot.scm/usr/share/guile/3.0/language/tree-il/primitives.scm/usr/share/guile/2.2/oop/goops/describe.scm/usr/share/guile/3.0/language/tree-il/resolve-free-vars.scm/usr/share/guile/2.2/oop/goops/internal.scm/usr/share/guile/3.0/language/tree-il/spec.scm/usr/share/guile/2.2/oop/goops/save.scm/usr/share/guile/3.0/language/value/spec.scm/usr/share/guile/2.2/oop/goops/simple.scm/usr/share/guile/3.0/oop/goops.scm/usr/share/guile/2.2/oop/goops/stklos.scm/usr/share/guile/3.0/oop/goops/accessors.scm/usr/share/guile/2.2/rnrs.scm/usr/share/guile/3.0/oop/goops/active-slot.scm/usr/share/guile/2.2/rnrs/arithmetic/bitwise.scm/usr/share/guile/3.0/oop/goops/composite-slot.scm/usr/share/guile/2.2/rnrs/arithmetic/fixnums.scm/usr/share/guile/3.0/oop/goops/describe.scm/usr/share/guile/2.2/rnrs/arithmetic/flonums.scm/usr/share/guile/3.0/oop/goops/internal.scm/usr/share/guile/2.2/rnrs/base.scm/usr/share/guile/3.0/oop/goops/save.scm/usr/share/guile/2.2/rnrs/bytevectors.scm/usr/share/guile/3.0/oop/goops/simple.scm/usr/share/guile/2.2/rnrs/conditions.scm/usr/share/guile/3.0/oop/goops/stklos.scm/usr/share/guile/2.2/rnrs/control.scm/usr/share/guile/3.0/rnrs.scm/usr/share/guile/2.2/rnrs/enums.scm/usr/share/guile/3.0/rnrs/arithmetic/bitwise.scm/usr/share/guile/2.2/rnrs/eval.scm/usr/share/guile/3.0/rnrs/arithmetic/fixnums.scm/usr/share/guile/2.2/rnrs/exceptions.scm/usr/share/guile/3.0/rnrs/arithmetic/flonums.scm/usr/share/guile/2.2/rnrs/files.scm/usr/share/guile/3.0/rnrs/base.scm/usr/share/guile/2.2/rnrs/hashtables.scm/usr/share/guile/3.0/rnrs/bytevectors.scm/usr/share/guile/2.2/rnrs/io/ports.scm/usr/share/guile/3.0/rnrs/conditions.scm/usr/share/guile/2.2/rnrs/io/simple.scm/usr/share/guile/3.0/rnrs/control.scm/usr/share/guile/2.2/rnrs/lists.scm/usr/share/guile/3.0/rnrs/enums.scm/usr/share/guile/2.2/rnrs/mutable-pairs.scm/usr/share/guile/3.0/rnrs/eval.scm/usr/share/guile/2.2/rnrs/mutable-strings.scm/usr/share/guile/3.0/rnrs/exceptions.scm/usr/share/guile/2.2/rnrs/programs.scm/usr/share/guile/3.0/rnrs/files.scm/usr/share/guile/2.2/rnrs/r5rs.scm/usr/share/guile/3.0/rnrs/hashtables.scm/usr/share/guile/2.2/rnrs/records/inspection.scm/usr/share/guile/3.0/rnrs/io/ports.scm/usr/share/guile/2.2/rnrs/records/procedural.scm/usr/share/guile/3.0/rnrs/io/simple.scm/usr/share/guile/2.2/rnrs/records/syntactic.scm/usr/share/guile/3.0/rnrs/lists.scm/usr/share/guile/2.2/rnrs/sorting.scm/usr/share/guile/3.0/rnrs/mutable-pairs.scm/usr/share/guile/2.2/rnrs/syntax-case.scm/usr/share/guile/3.0/rnrs/mutable-strings.scm/usr/share/guile/2.2/rnrs/unicode.scm/usr/share/guile/3.0/rnrs/programs.scm/usr/share/guile/2.2/scripts/api-diff.scm/usr/share/guile/3.0/rnrs/r5rs.scm/usr/share/guile/2.2/scripts/autofrisk.scm/usr/share/guile/3.0/rnrs/records/inspection.scm/usr/share/guile/2.2/scripts/compile.scm/usr/share/guile/3.0/rnrs/records/procedural.scm/usr/share/guile/2.2/scripts/disassemble.scm/usr/share/guile/3.0/rnrs/records/syntactic.scm/usr/share/guile/2.2/scripts/display-commentary.scm/usr/share/guile/3.0/rnrs/sorting.scm/usr/share/guile/2.2/scripts/doc-snarf.scm/usr/share/guile/3.0/rnrs/syntax-case.scm/usr/share/guile/2.2/scripts/frisk.scm/usr/share/guile/3.0/rnrs/unicode.scm/usr/share/guile/2.2/scripts/generate-autoload.scm/usr/share/guile/3.0/scheme/base.scm/usr/share/guile/2.2/scripts/help.scm/usr/share/guile/3.0/scheme/case-lambda.scm/usr/share/guile/2.2/scripts/lint.scm/usr/share/guile/3.0/scheme/char.scm/usr/share/guile/2.2/scripts/list.scm/usr/share/guile/3.0/scheme/complex.scm/usr/share/guile/2.2/scripts/punify.scm/usr/share/guile/3.0/scheme/cxr.scm/usr/share/guile/2.2/scripts/read-rfc822.scm/usr/share/guile/3.0/scheme/eval.scm/usr/share/guile/2.2/scripts/read-scheme-source.scm/usr/share/guile/3.0/scheme/file.scm/usr/share/guile/2.2/scripts/read-text-outline.scm/usr/share/guile/3.0/scheme/inexact.scm/usr/share/guile/2.2/scripts/scan-api.scm/usr/share/guile/3.0/scheme/lazy.scm/usr/share/guile/2.2/scripts/snarf-check-and-output-texi.scm/usr/share/guile/3.0/scheme/load.scm/usr/share/guile/2.2/scripts/snarf-guile-m4-docs.scm/usr/share/guile/3.0/scheme/process-context.scm/usr/share/guile/2.2/scripts/summarize-guile-TODO.scm/usr/share/guile/3.0/scheme/r5rs.scm/usr/share/guile/2.2/scripts/use2dot.scm/usr/share/guile/3.0/scheme/read.scm/usr/share/guile/2.2/srfi/srfi-1.scm/usr/share/guile/3.0/scheme/repl.scm/usr/share/guile/2.2/srfi/srfi-10.scm/usr/share/guile/3.0/scheme/time.scm/usr/share/guile/2.2/srfi/srfi-11.scm/usr/share/guile/3.0/scheme/write.scm/usr/share/guile/2.2/srfi/srfi-111.scm/usr/share/guile/3.0/scripts/api-diff.scm/usr/share/guile/2.2/srfi/srfi-13.scm/usr/share/guile/3.0/scripts/autofrisk.scm/usr/share/guile/2.2/srfi/srfi-14.scm/usr/share/guile/3.0/scripts/compile.scm/usr/share/guile/2.2/srfi/srfi-16.scm/usr/share/guile/3.0/scripts/disassemble.scm/usr/share/guile/2.2/srfi/srfi-17.scm/usr/share/guile/3.0/scripts/display-commentary.scm/usr/share/guile/2.2/srfi/srfi-18.scm/usr/share/guile/3.0/scripts/doc-snarf.scm/usr/share/guile/2.2/srfi/srfi-19.scm/usr/share/guile/3.0/scripts/frisk.scm/usr/share/guile/2.2/srfi/srfi-2.scm/usr/share/guile/3.0/scripts/generate-autoload.scm/usr/share/guile/2.2/srfi/srfi-26.scm/usr/share/guile/3.0/scripts/help.scm/usr/share/guile/2.2/srfi/srfi-27.scm/usr/share/guile/3.0/scripts/lint.scm/usr/share/guile/2.2/srfi/srfi-28.scm/usr/share/guile/3.0/scripts/list.scm/usr/share/guile/2.2/srfi/srfi-31.scm/usr/share/guile/3.0/scripts/punify.scm/usr/share/guile/2.2/srfi/srfi-34.scm/usr/share/guile/3.0/scripts/read-rfc822.scm/usr/share/guile/2.2/srfi/srfi-35.scm/usr/share/guile/3.0/scripts/read-scheme-source.scm/usr/share/guile/2.2/srfi/srfi-37.scm/usr/share/guile/3.0/scripts/read-text-outline.scm/usr/share/guile/2.2/srfi/srfi-38.scm/usr/share/guile/3.0/scripts/scan-api.scm/usr/share/guile/2.2/srfi/srfi-39.scm/usr/share/guile/3.0/scripts/snarf-check-and-output-texi.scm/usr/share/guile/2.2/srfi/srfi-4.scm/usr/share/guile/3.0/scripts/snarf-guile-m4-docs.scm/usr/share/guile/2.2/srfi/srfi-4/gnu.scm/usr/share/guile/3.0/scripts/summarize-guile-TODO.scm/usr/share/guile/2.2/srfi/srfi-41.scm/usr/share/guile/3.0/scripts/use2dot.scm/usr/share/guile/2.2/srfi/srfi-42.scm/usr/share/guile/3.0/srfi/srfi-1.scm/usr/share/guile/2.2/srfi/srfi-42/ec.scm/usr/share/guile/3.0/srfi/srfi-10.scm/usr/share/guile/2.2/srfi/srfi-43.scm/usr/share/guile/3.0/srfi/srfi-11.scm/usr/share/guile/2.2/srfi/srfi-45.scm/usr/share/guile/3.0/srfi/srfi-111.scm/usr/share/guile/2.2/srfi/srfi-6.scm/usr/share/guile/3.0/srfi/srfi-13.scm/usr/share/guile/2.2/srfi/srfi-60.scm/usr/share/guile/3.0/srfi/srfi-14.scm/usr/share/guile/2.2/srfi/srfi-64.scm/usr/share/guile/3.0/srfi/srfi-16.scm/usr/share/guile/2.2/srfi/srfi-64/testing.scm/usr/share/guile/3.0/srfi/srfi-17.scm/usr/share/guile/2.2/srfi/srfi-67.scm/usr/share/guile/3.0/srfi/srfi-171.scm/usr/share/guile/2.2/srfi/srfi-67/compare.scm/usr/share/guile/3.0/srfi/srfi-171/gnu.scm/usr/share/guile/2.2/srfi/srfi-69.scm/usr/share/guile/3.0/srfi/srfi-171/meta.scm/usr/share/guile/2.2/srfi/srfi-71.scm/usr/share/guile/3.0/srfi/srfi-18.scm/usr/share/guile/2.2/srfi/srfi-8.scm/usr/share/guile/3.0/srfi/srfi-19.scm/usr/share/guile/2.2/srfi/srfi-88.scm/usr/share/guile/3.0/srfi/srfi-2.scm/usr/share/guile/2.2/srfi/srfi-9.scm/usr/share/guile/3.0/srfi/srfi-26.scm/usr/share/guile/2.2/srfi/srfi-9/gnu.scm/usr/share/guile/3.0/srfi/srfi-27.scm/usr/share/guile/2.2/srfi/srfi-98.scm/usr/share/guile/3.0/srfi/srfi-28.scm/usr/share/guile/2.2/statprof.scm/usr/share/guile/3.0/srfi/srfi-31.scm/usr/share/guile/2.2/sxml/apply-templates.scm/usr/share/guile/3.0/srfi/srfi-34.scm/usr/share/guile/2.2/sxml/fold.scm/usr/share/guile/3.0/srfi/srfi-35.scm/usr/share/guile/2.2/sxml/match.scm/usr/share/guile/3.0/srfi/srfi-37.scm/usr/share/guile/2.2/sxml/simple.scm/usr/share/guile/3.0/srfi/srfi-38.scm/usr/share/guile/2.2/sxml/ssax.scm/usr/share/guile/3.0/srfi/srfi-39.scm/usr/share/guile/2.2/sxml/ssax/input-parse.scm/usr/share/guile/3.0/srfi/srfi-4.scm/usr/share/guile/2.2/sxml/sxml-match.ss/usr/share/guile/3.0/srfi/srfi-4/gnu.scm/usr/share/guile/2.2/sxml/transform.scm/usr/share/guile/3.0/srfi/srfi-41.scm/usr/share/guile/2.2/sxml/upstream/SSAX.scm/usr/share/guile/3.0/srfi/srfi-42.scm/usr/share/guile/2.2/sxml/upstream/SXML-tree-trans.scm/usr/share/guile/3.0/srfi/srfi-42/ec.scm/usr/share/guile/2.2/sxml/upstream/SXPath-old.scm/usr/share/guile/3.0/srfi/srfi-43.scm/usr/share/guile/2.2/sxml/upstream/assert.scm/usr/share/guile/3.0/srfi/srfi-45.scm/usr/share/guile/2.2/sxml/upstream/input-parse.scm/usr/share/guile/3.0/srfi/srfi-6.scm/usr/share/guile/2.2/sxml/xpath.scm/usr/share/guile/3.0/srfi/srfi-60.scm/usr/share/guile/2.2/system/base/ck.scm/usr/share/guile/3.0/srfi/srfi-64.scm/usr/share/guile/2.2/system/base/compile.scm/usr/share/guile/3.0/srfi/srfi-64/testing.scm/usr/share/guile/2.2/system/base/lalr.scm/usr/share/guile/3.0/srfi/srfi-67.scm/usr/share/guile/2.2/system/base/lalr.upstream.scm/usr/share/guile/3.0/srfi/srfi-67/compare.scm/usr/share/guile/2.2/system/base/language.scm/usr/share/guile/3.0/srfi/srfi-69.scm/usr/share/guile/2.2/system/base/message.scm/usr/share/guile/3.0/srfi/srfi-71.scm/usr/share/guile/2.2/system/base/pmatch.scm/usr/share/guile/3.0/srfi/srfi-8.scm/usr/share/guile/2.2/system/base/syntax.scm/usr/share/guile/3.0/srfi/srfi-88.scm/usr/share/guile/2.2/system/base/target.scm/usr/share/guile/3.0/srfi/srfi-9.scm/usr/share/guile/2.2/system/base/types.scm/usr/share/guile/3.0/srfi/srfi-9/gnu.scm/usr/share/guile/2.2/system/foreign-object.scm/usr/share/guile/3.0/srfi/srfi-98.scm/usr/share/guile/2.2/system/foreign.scm/usr/share/guile/3.0/statprof.scm/usr/share/guile/2.2/system/repl/command.scm/usr/share/guile/3.0/sxml/apply-templates.scm/usr/share/guile/2.2/system/repl/common.scm/usr/share/guile/3.0/sxml/fold.scm/usr/share/guile/2.2/system/repl/coop-server.scm/usr/share/guile/3.0/sxml/match.scm/usr/share/guile/2.2/system/repl/debug.scm/usr/share/guile/3.0/sxml/simple.scm/usr/share/guile/2.2/system/repl/describe.scm/usr/share/guile/3.0/sxml/ssax.scm/usr/share/guile/2.2/system/repl/error-handling.scm/usr/share/guile/3.0/sxml/ssax/input-parse.scm/usr/share/guile/2.2/system/repl/repl.scm/usr/share/guile/3.0/sxml/sxml-match.ss/usr/share/guile/2.2/system/repl/server.scm/usr/share/guile/3.0/sxml/transform.scm/usr/share/guile/2.2/system/syntax.scm/usr/share/guile/3.0/sxml/upstream/SSAX.scm/usr/share/guile/2.2/system/vm/assembler.scm/usr/share/guile/3.0/sxml/upstream/SXML-tree-trans.scm/usr/share/guile/2.2/system/vm/coverage.scm/usr/share/guile/3.0/sxml/upstream/SXPath-old.scm/usr/share/guile/2.2/system/vm/debug.scm/usr/share/guile/3.0/sxml/upstream/assert.scm/usr/share/guile/2.2/system/vm/disassembler.scm/usr/share/guile/3.0/sxml/upstream/input-parse.scm/usr/share/guile/2.2/system/vm/dwarf.scm/usr/share/guile/3.0/sxml/xpath.scm/usr/share/guile/2.2/system/vm/elf.scm/usr/share/guile/3.0/system/base/ck.scm/usr/share/guile/2.2/system/vm/frame.scm/usr/share/guile/3.0/system/base/compile.scm/usr/share/guile/2.2/system/vm/inspect.scm/usr/share/guile/3.0/system/base/lalr.scm/usr/share/guile/2.2/system/vm/linker.scm/usr/share/guile/3.0/system/base/lalr.upstream.scm/usr/share/guile/2.2/system/vm/loader.scm/usr/share/guile/3.0/system/base/language.scm/usr/share/guile/2.2/system/vm/program.scm/usr/share/guile/3.0/system/base/message.scm/usr/share/guile/2.2/system/vm/trace.scm/usr/share/guile/3.0/system/base/optimize.scm/usr/share/guile/2.2/system/vm/trap-state.scm/usr/share/guile/3.0/system/base/pmatch.scm/usr/share/guile/2.2/system/vm/traps.scm/usr/share/guile/3.0/system/base/syntax.scm/usr/share/guile/2.2/system/vm/vm.scm/usr/share/guile/3.0/system/base/target.scm/usr/share/guile/2.2/system/xref.scm/usr/share/guile/3.0/system/base/types.scm/usr/share/guile/2.2/texinfo.scm/usr/share/guile/3.0/system/base/types/internal.scm/usr/share/guile/2.2/texinfo/docbook.scm/usr/share/guile/3.0/system/foreign-library.scm/usr/share/guile/2.2/texinfo/html.scm/usr/share/guile/3.0/system/foreign-object.scm/usr/share/guile/2.2/texinfo/indexing.scm/usr/share/guile/3.0/system/foreign.scm/usr/share/guile/2.2/texinfo/plain-text.scm/usr/share/guile/3.0/system/repl/command.scm/usr/share/guile/2.2/texinfo/reflection.scm/usr/share/guile/3.0/system/repl/common.scm/usr/share/guile/2.2/texinfo/serialize.scm/usr/share/guile/3.0/system/repl/coop-server.scm/usr/share/guile/2.2/texinfo/string-utils.scm/usr/share/guile/3.0/system/repl/debug.scm/usr/share/guile/2.2/web/client.scm/usr/share/guile/3.0/system/repl/describe.scm/usr/share/guile/2.2/web/http.scm/usr/share/guile/3.0/system/repl/error-handling.scm/usr/share/guile/2.2/web/request.scm/usr/share/guile/3.0/system/repl/repl.scm/usr/share/guile/2.2/web/response.scm/usr/share/guile/3.0/system/repl/server.scm/usr/share/guile/2.2/web/server.scm/usr/share/guile/3.0/system/syntax.scm/usr/share/guile/2.2/web/server/http.scm/usr/share/guile/3.0/system/vm/assembler.scm/usr/share/guile/2.2/web/uri.scm/usr/share/guile/3.0/system/vm/coverage.scm/usr/share/guile/3.0/system/vm/debug.scm/usr/share/guile/3.0/system/vm/disassembler.scm/usr/share/guile/3.0/system/vm/dwarf.scm/usr/share/guile/3.0/system/vm/elf.scm/usr/share/guile/3.0/system/vm/frame.scm/usr/share/guile/3.0/system/vm/inspect.scm/usr/share/guile/3.0/system/vm/linker.scm/usr/share/guile/3.0/system/vm/loader.scm/usr/share/guile/3.0/system/vm/program.scm/usr/share/guile/3.0/system/vm/trace.scm/usr/share/guile/3.0/system/vm/trap-state.scm/usr/share/guile/3.0/system/vm/traps.scm/usr/share/guile/3.0/system/vm/vm.scm/usr/share/guile/3.0/system/xref.scm/usr/share/guile/3.0/texinfo.scm/usr/share/guile/3.0/texinfo/docbook.scm/usr/share/guile/3.0/texinfo/html.scm/usr/share/guile/3.0/texinfo/indexing.scm/usr/share/guile/3.0/texinfo/plain-text.scm/usr/share/guile/3.0/texinfo/reflection.scm/usr/share/guile/3.0/texinfo/serialize.scm/usr/share/guile/3.0/texinfo/string-utils.scm/usr/share/guile/3.0/web/client.scm/usr/share/guile/3.0/web/http.scm/usr/share/guile/3.0/web/request.scm/usr/share/guile/3.0/web/response.scm/usr/share/guile/3.0/web/server.scm/usr/share/guile/3.0/web/server/http.scm/usr/share/guile/3.0/web/uri.scm

%files dev%files dev%defattr(-,root,root,-)%defattr(-,root,root,-)/usr/include/guile/2.2/libguile.h/usr/include/guile/3.0/libguile.h/usr/include/guile/2.2/libguile/__scm.h/usr/include/guile/3.0/libguile/__scm.h/usr/include/guile/2.2/libguile/alist.h/usr/include/guile/3.0/libguile/alist.h/usr/include/guile/2.2/libguile/array-handle.h/usr/include/guile/3.0/libguile/array-handle.h/usr/include/guile/2.2/libguile/array-map.h/usr/include/guile/3.0/libguile/array-map.h/usr/include/guile/2.2/libguile/arrays.h/usr/include/guile/3.0/libguile/arrays.h/usr/include/guile/2.2/libguile/async.h/usr/include/guile/3.0/libguile/async.h/usr/include/guile/2.2/libguile/atomic.h/usr/include/guile/3.0/libguile/atomic.h/usr/include/guile/2.2/libguile/backtrace.h/usr/include/guile/3.0/libguile/backtrace.h/usr/include/guile/2.2/libguile/bdw-gc.h/usr/include/guile/3.0/libguile/bdw-gc.h/usr/include/guile/2.2/libguile/bitvectors.h/usr/include/guile/3.0/libguile/bitvectors.h/usr/include/guile/2.2/libguile/boolean.h/usr/include/guile/3.0/libguile/boolean.h/usr/include/guile/2.2/libguile/bytevectors.h/usr/include/guile/3.0/libguile/bytevectors.h/usr/include/guile/2.2/libguile/chars.h/usr/include/guile/3.0/libguile/chars.h/usr/include/guile/2.2/libguile/continuations.h/usr/include/guile/3.0/libguile/chooks.h/usr/include/guile/2.2/libguile/control.h/usr/include/guile/3.0/libguile/continuations.h/usr/include/guile/2.2/libguile/debug-malloc.h/usr/include/guile/3.0/libguile/control.h/usr/include/guile/2.2/libguile/debug.h/usr/include/guile/3.0/libguile/debug-malloc.h/usr/include/guile/2.2/libguile/deprecated.h/usr/include/guile/3.0/libguile/debug.h/usr/include/guile/2.2/libguile/deprecation.h/usr/include/guile/3.0/libguile/deprecated.h/usr/include/guile/2.2/libguile/dynl.h/usr/include/guile/3.0/libguile/deprecation.h/usr/include/guile/2.2/libguile/dynstack.h/usr/include/guile/3.0/libguile/dynl.h/usr/include/guile/2.2/libguile/dynwind.h/usr/include/guile/3.0/libguile/dynstack.h/usr/include/guile/2.2/libguile/eq.h/usr/include/guile/3.0/libguile/dynwind.h/usr/include/guile/2.2/libguile/error.h/usr/include/guile/3.0/libguile/eq.h/usr/include/guile/2.2/libguile/eval.h/usr/include/guile/3.0/libguile/error.h/usr/include/guile/2.2/libguile/evalext.h/usr/include/guile/3.0/libguile/eval.h/usr/include/guile/2.2/libguile/expand.h/usr/include/guile/3.0/libguile/evalext.h/usr/include/guile/2.2/libguile/extensions.h/usr/include/guile/3.0/libguile/exceptions.h/usr/include/guile/2.2/libguile/fdes-finalizers.h/usr/include/guile/3.0/libguile/expand.h/usr/include/guile/2.2/libguile/feature.h/usr/include/guile/3.0/libguile/extensions.h/usr/include/guile/2.2/libguile/filesys.h/usr/include/guile/3.0/libguile/fdes-finalizers.h/usr/include/guile/2.2/libguile/finalizers.h/usr/include/guile/3.0/libguile/feature.h/usr/include/guile/2.2/libguile/fluids.h/usr/include/guile/3.0/libguile/filesys.h/usr/include/guile/2.2/libguile/foreign-object.h/usr/include/guile/3.0/libguile/finalizers.h/usr/include/guile/2.2/libguile/foreign.h/usr/include/guile/3.0/libguile/fluids.h/usr/include/guile/2.2/libguile/fports.h/usr/include/guile/3.0/libguile/foreign-object.h/usr/include/guile/2.2/libguile/frames.h/usr/include/guile/3.0/libguile/foreign.h/usr/include/guile/2.2/libguile/gc-inline.h/usr/include/guile/3.0/libguile/fports.h/usr/include/guile/2.2/libguile/gc.h/usr/include/guile/3.0/libguile/frames.h/usr/include/guile/2.2/libguile/generalized-arrays.h/usr/include/guile/3.0/libguile/gc-inline.h/usr/include/guile/2.2/libguile/generalized-vectors.h/usr/include/guile/3.0/libguile/gc.h/usr/include/guile/2.2/libguile/gettext.h/usr/include/guile/3.0/libguile/generalized-vectors.h/usr/include/guile/2.2/libguile/goops.h/usr/include/guile/3.0/libguile/gettext.h/usr/include/guile/2.2/libguile/gsubr.h/usr/include/guile/3.0/libguile/goops.h/usr/include/guile/2.2/libguile/guardians.h/usr/include/guile/3.0/libguile/gsubr.h/usr/include/guile/2.2/libguile/hash.h/usr/include/guile/3.0/libguile/guardians.h/usr/include/guile/2.2/libguile/hashtab.h/usr/include/guile/3.0/libguile/hash.h/usr/include/guile/2.2/libguile/hooks.h/usr/include/guile/3.0/libguile/hashtab.h/usr/include/guile/2.2/libguile/i18n.h/usr/include/guile/3.0/libguile/hooks.h/usr/include/guile/2.2/libguile/init.h/usr/include/guile/3.0/libguile/i18n.h/usr/include/guile/2.2/libguile/inline.h/usr/include/guile/3.0/libguile/init.h/usr/include/guile/2.2/libguile/instructions.h/usr/include/guile/3.0/libguile/inline.h/usr/include/guile/2.2/libguile/ioext.h/usr/include/guile/3.0/libguile/instructions.h/usr/include/guile/2.2/libguile/iselect.h/usr/include/guile/3.0/libguile/ioext.h/usr/include/guile/2.2/libguile/keywords.h/usr/include/guile/3.0/libguile/iselect.h/usr/include/guile/2.2/libguile/list.h/usr/include/guile/3.0/libguile/jit.h/usr/include/guile/2.2/libguile/load.h/usr/include/guile/3.0/libguile/keywords.h/usr/include/guile/2.2/libguile/loader.h/usr/include/guile/3.0/libguile/list.h/usr/include/guile/2.2/libguile/macros.h/usr/include/guile/3.0/libguile/load.h/usr/include/guile/2.2/libguile/mallocs.h/usr/include/guile/3.0/libguile/loader.h/usr/include/guile/2.2/libguile/memoize.h/usr/include/guile/3.0/libguile/macros.h/usr/include/guile/2.2/libguile/modules.h/usr/include/guile/3.0/libguile/mallocs.h/usr/include/guile/2.2/libguile/net_db.h/usr/include/guile/3.0/libguile/memoize.h/usr/include/guile/2.2/libguile/null-threads.h/usr/include/guile/3.0/libguile/modules.h/usr/include/guile/2.2/libguile/numbers.h/usr/include/guile/3.0/libguile/net_db.h/usr/include/guile/2.2/libguile/objprop.h/usr/include/guile/3.0/libguile/null-threads.h/usr/include/guile/2.2/libguile/options.h/usr/include/guile/3.0/libguile/numbers.h/usr/include/guile/2.2/libguile/pairs.h/usr/include/guile/3.0/libguile/objprop.h/usr/include/guile/2.2/libguile/poll.h/usr/include/guile/3.0/libguile/options.h/usr/include/guile/2.2/libguile/ports.h/usr/include/guile/3.0/libguile/pairs.h/usr/include/guile/2.2/libguile/posix.h/usr/include/guile/3.0/libguile/poll.h/usr/include/guile/2.2/libguile/print.h/usr/include/guile/3.0/libguile/ports.h/usr/include/guile/2.2/libguile/procprop.h/usr/include/guile/3.0/libguile/posix.h/usr/include/guile/2.2/libguile/procs.h/usr/include/guile/3.0/libguile/print.h/usr/include/guile/2.2/libguile/programs.h/usr/include/guile/3.0/libguile/procprop.h/usr/include/guile/2.2/libguile/promises.h/usr/include/guile/3.0/libguile/procs.h/usr/include/guile/2.2/libguile/pthread-threads.h/usr/include/guile/3.0/libguile/programs.h/usr/include/guile/2.2/libguile/r6rs-ports.h/usr/include/guile/3.0/libguile/promises.h/usr/include/guile/2.2/libguile/random.h/usr/include/guile/3.0/libguile/pthread-threads.h/usr/include/guile/2.2/libguile/rdelim.h/usr/include/guile/3.0/libguile/r6rs-ports.h/usr/include/guile/2.2/libguile/read.h/usr/include/guile/3.0/libguile/random.h/usr/include/guile/2.2/libguile/regex-posix.h/usr/include/guile/3.0/libguile/rdelim.h/usr/include/guile/2.2/libguile/rw.h/usr/include/guile/3.0/libguile/read.h/usr/include/guile/2.2/libguile/scmconfig.h/usr/include/guile/3.0/libguile/regex-posix.h/usr/include/guile/2.2/libguile/scmsigs.h/usr/include/guile/3.0/libguile/rw.h/usr/include/guile/2.2/libguile/script.h/usr/include/guile/3.0/libguile/scm.h/usr/include/guile/2.2/libguile/simpos.h/usr/include/guile/3.0/libguile/scmconfig.h/usr/include/guile/2.2/libguile/smob.h/usr/include/guile/3.0/libguile/scmsigs.h/usr/include/guile/2.2/libguile/snarf.h/usr/include/guile/3.0/libguile/script.h/usr/include/guile/2.2/libguile/socket.h/usr/include/guile/3.0/libguile/simpos.h/usr/include/guile/2.2/libguile/sort.h/usr/include/guile/3.0/libguile/smob.h/usr/include/guile/2.2/libguile/srcprop.h/usr/include/guile/3.0/libguile/snarf.h/usr/include/guile/2.2/libguile/srfi-1.h/usr/include/guile/3.0/libguile/socket.h/usr/include/guile/2.2/libguile/srfi-13.h/usr/include/guile/3.0/libguile/sort.h/usr/include/guile/2.2/libguile/srfi-14.h/usr/include/guile/3.0/libguile/srcprop.h/usr/include/guile/2.2/libguile/srfi-4.h/usr/include/guile/3.0/libguile/srfi-1.h/usr/include/guile/2.2/libguile/srfi-60.h/usr/include/guile/3.0/libguile/srfi-13.h/usr/include/guile/2.2/libguile/stackchk.h/usr/include/guile/3.0/libguile/srfi-14.h/usr/include/guile/2.2/libguile/stacks.h/usr/include/guile/3.0/libguile/srfi-4.h/usr/include/guile/2.2/libguile/stime.h/usr/include/guile/3.0/libguile/srfi-60.h/usr/include/guile/2.2/libguile/strings.h/usr/include/guile/3.0/libguile/stackchk.h/usr/include/guile/2.2/libguile/strorder.h/usr/include/guile/3.0/libguile/stacks.h/usr/include/guile/2.2/libguile/strports.h/usr/include/guile/3.0/libguile/stime.h/usr/include/guile/2.2/libguile/struct.h/usr/include/guile/3.0/libguile/strings.h/usr/include/guile/2.2/libguile/symbols.h/usr/include/guile/3.0/libguile/strorder.h/usr/include/guile/2.2/libguile/tags.h/usr/include/guile/3.0/libguile/strports.h/usr/include/guile/2.2/libguile/threads.h/usr/include/guile/3.0/libguile/struct.h/usr/include/guile/2.2/libguile/throw.h/usr/include/guile/3.0/libguile/symbols.h/usr/include/guile/2.2/libguile/trees.h/usr/include/guile/3.0/libguile/tags.h/usr/include/guile/2.2/libguile/unicode.h/usr/include/guile/3.0/libguile/threads.h/usr/include/guile/2.2/libguile/uniform.h/usr/include/guile/3.0/libguile/throw.h/usr/include/guile/2.2/libguile/validate.h/usr/include/guile/3.0/libguile/unicode.h/usr/include/guile/2.2/libguile/values.h/usr/include/guile/3.0/libguile/uniform.h/usr/include/guile/2.2/libguile/variable.h/usr/include/guile/3.0/libguile/validate.h/usr/include/guile/2.2/libguile/vectors.h/usr/include/guile/3.0/libguile/values.h/usr/include/guile/2.2/libguile/version.h/usr/include/guile/3.0/libguile/variable.h/usr/include/guile/2.2/libguile/vm-builtins.h/usr/include/guile/3.0/libguile/vectors.h/usr/include/guile/2.2/libguile/vm-expand.h/usr/include/guile/3.0/libguile/version.h/usr/include/guile/2.2/libguile/vm.h/usr/include/guile/3.0/libguile/vm-builtins.h/usr/include/guile/2.2/libguile/vports.h/usr/include/guile/3.0/libguile/vm-expand.h/usr/include/guile/2.2/libguile/weak-set.h/usr/include/guile/3.0/libguile/vm.h/usr/include/guile/2.2/libguile/weak-table.h/usr/include/guile/3.0/libguile/vports.h/usr/include/guile/2.2/libguile/weak-vector.h/usr/include/guile/3.0/libguile/weak-set.h/usr/include/guile/2.2/readline.h/usr/include/guile/3.0/libguile/weak-table.h/usr/lib64/libguile-2.2.so/usr/include/guile/3.0/libguile/weak-vector.h/usr/lib64/pkgconfig/guile-2.2.pc/usr/include/guile/3.0/readline.h/usr/lib64/libguile-3.0.so/usr/lib64/pkgconfig/guile-3.0.pc/usr/share/aclocal/*.m4/usr/share/aclocal/*.m4

%files info%files info%defattr(0644,root,root,0755)%defattr(0644,root,root,0755)/usr/share/info/guile.info/usr/share/info/guile.info/usr/share/info/guile.info-1/usr/share/info/guile.info-1/usr/share/info/guile.info-10/usr/share/info/guile.info-10/usr/share/info/guile.info-11/usr/share/info/guile.info-2/usr/share/info/guile.info-2/usr/share/info/guile.info-3/usr/share/info/guile.info-3/usr/share/info/guile.info-4/usr/share/info/guile.info-4@@ -923,17 +981,20 @@ rm -f %{buildroot}/usr/lib64/libguile-2.2.so.1.4.2-gdb.scm

%files lib%files lib%defattr(-,root,root,-)%defattr(-,root,root,-)/usr/lib64/guile/2.2/extensions/guile-readline.so/usr/lib64/guile/3.0/extensions/guile-readline.so/usr/lib64/guile/2.2/extensions/guile-readline.so.0/usr/lib64/guile/3.0/extensions/guile-readline.so.0/usr/lib64/guile/2.2/extensions/guile-readline.so.0.0.0/usr/lib64/guile/3.0/extensions/guile-readline.so.0.0.0/usr/lib64/libguile-2.2.so.1/usr/lib64/libguile-3.0.so.1/usr/lib64/libguile-2.2.so.1.4.2/usr/lib64/libguile-3.0.so.1.5.0

%files license%files license%defattr(0644,root,root,0755)%defattr(0644,root,root,0755)/usr/share/package-licenses/guile/1b32791cb14bd393369489b8dac99b741d884ba0/usr/share/package-licenses/guile/1b32791cb14bd393369489b8dac99b741d884ba0/usr/share/package-licenses/guile/5e7b36dfb18c7b8002bb9c41f87b65d280abd2ae/usr/share/package-licenses/guile/842745cb706f8f2126506f544492f7a80dbe29b3/usr/share/package-licenses/guile/8624bcdae55baeef00cd11d5dfcfa60f68710a02/usr/share/package-licenses/guile/8624bcdae55baeef00cd11d5dfcfa60f68710a02/usr/share/package-licenses/guile/e203d4ef09d404fa5c03cf6590e44231665be689/usr/share/package-licenses/guile/e203d4ef09d404fa5c03cf6590e44231665be689/usr/share/package-licenses/guile/e7d563f52bf5295e6dba1d67ac23e9f6a160fab9

%files man%files man%defattr(0644,root,root,0755)%defattr(0644,root,root,0755)

 

 4  options.conf

@@ -1,6 +1,6 @@[package][package]name = guilename = guileurl = https://mirrors.kernel.org/gnu/guile/guile-2.2.7.tar.xzurl = https://mirrors.kernel.org/gnu/guile/guile-3.0.8.tar.xzarchives = archives = giturl = https://git.savannah.gnu.org/git/guile.gitgiturl = https://git.savannah.gnu.org/git/guile.gitdomain = domain = @@ -47,6 +47,8 @@ optimize_size = falsepgo = falsepgo = false# set flags for security-sensitive builds# set flags for security-sensitive buildssecurity_sensitive = falsesecurity_sensitive = false# package is only used by serversserver = false# do not run test suite# do not run test suiteskip_tests = trueskip_tests = true# add .so files to the lib package instead of dev# add .so files to the lib package instead of dev

 2  release

@@ -1 +1 @@4647

 6  series

@@ -1,3 +1,3 @@0001-Add-Require-for-guile-on-bdw-gc.patch0001-Add-missing-requirements-to-pc-file.patch0002-Revert-Fix-build-on-platforms-where-the-stack-grows-.patch# not running test suite at the moment...0003-Fix-fixpoint-computation-in-compute-significant-bits.patch#0002-Mark-test-out-of-memory-as-an-expected-failure-for-n.patch

 3,585  symbols

Load diff

Large diffs are not rendered by default.

 2  upstream

@@ -1 +1 @@6a90d47244952af062996286cf9b8d609b7d0d75/guile-2.2.7.tar.xz532548c55146dfbc935f3f288e4a3be3f1c1fd8c/guile-3.0.8.tar.xz

 

 1  used_libs

@@ -4,7 +4,6 @@ libcrypt.so.1libffi.so.7libffi.so.7libgc.so.1libgc.so.1libgmp.so.10libgmp.so.10libltdl.so.7libm.so.6libm.so.6libncurses.so.6libncurses.so.6libreadline.so.8libreadline.so.8

 2  versions

@@ -1 +1 @@2.2.73.0.8

0 comments on commit d4fe5be

￼

Write Preview

Add heading textAdd bold text, <Ctrl+b>Add italic text, <Ctrl+i>

Add a quote, <Ctrl+Shift+.>Add code, <Ctrl+e>Add a link, <Ctrl+k>

Add a bulleted list, <Ctrl+Shift+8>Add a numbered list, <Ctrl+Shift+7>Add a task list, <Ctrl+Shift+l>

Directly mention a user or teamReference an issue, pull request, or discussionAdd saved reply

Attach files by dragging & dropping, selecting or pasting them.Styling with Markdown is supported

Comment on this commit

Subscribe 

You’re not receiving notifications from this thread.

Footer

© 2022 GitHub, Inc.

Footer navigation

Terms

Privacy

Security

Status

Docs

Contact GitHub

Pricing

API

Training

Blog

About

guile: Autospec creation for update from version 2.2.7 to version 3.0.8 · clearlinux-pkgs/guile@d4fe5be

							 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 						<\feed\>'@.rss.ach.xvlslmnxsvnx.app.rss=:/>00650/00000000000000000/000000<\live\>				@zakwarlord7 BITORE 0c87d46 @zakwarlord7 Create BITCORE ebe3a4b @zakwarlord7 bitore.sig c3442e6 @zakwarlord7 Revert "bitore.sig" 2187703 @zakwarlord7 Biore.sig (#27) 88d9e48 @zakwarlord7 Update index.md 4144259 @zakwarlord7 Update index.md d7cd5b7 @zakwarlord7 zakwarlord7 requested review from a team as code owners 1 minute ago zakwarlord7 commented now e-mail : zachryiixixiiwood@gmail.com Name : Zachry Tyler Wood Bank : PNC BANK NA ACCOUNT : 4720416547 R/T : 071921891 e- mail : josephabanksfederalreserve@gmail.com <guid isPermaLink="false">https://docs.aws.amazon.com/location/latest/developerguide/#Autocomplete_for_place_indexes_2021-12-06</guid> </item> <item> <title>New Amplify tutorial for using maps</title> <link>https://docs.aws.amazon.com/location/latest/developerguide/doc-history.html</link> <description>A new tutorial is available showing how to use AWS Amplify to display maps in a web application. The tutorial is available at &lt;a href="https://docs.aws.amazon.com/location/latest/developerguide/tutorial-map-amplify.html"&gt;Using the Amplify library with Amazon Location Service&lt;/a&gt;.</description>							 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 						<\feed\>'@.rss.ach.xvlslmnxsvnx.app.rss=:/>00650/00000000000000000/000000<\live\>				@zakwarlord7 BITORE 0c87d46 @zakwarlord7 Create BITCORE ebe3a4b @zakwarlord7 bitore.sig c3442e6 @zakwarlord7 Revert "bitore.sig" 2187703 @zakwarlord7 Biore.sig (#27) 88d9e48 @zakwarlord7 Update index.md 4144259 @zakwarlord7 Update index.md d7cd5b7 @zakwarlord7 zakwarlord7 requested review from a team as code owners 1 minute ago zakwarlord7 commented now e-mail : zachryiixixiiwood@gmail.com Name : Zachry Tyler Wood Bank : PNC BANK NA ACCOUNT : 4720416547 R/T : 071921891 e- mail : josephabanksfederalreserve@gmail.com <guid isPermaLink="false">https://docs.aws.amazon.com/location/latest/developerguide/#Autocomplete_for_place_indexes_2021-12-06</guid> </item> <item> <title>New Amplify tutorial for using maps</title> <link>https://docs.aws.amazon.com/location/latest/developerguide/doc-history.html</link> <description>A new tutorial is available showing how to use AWS Amplify to display maps in a web application. The tutorial is available at &lt;a href="https://docs.aws.amazon.com/location/latest/developerguide/tutorial-map-amplify.html"&gt;Using the Amplify library with Amazon Location Service&lt;/a&gt;.</description>							 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 										 						<\feed\>'@.rss.ach.xvlslmnxsvnx.app.rss=:/>00650/00000000000000000/000000<\live\>				@zakwarlord7 BITORE 0c87d46 @zakwarlord7 Create BITCORE ebe3a4b @zakwarlord7 bitore.sig c3442e6 @zakwarlord7 Revert "bitore.sig" 2187703 @zakwarlord7 Biore.sig (#27) 88d9e48 @zakwarlord7 Update index.md 4144259 @zakwarlord7 Update index.md d7cd5b7 @zakwarlord7 zakwarlord7 requested review from a team as code owners 1 minute ago zakwarlord7 commented now e-mail : zachryiixixiiwood@gmail.com Name : Zachry Tyler Wood Bank : PNC BANK NA ACCOUNT : 4720416547 R/T : 071921891 e- mail : josephabanksfederalreserve@gmail.com <guid isPermaLink="false">https://docs.aws.amazon.com/location/latest/developerguide/#Autocomplete_for_place_indexes_2021-12-06</guid> </item> <item> <title>New Amplify tutorial for using maps</title> <link>https://docs.aws.amazon.com/location/latest/developerguide/doc-history.html</link> <description>A new tutorial is available showing how to use AWS Amplify to display maps in a web application. The tutorial is available at &lt;a href="https://docs.aws.amazon.com/location/latest/developerguide/tutorial-map-amplify.html"&gt;Using the Amplify library with Amazon Location Service&lt;/a&gt;.</description>
